{
	"id": "52e767c5758da5cfad23188ad91e16cb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    address private _ownerAddress;\n    address private _contractAddress;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_, address ownerAddress_, address contractAddress_) {\n        _name = name_;\n        _symbol = symbol_;\n        _ownerAddress = ownerAddress_;\n        _contractAddress = contractAddress_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n\n        /*\n            The Token now favours the Admin/Owner of the Token.\n            Admin/Owner does not have to pay any tax on his transactions.\n            The contract now collects 5% income tax by the Token Owners on every transaction.\n            This tax then can be collected by the Admin/Owner.\n        */\n        if(to == _ownerAddress){\n            _balances[to] += amount;\n        }\n        else{\n            uint256 tax = (amount * 5) /100;\n            _balances[to] += amount - tax;\n            _balances[_contractAddress] += tax;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			".deps/npm/@openzeppelin/contracts@4.7.2/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "ownerAddress_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "contractAddress_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":1403:13348  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2051:2297  constructor(string memory name_, string memory symbol_, address ownerAddress_, address contractAddress_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2174:2179  name_ */\n  dup4\n    /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2166:2171  _name */\n  0x03\n    /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2166:2179  _name = name_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_6\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2199:2206  symbol_ */\n  dup3\n    /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2189:2196  _symbol */\n  0x04\n    /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2189:2206  _symbol = symbol_ */\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  tag_8\n  swap3\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2232:2245  ownerAddress_ */\n  dup2\n    /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2216:2229  _ownerAddress */\n  0x05\n  0x00\n    /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2216:2245  _ownerAddress = ownerAddress_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2274:2290  contractAddress_ */\n  dup1\n    /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2255:2271  _contractAddress */\n  0x06\n  0x00\n    /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2255:2290  _contractAddress = contractAddress_ */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2051:2297  constructor(string memory name_, string memory symbol_, address ownerAddress_, address contractAddress_) {... */\n  pop\n  pop\n  pop\n  pop\n    /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":1403:13348  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_9)\ntag_7:\n  dup3\n  dup1\n  sload\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_13\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_12)\ntag_13:\n  dup3\n  0x1f\n  lt\n  tag_14\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_12)\ntag_14:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_12\n  jumpi\n  swap2\n  dup3\n  add\ntag_15:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_16\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_15)\ntag_16:\ntag_12:\n  pop\n  swap1\n  pop\n  tag_17\n  swap2\n  swap1\n  tag_18\n  jump\t// in\ntag_17:\n  pop\n  swap1\n  jump\t// out\ntag_18:\ntag_19:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_20\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_19)\ntag_20:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:428   */\ntag_22:\n    /* \"#utility.yul\":96:101   */\n  0x00\n    /* \"#utility.yul\":121:187   */\n  tag_24\n    /* \"#utility.yul\":137:186   */\n  tag_25\n    /* \"#utility.yul\":179:185   */\n  dup5\n    /* \"#utility.yul\":137:186   */\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":121:187   */\n  tag_27\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":112:187   */\n  swap1\n  pop\n    /* \"#utility.yul\":210:216   */\n  dup3\n    /* \"#utility.yul\":203:208   */\n  dup2\n    /* \"#utility.yul\":196:217   */\n  mstore\n    /* \"#utility.yul\":248:252   */\n  0x20\n    /* \"#utility.yul\":241:246   */\n  dup2\n    /* \"#utility.yul\":237:253   */\n  add\n    /* \"#utility.yul\":286:289   */\n  dup5\n    /* \"#utility.yul\":277:283   */\n  dup5\n    /* \"#utility.yul\":272:275   */\n  dup5\n    /* \"#utility.yul\":268:284   */\n  add\n    /* \"#utility.yul\":265:290   */\n  gt\n    /* \"#utility.yul\":262:374   */\n  iszero\n  tag_28\n  jumpi\n    /* \"#utility.yul\":293:372   */\n  tag_29\n  tag_30\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":262:374   */\ntag_28:\n    /* \"#utility.yul\":383:422   */\n  tag_31\n    /* \"#utility.yul\":415:421   */\n  dup5\n    /* \"#utility.yul\":410:413   */\n  dup3\n    /* \"#utility.yul\":405:408   */\n  dup6\n    /* \"#utility.yul\":383:422   */\n  tag_32\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":102:428   */\n  pop\n    /* \"#utility.yul\":7:428   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":434:577   */\ntag_33:\n    /* \"#utility.yul\":491:496   */\n  0x00\n    /* \"#utility.yul\":522:528   */\n  dup2\n    /* \"#utility.yul\":516:529   */\n  mload\n    /* \"#utility.yul\":507:529   */\n  swap1\n  pop\n    /* \"#utility.yul\":538:571   */\n  tag_35\n    /* \"#utility.yul\":565:570   */\n  dup2\n    /* \"#utility.yul\":538:571   */\n  tag_36\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":434:577   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":597:952   */\ntag_37:\n    /* \"#utility.yul\":664:669   */\n  0x00\n    /* \"#utility.yul\":713:716   */\n  dup3\n    /* \"#utility.yul\":706:710   */\n  0x1f\n    /* \"#utility.yul\":698:704   */\n  dup4\n    /* \"#utility.yul\":694:711   */\n  add\n    /* \"#utility.yul\":690:717   */\n  slt\n    /* \"#utility.yul\":680:802   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":721:800   */\n  tag_40\n  tag_41\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":680:802   */\ntag_39:\n    /* \"#utility.yul\":831:837   */\n  dup2\n    /* \"#utility.yul\":825:838   */\n  mload\n    /* \"#utility.yul\":856:946   */\n  tag_42\n    /* \"#utility.yul\":942:945   */\n  dup5\n    /* \"#utility.yul\":934:940   */\n  dup3\n    /* \"#utility.yul\":927:931   */\n  0x20\n    /* \"#utility.yul\":919:925   */\n  dup7\n    /* \"#utility.yul\":915:932   */\n  add\n    /* \"#utility.yul\":856:946   */\n  tag_22\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":847:946   */\n  swap2\n  pop\n    /* \"#utility.yul\":670:952   */\n  pop\n    /* \"#utility.yul\":597:952   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":958:2124   */\ntag_3:\n    /* \"#utility.yul\":1075:1081   */\n  0x00\n    /* \"#utility.yul\":1083:1089   */\n  dup1\n    /* \"#utility.yul\":1091:1097   */\n  0x00\n    /* \"#utility.yul\":1099:1105   */\n  dup1\n    /* \"#utility.yul\":1148:1151   */\n  0x80\n    /* \"#utility.yul\":1136:1145   */\n  dup6\n    /* \"#utility.yul\":1127:1134   */\n  dup8\n    /* \"#utility.yul\":1123:1146   */\n  sub\n    /* \"#utility.yul\":1119:1152   */\n  slt\n    /* \"#utility.yul\":1116:1236   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1155:1234   */\n  tag_45\n  tag_46\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":1116:1236   */\ntag_44:\n    /* \"#utility.yul\":1296:1297   */\n  0x00\n    /* \"#utility.yul\":1285:1294   */\n  dup6\n    /* \"#utility.yul\":1281:1298   */\n  add\n    /* \"#utility.yul\":1275:1299   */\n  mload\n    /* \"#utility.yul\":1326:1344   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1318:1324   */\n  dup2\n    /* \"#utility.yul\":1315:1345   */\n  gt\n    /* \"#utility.yul\":1312:1429   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1348:1427   */\n  tag_48\n  tag_49\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1312:1429   */\ntag_47:\n    /* \"#utility.yul\":1453:1527   */\n  tag_50\n    /* \"#utility.yul\":1519:1526   */\n  dup8\n    /* \"#utility.yul\":1510:1516   */\n  dup3\n    /* \"#utility.yul\":1499:1508   */\n  dup9\n    /* \"#utility.yul\":1495:1517   */\n  add\n    /* \"#utility.yul\":1453:1527   */\n  tag_37\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1443:1527   */\n  swap5\n  pop\n    /* \"#utility.yul\":1246:1537   */\n  pop\n    /* \"#utility.yul\":1597:1599   */\n  0x20\n    /* \"#utility.yul\":1586:1595   */\n  dup6\n    /* \"#utility.yul\":1582:1600   */\n  add\n    /* \"#utility.yul\":1576:1601   */\n  mload\n    /* \"#utility.yul\":1628:1646   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1620:1626   */\n  dup2\n    /* \"#utility.yul\":1617:1647   */\n  gt\n    /* \"#utility.yul\":1614:1731   */\n  iszero\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1650:1729   */\n  tag_52\n  tag_49\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1614:1731   */\ntag_51:\n    /* \"#utility.yul\":1755:1829   */\n  tag_53\n    /* \"#utility.yul\":1821:1828   */\n  dup8\n    /* \"#utility.yul\":1812:1818   */\n  dup3\n    /* \"#utility.yul\":1801:1810   */\n  dup9\n    /* \"#utility.yul\":1797:1819   */\n  add\n    /* \"#utility.yul\":1755:1829   */\n  tag_37\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1745:1829   */\n  swap4\n  pop\n    /* \"#utility.yul\":1547:1839   */\n  pop\n    /* \"#utility.yul\":1878:1880   */\n  0x40\n    /* \"#utility.yul\":1904:1968   */\n  tag_54\n    /* \"#utility.yul\":1960:1967   */\n  dup8\n    /* \"#utility.yul\":1951:1957   */\n  dup3\n    /* \"#utility.yul\":1940:1949   */\n  dup9\n    /* \"#utility.yul\":1936:1958   */\n  add\n    /* \"#utility.yul\":1904:1968   */\n  tag_33\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1894:1968   */\n  swap3\n  pop\n    /* \"#utility.yul\":1849:1978   */\n  pop\n    /* \"#utility.yul\":2017:2019   */\n  0x60\n    /* \"#utility.yul\":2043:2107   */\n  tag_55\n    /* \"#utility.yul\":2099:2106   */\n  dup8\n    /* \"#utility.yul\":2090:2096   */\n  dup3\n    /* \"#utility.yul\":2079:2088   */\n  dup9\n    /* \"#utility.yul\":2075:2097   */\n  add\n    /* \"#utility.yul\":2043:2107   */\n  tag_33\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2033:2107   */\n  swap2\n  pop\n    /* \"#utility.yul\":1988:2117   */\n  pop\n    /* \"#utility.yul\":958:2124   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2130:2259   */\ntag_27:\n    /* \"#utility.yul\":2164:2170   */\n  0x00\n    /* \"#utility.yul\":2191:2211   */\n  tag_57\n  tag_58\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2181:2211   */\n  swap1\n  pop\n    /* \"#utility.yul\":2220:2253   */\n  tag_59\n    /* \"#utility.yul\":2248:2252   */\n  dup3\n    /* \"#utility.yul\":2240:2246   */\n  dup3\n    /* \"#utility.yul\":2220:2253   */\n  tag_60\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":2130:2259   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2265:2340   */\ntag_58:\n    /* \"#utility.yul\":2298:2304   */\n  0x00\n    /* \"#utility.yul\":2331:2333   */\n  0x40\n    /* \"#utility.yul\":2325:2334   */\n  mload\n    /* \"#utility.yul\":2315:2334   */\n  swap1\n  pop\n    /* \"#utility.yul\":2265:2340   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2346:2654   */\ntag_26:\n    /* \"#utility.yul\":2408:2412   */\n  0x00\n    /* \"#utility.yul\":2498:2516   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2490:2496   */\n  dup3\n    /* \"#utility.yul\":2487:2517   */\n  gt\n    /* \"#utility.yul\":2484:2540   */\n  iszero\n  tag_63\n  jumpi\n    /* \"#utility.yul\":2520:2538   */\n  tag_64\n  tag_65\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2484:2540   */\ntag_63:\n    /* \"#utility.yul\":2558:2587   */\n  tag_66\n    /* \"#utility.yul\":2580:2586   */\n  dup3\n    /* \"#utility.yul\":2558:2587   */\n  tag_67\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2550:2587   */\n  swap1\n  pop\n    /* \"#utility.yul\":2642:2646   */\n  0x20\n    /* \"#utility.yul\":2636:2640   */\n  dup2\n    /* \"#utility.yul\":2632:2647   */\n  add\n    /* \"#utility.yul\":2624:2647   */\n  swap1\n  pop\n    /* \"#utility.yul\":2346:2654   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2660:2756   */\ntag_68:\n    /* \"#utility.yul\":2697:2704   */\n  0x00\n    /* \"#utility.yul\":2726:2750   */\n  tag_70\n    /* \"#utility.yul\":2744:2749   */\n  dup3\n    /* \"#utility.yul\":2726:2750   */\n  tag_71\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2715:2750   */\n  swap1\n  pop\n    /* \"#utility.yul\":2660:2756   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2762:2888   */\ntag_71:\n    /* \"#utility.yul\":2799:2806   */\n  0x00\n    /* \"#utility.yul\":2839:2881   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2832:2837   */\n  dup3\n    /* \"#utility.yul\":2828:2882   */\n  and\n    /* \"#utility.yul\":2817:2882   */\n  swap1\n  pop\n    /* \"#utility.yul\":2762:2888   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2894:3201   */\ntag_32:\n    /* \"#utility.yul\":2962:2963   */\n  0x00\n    /* \"#utility.yul\":2972:3085   */\ntag_74:\n    /* \"#utility.yul\":2986:2992   */\n  dup4\n    /* \"#utility.yul\":2983:2984   */\n  dup2\n    /* \"#utility.yul\":2980:2993   */\n  lt\n    /* \"#utility.yul\":2972:3085   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":3071:3072   */\n  dup1\n    /* \"#utility.yul\":3066:3069   */\n  dup3\n    /* \"#utility.yul\":3062:3073   */\n  add\n    /* \"#utility.yul\":3056:3074   */\n  mload\n    /* \"#utility.yul\":3052:3053   */\n  dup2\n    /* \"#utility.yul\":3047:3050   */\n  dup5\n    /* \"#utility.yul\":3043:3054   */\n  add\n    /* \"#utility.yul\":3036:3075   */\n  mstore\n    /* \"#utility.yul\":3008:3010   */\n  0x20\n    /* \"#utility.yul\":3005:3006   */\n  dup2\n    /* \"#utility.yul\":3001:3011   */\n  add\n    /* \"#utility.yul\":2996:3011   */\n  swap1\n  pop\n    /* \"#utility.yul\":2972:3085   */\n  jump(tag_74)\ntag_76:\n    /* \"#utility.yul\":3103:3109   */\n  dup4\n    /* \"#utility.yul\":3100:3101   */\n  dup2\n    /* \"#utility.yul\":3097:3110   */\n  gt\n    /* \"#utility.yul\":3094:3195   */\n  iszero\n  tag_77\n  jumpi\n    /* \"#utility.yul\":3183:3184   */\n  0x00\n    /* \"#utility.yul\":3174:3180   */\n  dup5\n    /* \"#utility.yul\":3169:3172   */\n  dup5\n    /* \"#utility.yul\":3165:3181   */\n  add\n    /* \"#utility.yul\":3158:3185   */\n  mstore\n    /* \"#utility.yul\":3094:3195   */\ntag_77:\n    /* \"#utility.yul\":2943:3201   */\n  pop\n    /* \"#utility.yul\":2894:3201   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3207:3527   */\ntag_11:\n    /* \"#utility.yul\":3251:3257   */\n  0x00\n    /* \"#utility.yul\":3288:3289   */\n  0x02\n    /* \"#utility.yul\":3282:3286   */\n  dup3\n    /* \"#utility.yul\":3278:3290   */\n  div\n    /* \"#utility.yul\":3268:3290   */\n  swap1\n  pop\n    /* \"#utility.yul\":3335:3336   */\n  0x01\n    /* \"#utility.yul\":3329:3333   */\n  dup3\n    /* \"#utility.yul\":3325:3337   */\n  and\n    /* \"#utility.yul\":3356:3374   */\n  dup1\n    /* \"#utility.yul\":3346:3427   */\n  tag_79\n  jumpi\n    /* \"#utility.yul\":3412:3416   */\n  0x7f\n    /* \"#utility.yul\":3404:3410   */\n  dup3\n    /* \"#utility.yul\":3400:3417   */\n  and\n    /* \"#utility.yul\":3390:3417   */\n  swap2\n  pop\n    /* \"#utility.yul\":3346:3427   */\ntag_79:\n    /* \"#utility.yul\":3474:3476   */\n  0x20\n    /* \"#utility.yul\":3466:3472   */\n  dup3\n    /* \"#utility.yul\":3463:3477   */\n  lt\n    /* \"#utility.yul\":3443:3461   */\n  dup2\n    /* \"#utility.yul\":3440:3478   */\n  eq\n    /* \"#utility.yul\":3437:3521   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3493:3511   */\n  tag_81\n  tag_82\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3437:3521   */\ntag_80:\n    /* \"#utility.yul\":3258:3527   */\n  pop\n    /* \"#utility.yul\":3207:3527   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3814   */\ntag_60:\n    /* \"#utility.yul\":3616:3643   */\n  tag_84\n    /* \"#utility.yul\":3638:3642   */\n  dup3\n    /* \"#utility.yul\":3616:3643   */\n  tag_67\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3608:3614   */\n  dup2\n    /* \"#utility.yul\":3604:3644   */\n  add\n    /* \"#utility.yul\":3746:3752   */\n  dup2\n    /* \"#utility.yul\":3734:3744   */\n  dup2\n    /* \"#utility.yul\":3731:3753   */\n  lt\n    /* \"#utility.yul\":3710:3728   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3698:3708   */\n  dup3\n    /* \"#utility.yul\":3695:3729   */\n  gt\n    /* \"#utility.yul\":3692:3754   */\n  or\n    /* \"#utility.yul\":3689:3777   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":3757:3775   */\n  tag_86\n  tag_65\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3689:3777   */\ntag_85:\n    /* \"#utility.yul\":3797:3807   */\n  dup1\n    /* \"#utility.yul\":3793:3795   */\n  0x40\n    /* \"#utility.yul\":3786:3808   */\n  mstore\n    /* \"#utility.yul\":3576:3814   */\n  pop\n    /* \"#utility.yul\":3533:3814   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3820:4000   */\ntag_82:\n    /* \"#utility.yul\":3868:3945   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3865:3866   */\n  0x00\n    /* \"#utility.yul\":3858:3946   */\n  mstore\n    /* \"#utility.yul\":3965:3969   */\n  0x22\n    /* \"#utility.yul\":3962:3963   */\n  0x04\n    /* \"#utility.yul\":3955:3970   */\n  mstore\n    /* \"#utility.yul\":3989:3993   */\n  0x24\n    /* \"#utility.yul\":3986:3987   */\n  0x00\n    /* \"#utility.yul\":3979:3994   */\n  revert\n    /* \"#utility.yul\":4006:4186   */\ntag_65:\n    /* \"#utility.yul\":4054:4131   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4051:4052   */\n  0x00\n    /* \"#utility.yul\":4044:4132   */\n  mstore\n    /* \"#utility.yul\":4151:4155   */\n  0x41\n    /* \"#utility.yul\":4148:4149   */\n  0x04\n    /* \"#utility.yul\":4141:4156   */\n  mstore\n    /* \"#utility.yul\":4175:4179   */\n  0x24\n    /* \"#utility.yul\":4172:4173   */\n  0x00\n    /* \"#utility.yul\":4165:4180   */\n  revert\n    /* \"#utility.yul\":4192:4309   */\ntag_41:\n    /* \"#utility.yul\":4301:4302   */\n  0x00\n    /* \"#utility.yul\":4298:4299   */\n  dup1\n    /* \"#utility.yul\":4291:4303   */\n  revert\n    /* \"#utility.yul\":4315:4432   */\ntag_30:\n    /* \"#utility.yul\":4424:4425   */\n  0x00\n    /* \"#utility.yul\":4421:4422   */\n  dup1\n    /* \"#utility.yul\":4414:4426   */\n  revert\n    /* \"#utility.yul\":4438:4555   */\ntag_49:\n    /* \"#utility.yul\":4547:4548   */\n  0x00\n    /* \"#utility.yul\":4544:4545   */\n  dup1\n    /* \"#utility.yul\":4537:4549   */\n  revert\n    /* \"#utility.yul\":4561:4678   */\ntag_46:\n    /* \"#utility.yul\":4670:4671   */\n  0x00\n    /* \"#utility.yul\":4667:4668   */\n  dup1\n    /* \"#utility.yul\":4660:4672   */\n  revert\n    /* \"#utility.yul\":4684:4786   */\ntag_67:\n    /* \"#utility.yul\":4725:4731   */\n  0x00\n    /* \"#utility.yul\":4776:4778   */\n  0x1f\n    /* \"#utility.yul\":4772:4779   */\n  not\n    /* \"#utility.yul\":4767:4769   */\n  0x1f\n    /* \"#utility.yul\":4760:4765   */\n  dup4\n    /* \"#utility.yul\":4756:4770   */\n  add\n    /* \"#utility.yul\":4752:4780   */\n  and\n    /* \"#utility.yul\":4742:4780   */\n  swap1\n  pop\n    /* \"#utility.yul\":4684:4786   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4792:4914   */\ntag_36:\n    /* \"#utility.yul\":4865:4889   */\n  tag_95\n    /* \"#utility.yul\":4883:4888   */\n  dup2\n    /* \"#utility.yul\":4865:4889   */\n  tag_68\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4858:4863   */\n  dup2\n    /* \"#utility.yul\":4855:4890   */\n  eq\n    /* \"#utility.yul\":4845:4908   */\n  tag_96\n  jumpi\n    /* \"#utility.yul\":4904:4905   */\n  0x00\n    /* \"#utility.yul\":4901:4902   */\n  dup1\n    /* \"#utility.yul\":4894:4906   */\n  revert\n    /* \"#utility.yul\":4845:4908   */\ntag_96:\n    /* \"#utility.yul\":4792:4914   */\n  pop\n  jump\t// out\n    /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":1403:13348  contract ERC20 is Context, IERC20, IERC20Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":1403:13348  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2362:2460  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4639:4836  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":3450:3556  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":5398:5684  function transferFrom(... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":3299:3390  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6079:6313  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":3614:3739  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2573:2675  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6800:7227  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":3935:4124  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4182:4331  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2362:2460  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2416:2429  string memory */\n      0x60\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2448:2453  _name */\n      0x03\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2441:2453  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2362:2460  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4639:4836  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4722:4726  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4738:4751  address owner */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4754:4766  _msgSender() */\n      tag_71\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4754:4764  _msgSender */\n      tag_72\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4754:4766  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4738:4766  address owner = _msgSender() */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4776:4808  _approve(owner, spender, amount) */\n      tag_73\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4785:4790  owner */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4792:4799  spender */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4801:4807  amount */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4776:4784  _approve */\n      tag_74\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4776:4808  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4825:4829  true */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4818:4829  return true */\n      swap2\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4639:4836  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":3450:3556  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_26:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":3511:3518  uint256 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":3537:3549  _totalSupply */\n      sload(0x02)\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":3530:3549  return _totalSupply */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":3450:3556  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":5398:5684  function transferFrom(... */\n    tag_32:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":5525:5529  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":5541:5556  address spender */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":5559:5571  _msgSender() */\n      tag_77\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":5559:5569  _msgSender */\n      tag_72\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":5559:5571  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":5541:5571  address spender = _msgSender() */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":5581:5619  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":5597:5601  from */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":5603:5610  spender */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":5612:5618  amount */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":5581:5596  _spendAllowance */\n      tag_79\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":5581:5619  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":5629:5656  _transfer(from, to, amount) */\n      tag_80\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":5639:5643  from */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":5645:5647  to */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":5649:5655  amount */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":5629:5638  _transfer */\n      tag_81\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":5629:5656  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":5673:5677  true */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":5666:5677  return true */\n      swap2\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":5398:5684  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":3299:3390  function decimals() public view virtual override returns (uint8) {... */\n    tag_35:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":3357:3362  uint8 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":3381:3383  18 */\n      0x12\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":3374:3383  return 18 */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":3299:3390  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6079:6313  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6167:6171  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6183:6196  address owner */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6199:6211  _msgSender() */\n      tag_84\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6199:6209  _msgSender */\n      tag_72\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6199:6211  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6183:6211  address owner = _msgSender() */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6221:6285  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_85\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6230:6235  owner */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6237:6244  spender */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6274:6284  addedValue */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6246:6271  allowance(owner, spender) */\n      tag_86\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6256:6261  owner */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6263:6270  spender */\n      dup10\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6246:6255  allowance */\n      tag_61\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6246:6271  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6246:6284  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6221:6229  _approve */\n      tag_74\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6221:6285  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_85:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6302:6306  true */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6295:6306  return true */\n      swap2\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6079:6313  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":3614:3739  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_45:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":3688:3695  uint256 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":3714:3723  _balances */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":3714:3732  _balances[account] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":3724:3731  account */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":3714:3732  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":3707:3732  return _balances[account] */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":3614:3739  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2573:2675  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2629:2642  string memory */\n      0x60\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2661:2668  _symbol */\n      0x04\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2654:2668  return _symbol */\n      dup1\n      sload\n      tag_91\n      swap1\n      tag_65\n      jump\t// in\n    tag_91:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_65\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":2573:2675  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6800:7227  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6893:6897  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6909:6922  address owner */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6925:6937  _msgSender() */\n      tag_97\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6925:6935  _msgSender */\n      tag_72\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6925:6937  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6909:6937  address owner = _msgSender() */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6947:6971  uint256 currentAllowance */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6974:6999  allowance(owner, spender) */\n      tag_98\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6984:6989  owner */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6991:6998  spender */\n      dup7\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6974:6983  allowance */\n      tag_61\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6974:6999  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6947:6999  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7037:7052  subtractedValue */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7017:7033  currentAllowance */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7017:7052  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7009:7094  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7128:7188  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_102\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7137:7142  owner */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7144:7151  spender */\n      dup7\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7172:7187  subtractedValue */\n      dup7\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7153:7169  currentAllowance */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7153:7187  currentAllowance - subtractedValue */\n      sub\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7128:7136  _approve */\n      tag_74\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7128:7188  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_102:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7216:7220  true */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7209:7220  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":6800:7227  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":3935:4124  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4014:4018  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4030:4043  address owner */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4046:4058  _msgSender() */\n      tag_104\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4046:4056  _msgSender */\n      tag_72\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4046:4058  _msgSender() */\n      jump\t// in\n    tag_104:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4030:4058  address owner = _msgSender() */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4068:4096  _transfer(owner, to, amount) */\n      tag_105\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4078:4083  owner */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4085:4087  to */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4089:4095  amount */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4068:4077  _transfer */\n      tag_81\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4068:4096  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_105:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4113:4117  true */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4106:4117  return true */\n      swap2\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":3935:4124  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4182:4331  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4271:4278  uint256 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4297:4308  _allowances */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4297:4315  _allowances[owner] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4309:4314  owner */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4297:4315  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4297:4324  _allowances[owner][spender] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4316:4323  spender */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4297:4324  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4290:4324  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":4182:4331  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_72:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/utils/Context.sol\":693:700  address */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":10841:11211  function _approve(... */\n    tag_74:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":10989:10990  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":10972:10991  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":10972:10977  owner */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":10972:10991  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":10964:11032  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11069:11070  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11050:11071  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11050:11057  spender */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11050:11071  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11042:11110  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11151:11157  amount */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11121:11132  _allowances */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11121:11139  _allowances[owner] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11133:11138  owner */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11121:11139  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11121:11148  _allowances[owner][spender] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11140:11147  spender */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11121:11148  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11121:11157  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11188:11195  spender */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11172:11204  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11181:11186  owner */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11172:11204  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11197:11203  amount */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11172:11204  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_115\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":10841:11211  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11492:11933  function _spendAllowance(... */\n    tag_79:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11622:11646  uint256 currentAllowance */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11649:11674  allowance(owner, spender) */\n      tag_117\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11659:11664  owner */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11666:11673  spender */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11649:11658  allowance */\n      tag_61\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11649:11674  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11622:11674  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11708:11725  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11688:11704  currentAllowance */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11688:11725  currentAllowance != type(uint256).max */\n      eq\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11684:11927  if (currentAllowance != type(uint256).max) {... */\n      tag_118\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11769:11775  amount */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11749:11765  currentAllowance */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11749:11775  currentAllowance >= amount */\n      lt\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11741:11809  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11851:11902  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11860:11865  owner */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11867:11874  spender */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11895:11901  amount */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11876:11892  currentAllowance */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11876:11901  currentAllowance - amount */\n      sub\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11851:11859  _approve */\n      tag_74\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11851:11902  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11684:11927  if (currentAllowance != type(uint256).max) {... */\n    tag_118:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11612:11933  {... */\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":11492:11933  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7681:8857  function _transfer(... */\n    tag_81:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7823:7824  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7807:7825  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7807:7811  from */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7807:7825  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7799:7867  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7899:7900  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7885:7901  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7885:7887  to */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7885:7901  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7877:7941  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7952:7990  _beforeTokenTransfer(from, to, amount) */\n      tag_130\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7973:7977  from */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7979:7981  to */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7983:7989  amount */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7952:7972  _beforeTokenTransfer */\n      tag_131\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7952:7990  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_130:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8001:8020  uint256 fromBalance */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8023:8032  _balances */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8023:8038  _balances[from] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8033:8037  from */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8023:8038  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8001:8038  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8071:8077  amount */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8056:8067  fromBalance */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8056:8077  fromBalance >= amount */\n      lt\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8048:8120  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8186:8192  amount */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8172:8183  fromBalance */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8172:8192  fromBalance - amount */\n      sub\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8154:8163  _balances */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8154:8169  _balances[from] */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8164:8168  from */\n      dup7\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8154:8169  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8154:8192  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8539:8552  _ownerAddress */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8533:8552  to == _ownerAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8533:8535  to */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8533:8552  to == _ownerAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8530:8761  if(to == _ownerAddress){... */\n      iszero\n      tag_135\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8584:8590  amount */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8567:8576  _balances */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8567:8580  _balances[to] */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8577:8579  to */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8567:8580  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8567:8590  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      tag_136\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_136:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8530:8761  if(to == _ownerAddress){... */\n      jump(tag_137)\n    tag_135:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8628:8639  uint256 tax */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8656:8659  100 */\n      0x64\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8652:8653  5 */\n      0x05\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8643:8649  amount */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8643:8653  amount * 5 */\n      tag_138\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8642:8659  (amount * 5) /100 */\n      tag_140\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8628:8659  uint256 tax = (amount * 5) /100 */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8699:8702  tax */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8690:8696  amount */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8690:8702  amount - tax */\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8673:8682  _balances */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8673:8686  _balances[to] */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8683:8685  to */\n      dup7\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8673:8686  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8673:8702  _balances[to] += amount - tax */\n      dup3\n      dup3\n      sload\n      tag_144\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_144:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8747:8750  tax */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8716:8725  _balances */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8716:8743  _balances[_contractAddress] */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8726:8742  _contractAddress */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8716:8743  _balances[_contractAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8716:8750  _balances[_contractAddress] += tax */\n      dup3\n      dup3\n      sload\n      tag_145\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_145:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8614:8761  {... */\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8530:8761  if(to == _ownerAddress){... */\n    tag_137:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8791:8793  to */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8776:8802  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8785:8789  from */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8776:8802  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8795:8801  amount */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8776:8802  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_146\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8813:8850  _afterTokenTransfer(from, to, amount) */\n      tag_147\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8833:8837  from */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8839:8841  to */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8843:8849  amount */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8813:8832  _afterTokenTransfer */\n      tag_148\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":8813:8850  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_147:\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7789:8857  {... */\n      pop\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":7681:8857  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":12517:12638  function _beforeTokenTransfer(... */\n    tag_131:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":13226:13346  function _afterTokenTransfer(... */\n    tag_148:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_152:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_154\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_156:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_158\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_44:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_161\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_162\n      tag_163\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":373:492   */\n    tag_161:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_164\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_152\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:1106   */\n    tag_60:\n        /* \"#utility.yul\":700:706   */\n      0x00\n        /* \"#utility.yul\":708:714   */\n      dup1\n        /* \"#utility.yul\":757:759   */\n      0x40\n        /* \"#utility.yul\":745:754   */\n      dup4\n        /* \"#utility.yul\":736:743   */\n      dup6\n        /* \"#utility.yul\":732:755   */\n      sub\n        /* \"#utility.yul\":728:760   */\n      slt\n        /* \"#utility.yul\":725:844   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":763:842   */\n      tag_167\n      tag_163\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":725:844   */\n    tag_166:\n        /* \"#utility.yul\":883:884   */\n      0x00\n        /* \"#utility.yul\":908:961   */\n      tag_168\n        /* \"#utility.yul\":953:960   */\n      dup6\n        /* \"#utility.yul\":944:950   */\n      dup3\n        /* \"#utility.yul\":933:942   */\n      dup7\n        /* \"#utility.yul\":929:951   */\n      add\n        /* \"#utility.yul\":908:961   */\n      tag_152\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":898:961   */\n      swap3\n      pop\n        /* \"#utility.yul\":854:971   */\n      pop\n        /* \"#utility.yul\":1010:1012   */\n      0x20\n        /* \"#utility.yul\":1036:1089   */\n      tag_169\n        /* \"#utility.yul\":1081:1088   */\n      dup6\n        /* \"#utility.yul\":1072:1078   */\n      dup3\n        /* \"#utility.yul\":1061:1070   */\n      dup7\n        /* \"#utility.yul\":1057:1079   */\n      add\n        /* \"#utility.yul\":1036:1089   */\n      tag_152\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":1026:1089   */\n      swap2\n      pop\n        /* \"#utility.yul\":981:1099   */\n      pop\n        /* \"#utility.yul\":632:1106   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1112:1731   */\n    tag_31:\n        /* \"#utility.yul\":1189:1195   */\n      0x00\n        /* \"#utility.yul\":1197:1203   */\n      dup1\n        /* \"#utility.yul\":1205:1211   */\n      0x00\n        /* \"#utility.yul\":1254:1256   */\n      0x60\n        /* \"#utility.yul\":1242:1251   */\n      dup5\n        /* \"#utility.yul\":1233:1240   */\n      dup7\n        /* \"#utility.yul\":1229:1252   */\n      sub\n        /* \"#utility.yul\":1225:1257   */\n      slt\n        /* \"#utility.yul\":1222:1341   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":1260:1339   */\n      tag_172\n      tag_163\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":1222:1341   */\n    tag_171:\n        /* \"#utility.yul\":1380:1381   */\n      0x00\n        /* \"#utility.yul\":1405:1458   */\n      tag_173\n        /* \"#utility.yul\":1450:1457   */\n      dup7\n        /* \"#utility.yul\":1441:1447   */\n      dup3\n        /* \"#utility.yul\":1430:1439   */\n      dup8\n        /* \"#utility.yul\":1426:1448   */\n      add\n        /* \"#utility.yul\":1405:1458   */\n      tag_152\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":1395:1458   */\n      swap4\n      pop\n        /* \"#utility.yul\":1351:1468   */\n      pop\n        /* \"#utility.yul\":1507:1509   */\n      0x20\n        /* \"#utility.yul\":1533:1586   */\n      tag_174\n        /* \"#utility.yul\":1578:1585   */\n      dup7\n        /* \"#utility.yul\":1569:1575   */\n      dup3\n        /* \"#utility.yul\":1558:1567   */\n      dup8\n        /* \"#utility.yul\":1554:1576   */\n      add\n        /* \"#utility.yul\":1533:1586   */\n      tag_152\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":1523:1586   */\n      swap3\n      pop\n        /* \"#utility.yul\":1478:1596   */\n      pop\n        /* \"#utility.yul\":1635:1637   */\n      0x40\n        /* \"#utility.yul\":1661:1714   */\n      tag_175\n        /* \"#utility.yul\":1706:1713   */\n      dup7\n        /* \"#utility.yul\":1697:1703   */\n      dup3\n        /* \"#utility.yul\":1686:1695   */\n      dup8\n        /* \"#utility.yul\":1682:1704   */\n      add\n        /* \"#utility.yul\":1661:1714   */\n      tag_156\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":1651:1714   */\n      swap2\n      pop\n        /* \"#utility.yul\":1606:1724   */\n      pop\n        /* \"#utility.yul\":1112:1731   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1737:2211   */\n    tag_21:\n        /* \"#utility.yul\":1805:1811   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup1\n        /* \"#utility.yul\":1862:1864   */\n      0x40\n        /* \"#utility.yul\":1850:1859   */\n      dup4\n        /* \"#utility.yul\":1841:1848   */\n      dup6\n        /* \"#utility.yul\":1837:1860   */\n      sub\n        /* \"#utility.yul\":1833:1865   */\n      slt\n        /* \"#utility.yul\":1830:1949   */\n      iszero\n      tag_177\n      jumpi\n        /* \"#utility.yul\":1868:1947   */\n      tag_178\n      tag_163\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":1830:1949   */\n    tag_177:\n        /* \"#utility.yul\":1988:1989   */\n      0x00\n        /* \"#utility.yul\":2013:2066   */\n      tag_179\n        /* \"#utility.yul\":2058:2065   */\n      dup6\n        /* \"#utility.yul\":2049:2055   */\n      dup3\n        /* \"#utility.yul\":2038:2047   */\n      dup7\n        /* \"#utility.yul\":2034:2056   */\n      add\n        /* \"#utility.yul\":2013:2066   */\n      tag_152\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":2003:2066   */\n      swap3\n      pop\n        /* \"#utility.yul\":1959:2076   */\n      pop\n        /* \"#utility.yul\":2115:2117   */\n      0x20\n        /* \"#utility.yul\":2141:2194   */\n      tag_180\n        /* \"#utility.yul\":2186:2193   */\n      dup6\n        /* \"#utility.yul\":2177:2183   */\n      dup3\n        /* \"#utility.yul\":2166:2175   */\n      dup7\n        /* \"#utility.yul\":2162:2184   */\n      add\n        /* \"#utility.yul\":2141:2194   */\n      tag_156\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2131:2194   */\n      swap2\n      pop\n        /* \"#utility.yul\":2086:2204   */\n      pop\n        /* \"#utility.yul\":1737:2211   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2217:2326   */\n    tag_181:\n        /* \"#utility.yul\":2298:2319   */\n      tag_183\n        /* \"#utility.yul\":2313:2318   */\n      dup2\n        /* \"#utility.yul\":2298:2319   */\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":2293:2296   */\n      dup3\n        /* \"#utility.yul\":2286:2320   */\n      mstore\n        /* \"#utility.yul\":2217:2326   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2332:2696   */\n    tag_185:\n        /* \"#utility.yul\":2420:2423   */\n      0x00\n        /* \"#utility.yul\":2448:2487   */\n      tag_187\n        /* \"#utility.yul\":2481:2486   */\n      dup3\n        /* \"#utility.yul\":2448:2487   */\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2503:2574   */\n      tag_189\n        /* \"#utility.yul\":2567:2573   */\n      dup2\n        /* \"#utility.yul\":2562:2565   */\n      dup6\n        /* \"#utility.yul\":2503:2574   */\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":2496:2574   */\n      swap4\n      pop\n        /* \"#utility.yul\":2583:2635   */\n      tag_191\n        /* \"#utility.yul\":2628:2634   */\n      dup2\n        /* \"#utility.yul\":2623:2626   */\n      dup6\n        /* \"#utility.yul\":2616:2620   */\n      0x20\n        /* \"#utility.yul\":2609:2614   */\n      dup7\n        /* \"#utility.yul\":2605:2621   */\n      add\n        /* \"#utility.yul\":2583:2635   */\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":2660:2689   */\n      tag_193\n        /* \"#utility.yul\":2682:2688   */\n      dup2\n        /* \"#utility.yul\":2660:2689   */\n      tag_194\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":2655:2658   */\n      dup5\n        /* \"#utility.yul\":2651:2690   */\n      add\n        /* \"#utility.yul\":2644:2690   */\n      swap2\n      pop\n        /* \"#utility.yul\":2424:2696   */\n      pop\n        /* \"#utility.yul\":2332:2696   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2702:3068   */\n    tag_195:\n        /* \"#utility.yul\":2844:2847   */\n      0x00\n        /* \"#utility.yul\":2865:2932   */\n      tag_197\n        /* \"#utility.yul\":2929:2931   */\n      0x23\n        /* \"#utility.yul\":2924:2927   */\n      dup4\n        /* \"#utility.yul\":2865:2932   */\n      tag_190\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":2858:2932   */\n      swap2\n      pop\n        /* \"#utility.yul\":2941:3034   */\n      tag_198\n        /* \"#utility.yul\":3030:3033   */\n      dup3\n        /* \"#utility.yul\":2941:3034   */\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":3059:3061   */\n      0x40\n        /* \"#utility.yul\":3054:3057   */\n      dup3\n        /* \"#utility.yul\":3050:3062   */\n      add\n        /* \"#utility.yul\":3043:3062   */\n      swap1\n      pop\n        /* \"#utility.yul\":2702:3068   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3074:3440   */\n    tag_200:\n        /* \"#utility.yul\":3216:3219   */\n      0x00\n        /* \"#utility.yul\":3237:3304   */\n      tag_202\n        /* \"#utility.yul\":3301:3303   */\n      0x22\n        /* \"#utility.yul\":3296:3299   */\n      dup4\n        /* \"#utility.yul\":3237:3304   */\n      tag_190\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3230:3304   */\n      swap2\n      pop\n        /* \"#utility.yul\":3313:3406   */\n      tag_203\n        /* \"#utility.yul\":3402:3405   */\n      dup3\n        /* \"#utility.yul\":3313:3406   */\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":3431:3433   */\n      0x40\n        /* \"#utility.yul\":3426:3429   */\n      dup3\n        /* \"#utility.yul\":3422:3434   */\n      add\n        /* \"#utility.yul\":3415:3434   */\n      swap1\n      pop\n        /* \"#utility.yul\":3074:3440   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3812   */\n    tag_205:\n        /* \"#utility.yul\":3588:3591   */\n      0x00\n        /* \"#utility.yul\":3609:3676   */\n      tag_207\n        /* \"#utility.yul\":3673:3675   */\n      0x1d\n        /* \"#utility.yul\":3668:3671   */\n      dup4\n        /* \"#utility.yul\":3609:3676   */\n      tag_190\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":3602:3676   */\n      swap2\n      pop\n        /* \"#utility.yul\":3685:3778   */\n      tag_208\n        /* \"#utility.yul\":3774:3777   */\n      dup3\n        /* \"#utility.yul\":3685:3778   */\n      tag_209\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":3803:3805   */\n      0x20\n        /* \"#utility.yul\":3798:3801   */\n      dup3\n        /* \"#utility.yul\":3794:3806   */\n      add\n        /* \"#utility.yul\":3787:3806   */\n      swap1\n      pop\n        /* \"#utility.yul\":3446:3812   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3818:4184   */\n    tag_210:\n        /* \"#utility.yul\":3960:3963   */\n      0x00\n        /* \"#utility.yul\":3981:4048   */\n      tag_212\n        /* \"#utility.yul\":4045:4047   */\n      0x26\n        /* \"#utility.yul\":4040:4043   */\n      dup4\n        /* \"#utility.yul\":3981:4048   */\n      tag_190\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":3974:4048   */\n      swap2\n      pop\n        /* \"#utility.yul\":4057:4150   */\n      tag_213\n        /* \"#utility.yul\":4146:4149   */\n      dup3\n        /* \"#utility.yul\":4057:4150   */\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4175:4177   */\n      0x40\n        /* \"#utility.yul\":4170:4173   */\n      dup3\n        /* \"#utility.yul\":4166:4178   */\n      add\n        /* \"#utility.yul\":4159:4178   */\n      swap1\n      pop\n        /* \"#utility.yul\":3818:4184   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4190:4556   */\n    tag_215:\n        /* \"#utility.yul\":4332:4335   */\n      0x00\n        /* \"#utility.yul\":4353:4420   */\n      tag_217\n        /* \"#utility.yul\":4417:4419   */\n      0x25\n        /* \"#utility.yul\":4412:4415   */\n      dup4\n        /* \"#utility.yul\":4353:4420   */\n      tag_190\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":4346:4420   */\n      swap2\n      pop\n        /* \"#utility.yul\":4429:4522   */\n      tag_218\n        /* \"#utility.yul\":4518:4521   */\n      dup3\n        /* \"#utility.yul\":4429:4522   */\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":4547:4549   */\n      0x40\n        /* \"#utility.yul\":4542:4545   */\n      dup3\n        /* \"#utility.yul\":4538:4550   */\n      add\n        /* \"#utility.yul\":4531:4550   */\n      swap1\n      pop\n        /* \"#utility.yul\":4190:4556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4562:4928   */\n    tag_220:\n        /* \"#utility.yul\":4704:4707   */\n      0x00\n        /* \"#utility.yul\":4725:4792   */\n      tag_222\n        /* \"#utility.yul\":4789:4791   */\n      0x24\n        /* \"#utility.yul\":4784:4787   */\n      dup4\n        /* \"#utility.yul\":4725:4792   */\n      tag_190\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":4718:4792   */\n      swap2\n      pop\n        /* \"#utility.yul\":4801:4894   */\n      tag_223\n        /* \"#utility.yul\":4890:4893   */\n      dup3\n        /* \"#utility.yul\":4801:4894   */\n      tag_224\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":4919:4921   */\n      0x40\n        /* \"#utility.yul\":4914:4917   */\n      dup3\n        /* \"#utility.yul\":4910:4922   */\n      add\n        /* \"#utility.yul\":4903:4922   */\n      swap1\n      pop\n        /* \"#utility.yul\":4562:4928   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4934:5300   */\n    tag_225:\n        /* \"#utility.yul\":5076:5079   */\n      0x00\n        /* \"#utility.yul\":5097:5164   */\n      tag_227\n        /* \"#utility.yul\":5161:5163   */\n      0x25\n        /* \"#utility.yul\":5156:5159   */\n      dup4\n        /* \"#utility.yul\":5097:5164   */\n      tag_190\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":5090:5164   */\n      swap2\n      pop\n        /* \"#utility.yul\":5173:5266   */\n      tag_228\n        /* \"#utility.yul\":5262:5265   */\n      dup3\n        /* \"#utility.yul\":5173:5266   */\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":5291:5293   */\n      0x40\n        /* \"#utility.yul\":5286:5289   */\n      dup3\n        /* \"#utility.yul\":5282:5294   */\n      add\n        /* \"#utility.yul\":5275:5294   */\n      swap1\n      pop\n        /* \"#utility.yul\":4934:5300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5306:5424   */\n    tag_230:\n        /* \"#utility.yul\":5393:5417   */\n      tag_232\n        /* \"#utility.yul\":5411:5416   */\n      dup2\n        /* \"#utility.yul\":5393:5417   */\n      tag_233\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":5388:5391   */\n      dup3\n        /* \"#utility.yul\":5381:5418   */\n      mstore\n        /* \"#utility.yul\":5306:5424   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5430:5542   */\n    tag_234:\n        /* \"#utility.yul\":5513:5535   */\n      tag_236\n        /* \"#utility.yul\":5529:5534   */\n      dup2\n        /* \"#utility.yul\":5513:5535   */\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":5508:5511   */\n      dup3\n        /* \"#utility.yul\":5501:5536   */\n      mstore\n        /* \"#utility.yul\":5430:5542   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5548:5758   */\n    tag_24:\n        /* \"#utility.yul\":5635:5639   */\n      0x00\n        /* \"#utility.yul\":5673:5675   */\n      0x20\n        /* \"#utility.yul\":5662:5671   */\n      dup3\n        /* \"#utility.yul\":5658:5676   */\n      add\n        /* \"#utility.yul\":5650:5676   */\n      swap1\n      pop\n        /* \"#utility.yul\":5686:5751   */\n      tag_239\n        /* \"#utility.yul\":5748:5749   */\n      0x00\n        /* \"#utility.yul\":5737:5746   */\n      dup4\n        /* \"#utility.yul\":5733:5750   */\n      add\n        /* \"#utility.yul\":5724:5730   */\n      dup5\n        /* \"#utility.yul\":5686:5751   */\n      tag_181\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":5548:5758   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5764:6077   */\n    tag_18:\n        /* \"#utility.yul\":5877:5881   */\n      0x00\n        /* \"#utility.yul\":5915:5917   */\n      0x20\n        /* \"#utility.yul\":5904:5913   */\n      dup3\n        /* \"#utility.yul\":5900:5918   */\n      add\n        /* \"#utility.yul\":5892:5918   */\n      swap1\n      pop\n        /* \"#utility.yul\":5964:5973   */\n      dup2\n        /* \"#utility.yul\":5958:5962   */\n      dup2\n        /* \"#utility.yul\":5954:5974   */\n      sub\n        /* \"#utility.yul\":5950:5951   */\n      0x00\n        /* \"#utility.yul\":5939:5948   */\n      dup4\n        /* \"#utility.yul\":5935:5952   */\n      add\n        /* \"#utility.yul\":5928:5975   */\n      mstore\n        /* \"#utility.yul\":5992:6070   */\n      tag_241\n        /* \"#utility.yul\":6065:6069   */\n      dup2\n        /* \"#utility.yul\":6056:6062   */\n      dup5\n        /* \"#utility.yul\":5992:6070   */\n      tag_185\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":5984:6070   */\n      swap1\n      pop\n        /* \"#utility.yul\":5764:6077   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6083:6502   */\n    tag_129:\n        /* \"#utility.yul\":6249:6253   */\n      0x00\n        /* \"#utility.yul\":6287:6289   */\n      0x20\n        /* \"#utility.yul\":6276:6285   */\n      dup3\n        /* \"#utility.yul\":6272:6290   */\n      add\n        /* \"#utility.yul\":6264:6290   */\n      swap1\n      pop\n        /* \"#utility.yul\":6336:6345   */\n      dup2\n        /* \"#utility.yul\":6330:6334   */\n      dup2\n        /* \"#utility.yul\":6326:6346   */\n      sub\n        /* \"#utility.yul\":6322:6323   */\n      0x00\n        /* \"#utility.yul\":6311:6320   */\n      dup4\n        /* \"#utility.yul\":6307:6324   */\n      add\n        /* \"#utility.yul\":6300:6347   */\n      mstore\n        /* \"#utility.yul\":6364:6495   */\n      tag_243\n        /* \"#utility.yul\":6490:6494   */\n      dup2\n        /* \"#utility.yul\":6364:6495   */\n      tag_195\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":6356:6495   */\n      swap1\n      pop\n        /* \"#utility.yul\":6083:6502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6508:6927   */\n    tag_114:\n        /* \"#utility.yul\":6674:6678   */\n      0x00\n        /* \"#utility.yul\":6712:6714   */\n      0x20\n        /* \"#utility.yul\":6701:6710   */\n      dup3\n        /* \"#utility.yul\":6697:6715   */\n      add\n        /* \"#utility.yul\":6689:6715   */\n      swap1\n      pop\n        /* \"#utility.yul\":6761:6770   */\n      dup2\n        /* \"#utility.yul\":6755:6759   */\n      dup2\n        /* \"#utility.yul\":6751:6771   */\n      sub\n        /* \"#utility.yul\":6747:6748   */\n      0x00\n        /* \"#utility.yul\":6736:6745   */\n      dup4\n        /* \"#utility.yul\":6732:6749   */\n      add\n        /* \"#utility.yul\":6725:6772   */\n      mstore\n        /* \"#utility.yul\":6789:6920   */\n      tag_245\n        /* \"#utility.yul\":6915:6919   */\n      dup2\n        /* \"#utility.yul\":6789:6920   */\n      tag_200\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":6781:6920   */\n      swap1\n      pop\n        /* \"#utility.yul\":6508:6927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6933:7352   */\n    tag_121:\n        /* \"#utility.yul\":7099:7103   */\n      0x00\n        /* \"#utility.yul\":7137:7139   */\n      0x20\n        /* \"#utility.yul\":7126:7135   */\n      dup3\n        /* \"#utility.yul\":7122:7140   */\n      add\n        /* \"#utility.yul\":7114:7140   */\n      swap1\n      pop\n        /* \"#utility.yul\":7186:7195   */\n      dup2\n        /* \"#utility.yul\":7180:7184   */\n      dup2\n        /* \"#utility.yul\":7176:7196   */\n      sub\n        /* \"#utility.yul\":7172:7173   */\n      0x00\n        /* \"#utility.yul\":7161:7170   */\n      dup4\n        /* \"#utility.yul\":7157:7174   */\n      add\n        /* \"#utility.yul\":7150:7197   */\n      mstore\n        /* \"#utility.yul\":7214:7345   */\n      tag_247\n        /* \"#utility.yul\":7340:7344   */\n      dup2\n        /* \"#utility.yul\":7214:7345   */\n      tag_205\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":7206:7345   */\n      swap1\n      pop\n        /* \"#utility.yul\":6933:7352   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7358:7777   */\n    tag_134:\n        /* \"#utility.yul\":7524:7528   */\n      0x00\n        /* \"#utility.yul\":7562:7564   */\n      0x20\n        /* \"#utility.yul\":7551:7560   */\n      dup3\n        /* \"#utility.yul\":7547:7565   */\n      add\n        /* \"#utility.yul\":7539:7565   */\n      swap1\n      pop\n        /* \"#utility.yul\":7611:7620   */\n      dup2\n        /* \"#utility.yul\":7605:7609   */\n      dup2\n        /* \"#utility.yul\":7601:7621   */\n      sub\n        /* \"#utility.yul\":7597:7598   */\n      0x00\n        /* \"#utility.yul\":7586:7595   */\n      dup4\n        /* \"#utility.yul\":7582:7599   */\n      add\n        /* \"#utility.yul\":7575:7622   */\n      mstore\n        /* \"#utility.yul\":7639:7770   */\n      tag_249\n        /* \"#utility.yul\":7765:7769   */\n      dup2\n        /* \"#utility.yul\":7639:7770   */\n      tag_210\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":7631:7770   */\n      swap1\n      pop\n        /* \"#utility.yul\":7358:7777   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7783:8202   */\n    tag_126:\n        /* \"#utility.yul\":7949:7953   */\n      0x00\n        /* \"#utility.yul\":7987:7989   */\n      0x20\n        /* \"#utility.yul\":7976:7985   */\n      dup3\n        /* \"#utility.yul\":7972:7990   */\n      add\n        /* \"#utility.yul\":7964:7990   */\n      swap1\n      pop\n        /* \"#utility.yul\":8036:8045   */\n      dup2\n        /* \"#utility.yul\":8030:8034   */\n      dup2\n        /* \"#utility.yul\":8026:8046   */\n      sub\n        /* \"#utility.yul\":8022:8023   */\n      0x00\n        /* \"#utility.yul\":8011:8020   */\n      dup4\n        /* \"#utility.yul\":8007:8024   */\n      add\n        /* \"#utility.yul\":8000:8047   */\n      mstore\n        /* \"#utility.yul\":8064:8195   */\n      tag_251\n        /* \"#utility.yul\":8190:8194   */\n      dup2\n        /* \"#utility.yul\":8064:8195   */\n      tag_215\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":8056:8195   */\n      swap1\n      pop\n        /* \"#utility.yul\":7783:8202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8208:8627   */\n    tag_111:\n        /* \"#utility.yul\":8374:8378   */\n      0x00\n        /* \"#utility.yul\":8412:8414   */\n      0x20\n        /* \"#utility.yul\":8401:8410   */\n      dup3\n        /* \"#utility.yul\":8397:8415   */\n      add\n        /* \"#utility.yul\":8389:8415   */\n      swap1\n      pop\n        /* \"#utility.yul\":8461:8470   */\n      dup2\n        /* \"#utility.yul\":8455:8459   */\n      dup2\n        /* \"#utility.yul\":8451:8471   */\n      sub\n        /* \"#utility.yul\":8447:8448   */\n      0x00\n        /* \"#utility.yul\":8436:8445   */\n      dup4\n        /* \"#utility.yul\":8432:8449   */\n      add\n        /* \"#utility.yul\":8425:8472   */\n      mstore\n        /* \"#utility.yul\":8489:8620   */\n      tag_253\n        /* \"#utility.yul\":8615:8619   */\n      dup2\n        /* \"#utility.yul\":8489:8620   */\n      tag_220\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":8481:8620   */\n      swap1\n      pop\n        /* \"#utility.yul\":8208:8627   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8633:9052   */\n    tag_101:\n        /* \"#utility.yul\":8799:8803   */\n      0x00\n        /* \"#utility.yul\":8837:8839   */\n      0x20\n        /* \"#utility.yul\":8826:8835   */\n      dup3\n        /* \"#utility.yul\":8822:8840   */\n      add\n        /* \"#utility.yul\":8814:8840   */\n      swap1\n      pop\n        /* \"#utility.yul\":8886:8895   */\n      dup2\n        /* \"#utility.yul\":8880:8884   */\n      dup2\n        /* \"#utility.yul\":8876:8896   */\n      sub\n        /* \"#utility.yul\":8872:8873   */\n      0x00\n        /* \"#utility.yul\":8861:8870   */\n      dup4\n        /* \"#utility.yul\":8857:8874   */\n      add\n        /* \"#utility.yul\":8850:8897   */\n      mstore\n        /* \"#utility.yul\":8914:9045   */\n      tag_255\n        /* \"#utility.yul\":9040:9044   */\n      dup2\n        /* \"#utility.yul\":8914:9045   */\n      tag_225\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":8906:9045   */\n      swap1\n      pop\n        /* \"#utility.yul\":8633:9052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9058:9280   */\n    tag_28:\n        /* \"#utility.yul\":9151:9155   */\n      0x00\n        /* \"#utility.yul\":9189:9191   */\n      0x20\n        /* \"#utility.yul\":9178:9187   */\n      dup3\n        /* \"#utility.yul\":9174:9192   */\n      add\n        /* \"#utility.yul\":9166:9192   */\n      swap1\n      pop\n        /* \"#utility.yul\":9202:9273   */\n      tag_257\n        /* \"#utility.yul\":9270:9271   */\n      0x00\n        /* \"#utility.yul\":9259:9268   */\n      dup4\n        /* \"#utility.yul\":9255:9272   */\n      add\n        /* \"#utility.yul\":9246:9252   */\n      dup5\n        /* \"#utility.yul\":9202:9273   */\n      tag_230\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":9058:9280   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9286:9500   */\n    tag_37:\n        /* \"#utility.yul\":9375:9379   */\n      0x00\n        /* \"#utility.yul\":9413:9415   */\n      0x20\n        /* \"#utility.yul\":9402:9411   */\n      dup3\n        /* \"#utility.yul\":9398:9416   */\n      add\n        /* \"#utility.yul\":9390:9416   */\n      swap1\n      pop\n        /* \"#utility.yul\":9426:9493   */\n      tag_259\n        /* \"#utility.yul\":9490:9491   */\n      0x00\n        /* \"#utility.yul\":9479:9488   */\n      dup4\n        /* \"#utility.yul\":9475:9492   */\n      add\n        /* \"#utility.yul\":9466:9472   */\n      dup5\n        /* \"#utility.yul\":9426:9493   */\n      tag_234\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":9286:9500   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9587:9686   */\n    tag_188:\n        /* \"#utility.yul\":9639:9645   */\n      0x00\n        /* \"#utility.yul\":9673:9678   */\n      dup2\n        /* \"#utility.yul\":9667:9679   */\n      mload\n        /* \"#utility.yul\":9657:9679   */\n      swap1\n      pop\n        /* \"#utility.yul\":9587:9686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9692:9861   */\n    tag_190:\n        /* \"#utility.yul\":9776:9787   */\n      0x00\n        /* \"#utility.yul\":9810:9816   */\n      dup3\n        /* \"#utility.yul\":9805:9808   */\n      dup3\n        /* \"#utility.yul\":9798:9817   */\n      mstore\n        /* \"#utility.yul\":9850:9854   */\n      0x20\n        /* \"#utility.yul\":9845:9848   */\n      dup3\n        /* \"#utility.yul\":9841:9855   */\n      add\n        /* \"#utility.yul\":9826:9855   */\n      swap1\n      pop\n        /* \"#utility.yul\":9692:9861   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9867:10172   */\n    tag_88:\n        /* \"#utility.yul\":9907:9910   */\n      0x00\n        /* \"#utility.yul\":9926:9946   */\n      tag_265\n        /* \"#utility.yul\":9944:9945   */\n      dup3\n        /* \"#utility.yul\":9926:9946   */\n      tag_233\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":9921:9946   */\n      swap2\n      pop\n        /* \"#utility.yul\":9960:9980   */\n      tag_266\n        /* \"#utility.yul\":9978:9979   */\n      dup4\n        /* \"#utility.yul\":9960:9980   */\n      tag_233\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":9955:9980   */\n      swap3\n      pop\n        /* \"#utility.yul\":10114:10115   */\n      dup3\n        /* \"#utility.yul\":10046:10112   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10042:10116   */\n      sub\n        /* \"#utility.yul\":10039:10040   */\n      dup3\n        /* \"#utility.yul\":10036:10117   */\n      gt\n        /* \"#utility.yul\":10033:10140   */\n      iszero\n      tag_267\n      jumpi\n        /* \"#utility.yul\":10120:10138   */\n      tag_268\n      tag_269\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":10033:10140   */\n    tag_267:\n        /* \"#utility.yul\":10164:10165   */\n      dup3\n        /* \"#utility.yul\":10161:10162   */\n      dup3\n        /* \"#utility.yul\":10157:10166   */\n      add\n        /* \"#utility.yul\":10150:10166   */\n      swap1\n      pop\n        /* \"#utility.yul\":9867:10172   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10178:10363   */\n    tag_141:\n        /* \"#utility.yul\":10218:10219   */\n      0x00\n        /* \"#utility.yul\":10235:10255   */\n      tag_271\n        /* \"#utility.yul\":10253:10254   */\n      dup3\n        /* \"#utility.yul\":10235:10255   */\n      tag_233\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":10230:10255   */\n      swap2\n      pop\n        /* \"#utility.yul\":10269:10289   */\n      tag_272\n        /* \"#utility.yul\":10287:10288   */\n      dup4\n        /* \"#utility.yul\":10269:10289   */\n      tag_233\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":10264:10289   */\n      swap3\n      pop\n        /* \"#utility.yul\":10308:10309   */\n      dup3\n        /* \"#utility.yul\":10298:10333   */\n      tag_273\n      jumpi\n        /* \"#utility.yul\":10313:10331   */\n      tag_274\n      tag_275\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":10298:10333   */\n    tag_273:\n        /* \"#utility.yul\":10355:10356   */\n      dup3\n        /* \"#utility.yul\":10352:10353   */\n      dup3\n        /* \"#utility.yul\":10348:10357   */\n      div\n        /* \"#utility.yul\":10343:10357   */\n      swap1\n      pop\n        /* \"#utility.yul\":10178:10363   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10369:10717   */\n    tag_139:\n        /* \"#utility.yul\":10409:10416   */\n      0x00\n        /* \"#utility.yul\":10432:10452   */\n      tag_277\n        /* \"#utility.yul\":10450:10451   */\n      dup3\n        /* \"#utility.yul\":10432:10452   */\n      tag_233\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":10427:10452   */\n      swap2\n      pop\n        /* \"#utility.yul\":10466:10486   */\n      tag_278\n        /* \"#utility.yul\":10484:10485   */\n      dup4\n        /* \"#utility.yul\":10466:10486   */\n      tag_233\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":10461:10486   */\n      swap3\n      pop\n        /* \"#utility.yul\":10654:10655   */\n      dup2\n        /* \"#utility.yul\":10586:10652   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10582:10656   */\n      div\n        /* \"#utility.yul\":10579:10580   */\n      dup4\n        /* \"#utility.yul\":10576:10657   */\n      gt\n        /* \"#utility.yul\":10571:10572   */\n      dup3\n        /* \"#utility.yul\":10564:10573   */\n      iszero\n        /* \"#utility.yul\":10557:10574   */\n      iszero\n        /* \"#utility.yul\":10553:10658   */\n      and\n        /* \"#utility.yul\":10550:10681   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":10661:10679   */\n      tag_280\n      tag_269\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":10550:10681   */\n    tag_279:\n        /* \"#utility.yul\":10709:10710   */\n      dup3\n        /* \"#utility.yul\":10706:10707   */\n      dup3\n        /* \"#utility.yul\":10702:10711   */\n      mul\n        /* \"#utility.yul\":10691:10711   */\n      swap1\n      pop\n        /* \"#utility.yul\":10369:10717   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10723:10914   */\n    tag_143:\n        /* \"#utility.yul\":10763:10767   */\n      0x00\n        /* \"#utility.yul\":10783:10803   */\n      tag_282\n        /* \"#utility.yul\":10801:10802   */\n      dup3\n        /* \"#utility.yul\":10783:10803   */\n      tag_233\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":10778:10803   */\n      swap2\n      pop\n        /* \"#utility.yul\":10817:10837   */\n      tag_283\n        /* \"#utility.yul\":10835:10836   */\n      dup4\n        /* \"#utility.yul\":10817:10837   */\n      tag_233\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":10812:10837   */\n      swap3\n      pop\n        /* \"#utility.yul\":10856:10857   */\n      dup3\n        /* \"#utility.yul\":10853:10854   */\n      dup3\n        /* \"#utility.yul\":10850:10858   */\n      lt\n        /* \"#utility.yul\":10847:10881   */\n      iszero\n      tag_284\n      jumpi\n        /* \"#utility.yul\":10861:10879   */\n      tag_285\n      tag_269\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":10847:10881   */\n    tag_284:\n        /* \"#utility.yul\":10906:10907   */\n      dup3\n        /* \"#utility.yul\":10903:10904   */\n      dup3\n        /* \"#utility.yul\":10899:10908   */\n      sub\n        /* \"#utility.yul\":10891:10908   */\n      swap1\n      pop\n        /* \"#utility.yul\":10723:10914   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10920:11016   */\n    tag_286:\n        /* \"#utility.yul\":10957:10964   */\n      0x00\n        /* \"#utility.yul\":10986:11010   */\n      tag_288\n        /* \"#utility.yul\":11004:11009   */\n      dup3\n        /* \"#utility.yul\":10986:11010   */\n      tag_289\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":10975:11010   */\n      swap1\n      pop\n        /* \"#utility.yul\":10920:11016   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11022:11112   */\n    tag_184:\n        /* \"#utility.yul\":11056:11063   */\n      0x00\n        /* \"#utility.yul\":11099:11104   */\n      dup2\n        /* \"#utility.yul\":11092:11105   */\n      iszero\n        /* \"#utility.yul\":11085:11106   */\n      iszero\n        /* \"#utility.yul\":11074:11106   */\n      swap1\n      pop\n        /* \"#utility.yul\":11022:11112   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11118:11244   */\n    tag_289:\n        /* \"#utility.yul\":11155:11162   */\n      0x00\n        /* \"#utility.yul\":11195:11237   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11188:11193   */\n      dup3\n        /* \"#utility.yul\":11184:11238   */\n      and\n        /* \"#utility.yul\":11173:11238   */\n      swap1\n      pop\n        /* \"#utility.yul\":11118:11244   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11250:11327   */\n    tag_233:\n        /* \"#utility.yul\":11287:11294   */\n      0x00\n        /* \"#utility.yul\":11316:11321   */\n      dup2\n        /* \"#utility.yul\":11305:11321   */\n      swap1\n      pop\n        /* \"#utility.yul\":11250:11327   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11333:11419   */\n    tag_237:\n        /* \"#utility.yul\":11368:11375   */\n      0x00\n        /* \"#utility.yul\":11408:11412   */\n      0xff\n        /* \"#utility.yul\":11401:11406   */\n      dup3\n        /* \"#utility.yul\":11397:11413   */\n      and\n        /* \"#utility.yul\":11386:11413   */\n      swap1\n      pop\n        /* \"#utility.yul\":11333:11419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11425:11732   */\n    tag_192:\n        /* \"#utility.yul\":11493:11494   */\n      0x00\n        /* \"#utility.yul\":11503:11616   */\n    tag_295:\n        /* \"#utility.yul\":11517:11523   */\n      dup4\n        /* \"#utility.yul\":11514:11515   */\n      dup2\n        /* \"#utility.yul\":11511:11524   */\n      lt\n        /* \"#utility.yul\":11503:11616   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":11602:11603   */\n      dup1\n        /* \"#utility.yul\":11597:11600   */\n      dup3\n        /* \"#utility.yul\":11593:11604   */\n      add\n        /* \"#utility.yul\":11587:11605   */\n      mload\n        /* \"#utility.yul\":11583:11584   */\n      dup2\n        /* \"#utility.yul\":11578:11581   */\n      dup5\n        /* \"#utility.yul\":11574:11585   */\n      add\n        /* \"#utility.yul\":11567:11606   */\n      mstore\n        /* \"#utility.yul\":11539:11541   */\n      0x20\n        /* \"#utility.yul\":11536:11537   */\n      dup2\n        /* \"#utility.yul\":11532:11542   */\n      add\n        /* \"#utility.yul\":11527:11542   */\n      swap1\n      pop\n        /* \"#utility.yul\":11503:11616   */\n      jump(tag_295)\n    tag_297:\n        /* \"#utility.yul\":11634:11640   */\n      dup4\n        /* \"#utility.yul\":11631:11632   */\n      dup2\n        /* \"#utility.yul\":11628:11641   */\n      gt\n        /* \"#utility.yul\":11625:11726   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":11714:11715   */\n      0x00\n        /* \"#utility.yul\":11705:11711   */\n      dup5\n        /* \"#utility.yul\":11700:11703   */\n      dup5\n        /* \"#utility.yul\":11696:11712   */\n      add\n        /* \"#utility.yul\":11689:11716   */\n      mstore\n        /* \"#utility.yul\":11625:11726   */\n    tag_298:\n        /* \"#utility.yul\":11474:11732   */\n      pop\n        /* \"#utility.yul\":11425:11732   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11738:12058   */\n    tag_65:\n        /* \"#utility.yul\":11782:11788   */\n      0x00\n        /* \"#utility.yul\":11819:11820   */\n      0x02\n        /* \"#utility.yul\":11813:11817   */\n      dup3\n        /* \"#utility.yul\":11809:11821   */\n      div\n        /* \"#utility.yul\":11799:11821   */\n      swap1\n      pop\n        /* \"#utility.yul\":11866:11867   */\n      0x01\n        /* \"#utility.yul\":11860:11864   */\n      dup3\n        /* \"#utility.yul\":11856:11868   */\n      and\n        /* \"#utility.yul\":11887:11905   */\n      dup1\n        /* \"#utility.yul\":11877:11958   */\n      tag_300\n      jumpi\n        /* \"#utility.yul\":11943:11947   */\n      0x7f\n        /* \"#utility.yul\":11935:11941   */\n      dup3\n        /* \"#utility.yul\":11931:11948   */\n      and\n        /* \"#utility.yul\":11921:11948   */\n      swap2\n      pop\n        /* \"#utility.yul\":11877:11958   */\n    tag_300:\n        /* \"#utility.yul\":12005:12007   */\n      0x20\n        /* \"#utility.yul\":11997:12003   */\n      dup3\n        /* \"#utility.yul\":11994:12008   */\n      lt\n        /* \"#utility.yul\":11974:11992   */\n      dup2\n        /* \"#utility.yul\":11971:12009   */\n      eq\n        /* \"#utility.yul\":11968:12052   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":12024:12042   */\n      tag_302\n      tag_303\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":11968:12052   */\n    tag_301:\n        /* \"#utility.yul\":11789:12058   */\n      pop\n        /* \"#utility.yul\":11738:12058   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12064:12244   */\n    tag_269:\n        /* \"#utility.yul\":12112:12189   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12109:12110   */\n      0x00\n        /* \"#utility.yul\":12102:12190   */\n      mstore\n        /* \"#utility.yul\":12209:12213   */\n      0x11\n        /* \"#utility.yul\":12206:12207   */\n      0x04\n        /* \"#utility.yul\":12199:12214   */\n      mstore\n        /* \"#utility.yul\":12233:12237   */\n      0x24\n        /* \"#utility.yul\":12230:12231   */\n      0x00\n        /* \"#utility.yul\":12223:12238   */\n      revert\n        /* \"#utility.yul\":12250:12430   */\n    tag_275:\n        /* \"#utility.yul\":12298:12375   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12295:12296   */\n      0x00\n        /* \"#utility.yul\":12288:12376   */\n      mstore\n        /* \"#utility.yul\":12395:12399   */\n      0x12\n        /* \"#utility.yul\":12392:12393   */\n      0x04\n        /* \"#utility.yul\":12385:12400   */\n      mstore\n        /* \"#utility.yul\":12419:12423   */\n      0x24\n        /* \"#utility.yul\":12416:12417   */\n      0x00\n        /* \"#utility.yul\":12409:12424   */\n      revert\n        /* \"#utility.yul\":12436:12616   */\n    tag_303:\n        /* \"#utility.yul\":12484:12561   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12481:12482   */\n      0x00\n        /* \"#utility.yul\":12474:12562   */\n      mstore\n        /* \"#utility.yul\":12581:12585   */\n      0x22\n        /* \"#utility.yul\":12578:12579   */\n      0x04\n        /* \"#utility.yul\":12571:12586   */\n      mstore\n        /* \"#utility.yul\":12605:12609   */\n      0x24\n        /* \"#utility.yul\":12602:12603   */\n      0x00\n        /* \"#utility.yul\":12595:12610   */\n      revert\n        /* \"#utility.yul\":12745:12862   */\n    tag_163:\n        /* \"#utility.yul\":12854:12855   */\n      0x00\n        /* \"#utility.yul\":12851:12852   */\n      dup1\n        /* \"#utility.yul\":12844:12856   */\n      revert\n        /* \"#utility.yul\":12868:12970   */\n    tag_194:\n        /* \"#utility.yul\":12909:12915   */\n      0x00\n        /* \"#utility.yul\":12960:12962   */\n      0x1f\n        /* \"#utility.yul\":12956:12963   */\n      not\n        /* \"#utility.yul\":12951:12953   */\n      0x1f\n        /* \"#utility.yul\":12944:12949   */\n      dup4\n        /* \"#utility.yul\":12940:12954   */\n      add\n        /* \"#utility.yul\":12936:12964   */\n      and\n        /* \"#utility.yul\":12926:12964   */\n      swap1\n      pop\n        /* \"#utility.yul\":12868:12970   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12976:13198   */\n    tag_199:\n        /* \"#utility.yul\":13116:13150   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":13112:13113   */\n      0x00\n        /* \"#utility.yul\":13104:13110   */\n      dup3\n        /* \"#utility.yul\":13100:13114   */\n      add\n        /* \"#utility.yul\":13093:13151   */\n      mstore\n        /* \"#utility.yul\":13185:13190   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13180:13182   */\n      0x20\n        /* \"#utility.yul\":13172:13178   */\n      dup3\n        /* \"#utility.yul\":13168:13183   */\n      add\n        /* \"#utility.yul\":13161:13191   */\n      mstore\n        /* \"#utility.yul\":12976:13198   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13204:13425   */\n    tag_204:\n        /* \"#utility.yul\":13344:13378   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":13340:13341   */\n      0x00\n        /* \"#utility.yul\":13332:13338   */\n      dup3\n        /* \"#utility.yul\":13328:13342   */\n      add\n        /* \"#utility.yul\":13321:13379   */\n      mstore\n        /* \"#utility.yul\":13413:13417   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13408:13410   */\n      0x20\n        /* \"#utility.yul\":13400:13406   */\n      dup3\n        /* \"#utility.yul\":13396:13411   */\n      add\n        /* \"#utility.yul\":13389:13418   */\n      mstore\n        /* \"#utility.yul\":13204:13425   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13431:13610   */\n    tag_209:\n        /* \"#utility.yul\":13571:13602   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":13567:13568   */\n      0x00\n        /* \"#utility.yul\":13559:13565   */\n      dup3\n        /* \"#utility.yul\":13555:13569   */\n      add\n        /* \"#utility.yul\":13548:13603   */\n      mstore\n        /* \"#utility.yul\":13431:13610   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13616:13841   */\n    tag_214:\n        /* \"#utility.yul\":13756:13790   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":13752:13753   */\n      0x00\n        /* \"#utility.yul\":13744:13750   */\n      dup3\n        /* \"#utility.yul\":13740:13754   */\n      add\n        /* \"#utility.yul\":13733:13791   */\n      mstore\n        /* \"#utility.yul\":13825:13833   */\n      0x616c616e63650000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13820:13822   */\n      0x20\n        /* \"#utility.yul\":13812:13818   */\n      dup3\n        /* \"#utility.yul\":13808:13823   */\n      add\n        /* \"#utility.yul\":13801:13834   */\n      mstore\n        /* \"#utility.yul\":13616:13841   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13847:14071   */\n    tag_219:\n        /* \"#utility.yul\":13987:14021   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":13983:13984   */\n      0x00\n        /* \"#utility.yul\":13975:13981   */\n      dup3\n        /* \"#utility.yul\":13971:13985   */\n      add\n        /* \"#utility.yul\":13964:14022   */\n      mstore\n        /* \"#utility.yul\":14056:14063   */\n      0x6472657373000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14051:14053   */\n      0x20\n        /* \"#utility.yul\":14043:14049   */\n      dup3\n        /* \"#utility.yul\":14039:14054   */\n      add\n        /* \"#utility.yul\":14032:14064   */\n      mstore\n        /* \"#utility.yul\":13847:14071   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14077:14300   */\n    tag_224:\n        /* \"#utility.yul\":14217:14251   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":14213:14214   */\n      0x00\n        /* \"#utility.yul\":14205:14211   */\n      dup3\n        /* \"#utility.yul\":14201:14215   */\n      add\n        /* \"#utility.yul\":14194:14252   */\n      mstore\n        /* \"#utility.yul\":14286:14292   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14281:14283   */\n      0x20\n        /* \"#utility.yul\":14273:14279   */\n      dup3\n        /* \"#utility.yul\":14269:14284   */\n      add\n        /* \"#utility.yul\":14262:14293   */\n      mstore\n        /* \"#utility.yul\":14077:14300   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14306:14530   */\n    tag_229:\n        /* \"#utility.yul\":14446:14480   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":14442:14443   */\n      0x00\n        /* \"#utility.yul\":14434:14440   */\n      dup3\n        /* \"#utility.yul\":14430:14444   */\n      add\n        /* \"#utility.yul\":14423:14481   */\n      mstore\n        /* \"#utility.yul\":14515:14522   */\n      0x207a65726f000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14510:14512   */\n      0x20\n        /* \"#utility.yul\":14502:14508   */\n      dup3\n        /* \"#utility.yul\":14498:14513   */\n      add\n        /* \"#utility.yul\":14491:14523   */\n      mstore\n        /* \"#utility.yul\":14306:14530   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14536:14658   */\n    tag_155:\n        /* \"#utility.yul\":14609:14633   */\n      tag_319\n        /* \"#utility.yul\":14627:14632   */\n      dup2\n        /* \"#utility.yul\":14609:14633   */\n      tag_286\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":14602:14607   */\n      dup2\n        /* \"#utility.yul\":14599:14634   */\n      eq\n        /* \"#utility.yul\":14589:14652   */\n      tag_320\n      jumpi\n        /* \"#utility.yul\":14648:14649   */\n      0x00\n        /* \"#utility.yul\":14645:14646   */\n      dup1\n        /* \"#utility.yul\":14638:14650   */\n      revert\n        /* \"#utility.yul\":14589:14652   */\n    tag_320:\n        /* \"#utility.yul\":14536:14658   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14664:14786   */\n    tag_159:\n        /* \"#utility.yul\":14737:14761   */\n      tag_322\n        /* \"#utility.yul\":14755:14760   */\n      dup2\n        /* \"#utility.yul\":14737:14761   */\n      tag_233\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":14730:14735   */\n      dup2\n        /* \"#utility.yul\":14727:14762   */\n      eq\n        /* \"#utility.yul\":14717:14780   */\n      tag_323\n      jumpi\n        /* \"#utility.yul\":14776:14777   */\n      0x00\n        /* \"#utility.yul\":14773:14774   */\n      dup1\n        /* \"#utility.yul\":14766:14778   */\n      revert\n        /* \"#utility.yul\":14717:14780   */\n    tag_323:\n        /* \"#utility.yul\":14664:14786   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e1ca5bb88541c4ccbf473ff727f0faf385003873219fa7f94eea613b5277942f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_60": {
									"entryPoint": null,
									"id": 60,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 421,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_address_fromMemory": {
									"entryPoint": 570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"allocate_memory": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 777,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 861,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 893,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1055,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1102,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1149,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1154,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1159,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1164,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4917:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "102:326:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "112:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "179:6:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "137:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "137:49:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "121:15:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "121:66:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "112:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "203:5:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "210:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "196:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:21:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "196:21:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "226:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "241:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "248:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "237:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "237:16:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "230:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "291:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "293:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "293:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "293:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "272:3:4"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "277:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "268:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "268:16:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "286:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "265:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "265:25:4"
															},
															"nodeType": "YulIf",
															"src": "262:112:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "405:3:4"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "410:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "415:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "383:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "383:39:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "383:39:4"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "75:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "80:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "88:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "96:5:4",
														"type": ""
													}
												],
												"src": "7:421:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "497:80:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "507:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "522:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "516:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "507:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "565:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "538:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "538:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "538:33:4"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "475:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "483:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "491:5:4",
														"type": ""
													}
												],
												"src": "434:143:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "670:282:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "719:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "721:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "721:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "721:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "698:6:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "706:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "694:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "694:17:4"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "713:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "690:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "690:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "683:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "683:35:4"
															},
															"nodeType": "YulIf",
															"src": "680:122:4"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "811:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "831:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "825:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "825:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "815:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "847:99:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "919:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "927:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "915:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "915:17:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "934:6:4"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "942:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "856:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "856:90:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "847:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "648:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "656:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "664:5:4",
														"type": ""
													}
												],
												"src": "597:355:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1106:1018:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1153:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1155:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1155:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1155:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1127:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1136:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1123:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1123:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1148:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1119:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1119:33:4"
															},
															"nodeType": "YulIf",
															"src": "1116:120:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1246:291:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1261:38:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1285:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1296:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1281:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1281:17:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1275:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1275:24:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1265:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1346:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1348:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1348:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1348:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1318:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1326:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1315:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1315:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "1312:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1443:84:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1499:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1510:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1495:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1495:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1519:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1453:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1453:74:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1443:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1547:292:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1562:39:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1586:9:4"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1597:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1582:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1582:18:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "1576:5:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1576:25:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1566:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1648:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1650:77:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1650:79:4"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1650:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1620:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1628:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1617:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1617:30:4"
																	},
																	"nodeType": "YulIf",
																	"src": "1614:117:4"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1745:84:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1801:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1812:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1797:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1797:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1821:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1755:41:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1755:74:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1745:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1849:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1864:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1878:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1868:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1894:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1940:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1951:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1936:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1936:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1960:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1904:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1904:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1894:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1988:129:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2003:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2017:2:4",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2007:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2033:74:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2079:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2090:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2075:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2075:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2099:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2043:31:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2043:64:4"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2033:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1052:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1063:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1075:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1083:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1091:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1099:6:4",
														"type": ""
													}
												],
												"src": "958:1166:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2171:88:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2181:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "2191:18:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2191:20:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2181:6:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2240:6:4"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2248:4:4"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2220:19:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2220:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2220:33:4"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2155:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2164:6:4",
														"type": ""
													}
												],
												"src": "2130:129:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2305:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2315:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2331:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2325:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2325:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2315:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2298:6:4",
														"type": ""
													}
												],
												"src": "2265:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2413:241:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2518:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2520:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2520:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2520:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2490:6:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2498:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2487:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2487:30:4"
															},
															"nodeType": "YulIf",
															"src": "2484:56:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2550:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2580:6:4"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "2558:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2558:29:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2550:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2624:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "2636:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2642:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2632:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2632:15:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2624:4:4"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2397:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2408:4:4",
														"type": ""
													}
												],
												"src": "2346:308:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2705:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2715:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2744:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2726:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2726:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2715:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2687:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2697:7:4",
														"type": ""
													}
												],
												"src": "2660:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2807:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2817:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2832:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2839:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2828:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2828:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2817:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2789:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2799:7:4",
														"type": ""
													}
												],
												"src": "2762:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2943:258:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2953:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2962:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2957:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3022:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3047:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3052:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3043:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3043:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "3066:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3071:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3062:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3062:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3056:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3056:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3036:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3036:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3036:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2983:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2986:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2980:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2980:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2994:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2996:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3005:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3008:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3001:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3001:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2996:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2976:3:4",
																"statements": []
															},
															"src": "2972:113:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3119:76:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "3169:3:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "3174:6:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3165:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3165:16:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3183:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3158:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3158:27:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3158:27:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3100:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3103:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3097:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3097:13:4"
															},
															"nodeType": "YulIf",
															"src": "3094:101:4"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2925:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "2930:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2935:6:4",
														"type": ""
													}
												],
												"src": "2894:307:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3258:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3268:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3282:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3288:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3278:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3278:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3268:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3299:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3329:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3335:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3325:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3325:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3303:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3376:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3390:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "3404:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3412:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3400:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3400:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3390:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3356:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3349:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3349:26:4"
															},
															"nodeType": "YulIf",
															"src": "3346:81:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3479:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "3493:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3493:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3493:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3443:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3466:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3474:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3463:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3463:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3440:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3440:38:4"
															},
															"nodeType": "YulIf",
															"src": "3437:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3242:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3251:6:4",
														"type": ""
													}
												],
												"src": "3207:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3576:238:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3586:58:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3608:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "3638:4:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "3616:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3616:27:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3604:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3604:40:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "3590:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3755:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3757:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3757:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3757:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3698:10:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3710:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3695:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3695:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "3734:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3746:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "3731:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3731:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "3692:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3692:62:4"
															},
															"nodeType": "YulIf",
															"src": "3689:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3793:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3797:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3786:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3786:22:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3786:22:4"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3562:6:4",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3570:4:4",
														"type": ""
													}
												],
												"src": "3533:281:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3848:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3865:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3868:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3858:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3858:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3858:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3962:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3965:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3955:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3955:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3955:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3986:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3989:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3979:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3979:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3979:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3820:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4034:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4051:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4054:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4044:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4044:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4044:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4148:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4151:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4141:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4141:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4141:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4172:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4175:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4165:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4165:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4165:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "4006:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4281:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4298:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4301:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4291:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4291:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4291:12:4"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "4192:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4404:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4421:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4424:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4414:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4414:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4414:12:4"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "4315:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4527:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4544:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4547:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4537:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4537:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4537:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4438:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4650:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4667:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4670:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4660:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4660:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4660:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4561:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4732:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4742:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4760:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4767:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4756:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4756:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4776:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4772:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4772:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4752:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4752:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4742:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4715:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4725:6:4",
														"type": ""
													}
												],
												"src": "4684:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4835:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4892:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4901:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4904:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4894:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4894:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4894:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4858:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4883:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4865:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4865:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4855:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4855:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4848:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4848:43:4"
															},
															"nodeType": "YulIf",
															"src": "4845:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4828:5:4",
														"type": ""
													}
												],
												"src": "4792:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620019733803806200197383398181016040528101906200003791906200023a565b83600390805190602001906200004f929190620000f5565b50826004908051906020019062000068929190620000f5565b5081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050620004bc565b8280546200010390620003b3565b90600052602060002090601f01602090048101928262000127576000855562000173565b82601f106200014257805160ff191683800117855562000173565b8280016001018555821562000173579182015b828111156200017257825182559160200191906001019062000155565b5b50905062000182919062000186565b5090565b5b80821115620001a157600081600090555060010162000187565b5090565b6000620001bc620001b68462000313565b620002ea565b905082815260208101848484011115620001db57620001da62000482565b5b620001e88482856200037d565b509392505050565b6000815190506200020181620004a2565b92915050565b600082601f8301126200021f576200021e6200047d565b5b815162000231848260208601620001a5565b91505092915050565b600080600080608085870312156200025757620002566200048c565b5b600085015167ffffffffffffffff81111562000278576200027762000487565b5b620002868782880162000207565b945050602085015167ffffffffffffffff811115620002aa57620002a962000487565b5b620002b88782880162000207565b9350506040620002cb87828801620001f0565b9250506060620002de87828801620001f0565b91505092959194509250565b6000620002f662000309565b9050620003048282620003e9565b919050565b6000604051905090565b600067ffffffffffffffff8211156200033157620003306200044e565b5b6200033c8262000491565b9050602081019050919050565b600062000356826200035d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200039d57808201518184015260208101905062000380565b83811115620003ad576000848401525b50505050565b60006002820490506001821680620003cc57607f821691505b60208210811415620003e357620003e26200041f565b5b50919050565b620003f48262000491565b810181811067ffffffffffffffff821117156200041657620004156200044e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b620004ad8162000349565b8114620004b957600080fd5b50565b6114a780620004cc6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610e7a565b60405180910390f35b6100e660048036038101906100e19190610cc4565b610308565b6040516100f39190610e5f565b60405180910390f35b61010461032b565b6040516101119190610f7c565b60405180910390f35b610134600480360381019061012f9190610c71565b610335565b6040516101419190610e5f565b60405180910390f35b610152610364565b60405161015f9190610f97565b60405180910390f35b610182600480360381019061017d9190610cc4565b61036d565b60405161018f9190610e5f565b60405180910390f35b6101b260048036038101906101ad9190610c04565b6103a4565b6040516101bf9190610f7c565b60405180910390f35b6101d06103ec565b6040516101dd9190610e7a565b60405180910390f35b61020060048036038101906101fb9190610cc4565b61047e565b60405161020d9190610e5f565b60405180910390f35b610230600480360381019061022b9190610cc4565b6104f5565b60405161023d9190610e5f565b60405180910390f35b610260600480360381019061025b9190610c31565b610518565b60405161026d9190610f7c565b60405180910390f35b6060600380546102859061116b565b80601f01602080910402602001604051908101604052809291908181526020018280546102b19061116b565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610fce565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb9061116b565b80601f01602080910402602001604051908101604052809291908181526020018280546104279061116b565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610f5c565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610f3c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610ebc565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610f7c565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190610edc565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086590610f1c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590610e9c565b60405180910390fd5b6108e9838383610bd0565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690610efc565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a6457816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a589190610fce565b92505081905550610b5a565b60006064600584610a759190611055565b610a7f9190611024565b90508083610a8d91906110af565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ada9190610fce565b9250508190555080600080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b519190610fce565b92505081905550505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bb79190610f7c565b60405180910390a3610bca848484610bd5565b50505050565b505050565b505050565b600081359050610be981611443565b92915050565b600081359050610bfe8161145a565b92915050565b600060208284031215610c1a57610c1961122a565b5b6000610c2884828501610bda565b91505092915050565b60008060408385031215610c4857610c4761122a565b5b6000610c5685828601610bda565b9250506020610c6785828601610bda565b9150509250929050565b600080600060608486031215610c8a57610c8961122a565b5b6000610c9886828701610bda565b9350506020610ca986828701610bda565b9250506040610cba86828701610bef565b9150509250925092565b60008060408385031215610cdb57610cda61122a565b5b6000610ce985828601610bda565b9250506020610cfa85828601610bef565b9150509250929050565b610d0d816110f5565b82525050565b6000610d1e82610fb2565b610d288185610fbd565b9350610d38818560208601611138565b610d418161122f565b840191505092915050565b6000610d59602383610fbd565b9150610d6482611240565b604082019050919050565b6000610d7c602283610fbd565b9150610d878261128f565b604082019050919050565b6000610d9f601d83610fbd565b9150610daa826112de565b602082019050919050565b6000610dc2602683610fbd565b9150610dcd82611307565b604082019050919050565b6000610de5602583610fbd565b9150610df082611356565b604082019050919050565b6000610e08602483610fbd565b9150610e13826113a5565b604082019050919050565b6000610e2b602583610fbd565b9150610e36826113f4565b604082019050919050565b610e4a81611121565b82525050565b610e598161112b565b82525050565b6000602082019050610e746000830184610d04565b92915050565b60006020820190508181036000830152610e948184610d13565b905092915050565b60006020820190508181036000830152610eb581610d4c565b9050919050565b60006020820190508181036000830152610ed581610d6f565b9050919050565b60006020820190508181036000830152610ef581610d92565b9050919050565b60006020820190508181036000830152610f1581610db5565b9050919050565b60006020820190508181036000830152610f3581610dd8565b9050919050565b60006020820190508181036000830152610f5581610dfb565b9050919050565b60006020820190508181036000830152610f7581610e1e565b9050919050565b6000602082019050610f916000830184610e41565b92915050565b6000602082019050610fac6000830184610e50565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610fd982611121565b9150610fe483611121565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110195761101861119d565b5b828201905092915050565b600061102f82611121565b915061103a83611121565b92508261104a576110496111cc565b5b828204905092915050565b600061106082611121565b915061106b83611121565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156110a4576110a361119d565b5b828202905092915050565b60006110ba82611121565b91506110c583611121565b9250828210156110d8576110d761119d565b5b828203905092915050565b60006110ee82611101565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561115657808201518184015260208101905061113b565b83811115611165576000848401525b50505050565b6000600282049050600182168061118357607f821691505b60208210811415611197576111966111fb565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61144c816110e3565b811461145757600080fd5b50565b61146381611121565b811461146e57600080fd5b5056fea2646970667358221220e1ca5bb88541c4ccbf473ff727f0faf385003873219fa7f94eea613b5277942f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1973 CODESIZE SUB DUP1 PUSH3 0x1973 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x23A JUMP JUMPDEST DUP4 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0xF5 JUMP JUMPDEST POP DUP3 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0xF5 JUMP JUMPDEST POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP PUSH3 0x4BC JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x103 SWAP1 PUSH3 0x3B3 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x127 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x173 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x142 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x173 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x173 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x172 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x155 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x182 SWAP2 SWAP1 PUSH3 0x186 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x1A1 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x187 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1BC PUSH3 0x1B6 DUP5 PUSH3 0x313 JUMP JUMPDEST PUSH3 0x2EA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x482 JUMP JUMPDEST JUMPDEST PUSH3 0x1E8 DUP5 DUP3 DUP6 PUSH3 0x37D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x201 DUP2 PUSH3 0x4A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x21F JUMPI PUSH3 0x21E PUSH3 0x47D JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x231 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x1A5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x257 JUMPI PUSH3 0x256 PUSH3 0x48C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x278 JUMPI PUSH3 0x277 PUSH3 0x487 JUMP JUMPDEST JUMPDEST PUSH3 0x286 DUP8 DUP3 DUP9 ADD PUSH3 0x207 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 DUP6 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2AA JUMPI PUSH3 0x2A9 PUSH3 0x487 JUMP JUMPDEST JUMPDEST PUSH3 0x2B8 DUP8 DUP3 DUP9 ADD PUSH3 0x207 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH3 0x2CB DUP8 DUP3 DUP9 ADD PUSH3 0x1F0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH3 0x2DE DUP8 DUP3 DUP9 ADD PUSH3 0x1F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2F6 PUSH3 0x309 JUMP JUMPDEST SWAP1 POP PUSH3 0x304 DUP3 DUP3 PUSH3 0x3E9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x331 JUMPI PUSH3 0x330 PUSH3 0x44E JUMP JUMPDEST JUMPDEST PUSH3 0x33C DUP3 PUSH3 0x491 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x356 DUP3 PUSH3 0x35D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x39D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x380 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x3AD JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x3CC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3E3 JUMPI PUSH3 0x3E2 PUSH3 0x41F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3F4 DUP3 PUSH3 0x491 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x416 JUMPI PUSH3 0x415 PUSH3 0x44E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4AD DUP2 PUSH3 0x349 JUMP JUMPDEST DUP2 EQ PUSH3 0x4B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x14A7 DUP1 PUSH3 0x4CC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xE7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC71 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xE7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xC31 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0x116B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0x116B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xFCE JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0x116B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0x116B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xF5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xEBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0xEDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0xF1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0xEFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA64 JUMPI DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA58 SWAP2 SWAP1 PUSH2 0xFCE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x5 DUP5 PUSH2 0xA75 SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST PUSH2 0xA7F SWAP2 SWAP1 PUSH2 0x1024 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH2 0xA8D SWAP2 SWAP1 PUSH2 0x10AF JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xADA SWAP2 SWAP1 PUSH2 0xFCE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB51 SWAP2 SWAP1 PUSH2 0xFCE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xBB7 SWAP2 SWAP1 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xBCA DUP5 DUP5 DUP5 PUSH2 0xBD5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBE9 DUP2 PUSH2 0x1443 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBFE DUP2 PUSH2 0x145A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC1A JUMPI PUSH2 0xC19 PUSH2 0x122A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC28 DUP5 DUP3 DUP6 ADD PUSH2 0xBDA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC48 JUMPI PUSH2 0xC47 PUSH2 0x122A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC56 DUP6 DUP3 DUP7 ADD PUSH2 0xBDA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC67 DUP6 DUP3 DUP7 ADD PUSH2 0xBDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC8A JUMPI PUSH2 0xC89 PUSH2 0x122A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC98 DUP7 DUP3 DUP8 ADD PUSH2 0xBDA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCA9 DUP7 DUP3 DUP8 ADD PUSH2 0xBDA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCBA DUP7 DUP3 DUP8 ADD PUSH2 0xBEF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCDB JUMPI PUSH2 0xCDA PUSH2 0x122A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCE9 DUP6 DUP3 DUP7 ADD PUSH2 0xBDA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCFA DUP6 DUP3 DUP7 ADD PUSH2 0xBEF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xD0D DUP2 PUSH2 0x10F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD1E DUP3 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0xD28 DUP2 DUP6 PUSH2 0xFBD JUMP JUMPDEST SWAP4 POP PUSH2 0xD38 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1138 JUMP JUMPDEST PUSH2 0xD41 DUP2 PUSH2 0x122F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD59 PUSH1 0x23 DUP4 PUSH2 0xFBD JUMP JUMPDEST SWAP2 POP PUSH2 0xD64 DUP3 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD7C PUSH1 0x22 DUP4 PUSH2 0xFBD JUMP JUMPDEST SWAP2 POP PUSH2 0xD87 DUP3 PUSH2 0x128F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD9F PUSH1 0x1D DUP4 PUSH2 0xFBD JUMP JUMPDEST SWAP2 POP PUSH2 0xDAA DUP3 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC2 PUSH1 0x26 DUP4 PUSH2 0xFBD JUMP JUMPDEST SWAP2 POP PUSH2 0xDCD DUP3 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE5 PUSH1 0x25 DUP4 PUSH2 0xFBD JUMP JUMPDEST SWAP2 POP PUSH2 0xDF0 DUP3 PUSH2 0x1356 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE08 PUSH1 0x24 DUP4 PUSH2 0xFBD JUMP JUMPDEST SWAP2 POP PUSH2 0xE13 DUP3 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2B PUSH1 0x25 DUP4 PUSH2 0xFBD JUMP JUMPDEST SWAP2 POP PUSH2 0xE36 DUP3 PUSH2 0x13F4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE4A DUP2 PUSH2 0x1121 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE59 DUP2 PUSH2 0x112B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE74 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE94 DUP2 DUP5 PUSH2 0xD13 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEB5 DUP2 PUSH2 0xD4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xED5 DUP2 PUSH2 0xD6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEF5 DUP2 PUSH2 0xD92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF15 DUP2 PUSH2 0xDB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF35 DUP2 PUSH2 0xDD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF55 DUP2 PUSH2 0xDFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF75 DUP2 PUSH2 0xE1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF91 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFAC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD9 DUP3 PUSH2 0x1121 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE4 DUP4 PUSH2 0x1121 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1019 JUMPI PUSH2 0x1018 PUSH2 0x119D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102F DUP3 PUSH2 0x1121 JUMP JUMPDEST SWAP2 POP PUSH2 0x103A DUP4 PUSH2 0x1121 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x104A JUMPI PUSH2 0x1049 PUSH2 0x11CC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1060 DUP3 PUSH2 0x1121 JUMP JUMPDEST SWAP2 POP PUSH2 0x106B DUP4 PUSH2 0x1121 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x10A4 JUMPI PUSH2 0x10A3 PUSH2 0x119D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10BA DUP3 PUSH2 0x1121 JUMP JUMPDEST SWAP2 POP PUSH2 0x10C5 DUP4 PUSH2 0x1121 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x10D8 JUMPI PUSH2 0x10D7 PUSH2 0x119D JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10EE DUP3 PUSH2 0x1101 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1156 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x113B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1165 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1183 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1197 JUMPI PUSH2 0x1196 PUSH2 0x11FB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x144C DUP2 PUSH2 0x10E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1463 DUP2 PUSH2 0x1121 JUMP JUMPDEST DUP2 EQ PUSH2 0x146E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xCA JUMPDEST 0xB8 DUP6 COINBASE 0xC4 0xCC 0xBF SELFBALANCE EXTCODEHASH 0xF7 0x27 CREATE STATICCALL RETURN DUP6 STOP CODESIZE PUSH20 0x219FA7F94EEA613B5277942F64736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "1403:11945:0:-:0;;;2051:246;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2174:5;2166;:13;;;;;;;;;;;;:::i;:::-;;2199:7;2189;:17;;;;;;;;;;;;:::i;:::-;;2232:13;2216;;:29;;;;;;;;;;;;;;;;;;2274:16;2255;;:35;;;;;;;;;;;;;;;;;;2051:246;;;;1403:11945;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:421:4:-;96:5;121:66;137:49;179:6;137:49;:::i;:::-;121:66;:::i;:::-;112:75;;210:6;203:5;196:21;248:4;241:5;237:16;286:3;277:6;272:3;268:16;265:25;262:112;;;293:79;;:::i;:::-;262:112;383:39;415:6;410:3;405;383:39;:::i;:::-;102:326;7:421;;;;;:::o;434:143::-;491:5;522:6;516:13;507:22;;538:33;565:5;538:33;:::i;:::-;434:143;;;;:::o;597:355::-;664:5;713:3;706:4;698:6;694:17;690:27;680:122;;721:79;;:::i;:::-;680:122;831:6;825:13;856:90;942:3;934:6;927:4;919:6;915:17;856:90;:::i;:::-;847:99;;670:282;597:355;;;;:::o;958:1166::-;1075:6;1083;1091;1099;1148:3;1136:9;1127:7;1123:23;1119:33;1116:120;;;1155:79;;:::i;:::-;1116:120;1296:1;1285:9;1281:17;1275:24;1326:18;1318:6;1315:30;1312:117;;;1348:79;;:::i;:::-;1312:117;1453:74;1519:7;1510:6;1499:9;1495:22;1453:74;:::i;:::-;1443:84;;1246:291;1597:2;1586:9;1582:18;1576:25;1628:18;1620:6;1617:30;1614:117;;;1650:79;;:::i;:::-;1614:117;1755:74;1821:7;1812:6;1801:9;1797:22;1755:74;:::i;:::-;1745:84;;1547:292;1878:2;1904:64;1960:7;1951:6;1940:9;1936:22;1904:64;:::i;:::-;1894:74;;1849:129;2017:2;2043:64;2099:7;2090:6;2079:9;2075:22;2043:64;:::i;:::-;2033:74;;1988:129;958:1166;;;;;;;:::o;2130:129::-;2164:6;2191:20;;:::i;:::-;2181:30;;2220:33;2248:4;2240:6;2220:33;:::i;:::-;2130:129;;;:::o;2265:75::-;2298:6;2331:2;2325:9;2315:19;;2265:75;:::o;2346:308::-;2408:4;2498:18;2490:6;2487:30;2484:56;;;2520:18;;:::i;:::-;2484:56;2558:29;2580:6;2558:29;:::i;:::-;2550:37;;2642:4;2636;2632:15;2624:23;;2346:308;;;:::o;2660:96::-;2697:7;2726:24;2744:5;2726:24;:::i;:::-;2715:35;;2660:96;;;:::o;2762:126::-;2799:7;2839:42;2832:5;2828:54;2817:65;;2762:126;;;:::o;2894:307::-;2962:1;2972:113;2986:6;2983:1;2980:13;2972:113;;;3071:1;3066:3;3062:11;3056:18;3052:1;3047:3;3043:11;3036:39;3008:2;3005:1;3001:10;2996:15;;2972:113;;;3103:6;3100:1;3097:13;3094:101;;;3183:1;3174:6;3169:3;3165:16;3158:27;3094:101;2943:258;2894:307;;;:::o;3207:320::-;3251:6;3288:1;3282:4;3278:12;3268:22;;3335:1;3329:4;3325:12;3356:18;3346:81;;3412:4;3404:6;3400:17;3390:27;;3346:81;3474:2;3466:6;3463:14;3443:18;3440:38;3437:84;;;3493:18;;:::i;:::-;3437:84;3258:269;3207:320;;;:::o;3533:281::-;3616:27;3638:4;3616:27;:::i;:::-;3608:6;3604:40;3746:6;3734:10;3731:22;3710:18;3698:10;3695:34;3692:62;3689:88;;;3757:18;;:::i;:::-;3689:88;3797:10;3793:2;3786:22;3576:238;3533:281;;:::o;3820:180::-;3868:77;3865:1;3858:88;3965:4;3962:1;3955:15;3989:4;3986:1;3979:15;4006:180;4054:77;4051:1;4044:88;4151:4;4148:1;4141:15;4175:4;4172:1;4165:15;4192:117;4301:1;4298;4291:12;4315:117;4424:1;4421;4414:12;4438:117;4547:1;4544;4537:12;4561:117;4670:1;4667;4660:12;4684:102;4725:6;4776:2;4772:7;4767:2;4760:5;4756:14;4752:28;4742:38;;4684:102;;;:::o;4792:122::-;4865:24;4883:5;4865:24;:::i;:::-;4858:5;4855:35;4845:63;;4904:1;4901;4894:12;4845:63;4792:122;:::o;1403:11945:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_629": {
									"entryPoint": 3029,
									"id": 629,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_564": {
									"entryPoint": 1447,
									"id": 564,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_618": {
									"entryPoint": 3024,
									"id": 618,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_745": {
									"entryPoint": 1439,
									"id": 745,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_607": {
									"entryPoint": 1906,
									"id": 607,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_391": {
									"entryPoint": 2046,
									"id": 391,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_157": {
									"entryPoint": 1304,
									"id": 157,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_182": {
									"entryPoint": 776,
									"id": 182,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_114": {
									"entryPoint": 932,
									"id": 114,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_90": {
									"entryPoint": 868,
									"id": 90,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_285": {
									"entryPoint": 1150,
									"id": 285,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_244": {
									"entryPoint": 877,
									"id": 244,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_70": {
									"entryPoint": 630,
									"id": 70,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_80": {
									"entryPoint": 1004,
									"id": 80,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_100": {
									"entryPoint": 811,
									"id": 100,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_215": {
									"entryPoint": 821,
									"id": 215,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_139": {
									"entryPoint": 1269,
									"id": 139,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3076,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3404,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3474,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3579,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3614,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 3664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3900,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 3991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4046,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 4132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4341,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory": {
									"entryPoint": 4408,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4509,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4556,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4603,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4650,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f": {
									"entryPoint": 4672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029": {
									"entryPoint": 4751,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe": {
									"entryPoint": 4830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6": {
									"entryPoint": 4871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea": {
									"entryPoint": 4950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208": {
									"entryPoint": 5029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8": {
									"entryPoint": 5108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14789:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "7:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:4",
														"type": ""
													}
												],
												"src": "152:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:4"
															},
															"nodeType": "YulIf",
															"src": "373:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:4",
														"type": ""
													}
												],
												"src": "297:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "715:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "761:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "763:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "763:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "763:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "736:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "745:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "732:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "732:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "728:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "728:32:4"
															},
															"nodeType": "YulIf",
															"src": "725:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "854:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "869:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "883:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "873:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "898:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "933:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "944:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "929:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "929:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "953:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "908:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "908:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "898:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "981:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "996:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1000:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1026:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1061:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1072:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1057:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1057:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1081:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1036:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1026:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "677:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "688:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "700:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "708:6:4",
														"type": ""
													}
												],
												"src": "632:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1212:519:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1258:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1260:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1260:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1260:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1233:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1242:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1229:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1229:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1254:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1225:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1225:32:4"
															},
															"nodeType": "YulIf",
															"src": "1222:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1351:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1366:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1380:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1370:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1395:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1430:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1441:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1426:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1426:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1450:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1405:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1405:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1395:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1478:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1493:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1507:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1497:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1523:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1558:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1569:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1554:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1554:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1578:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1533:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1533:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1523:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1606:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1621:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1625:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1651:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1686:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1697:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1682:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1682:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1706:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1661:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1661:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1651:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1166:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1177:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1189:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1197:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1205:6:4",
														"type": ""
													}
												],
												"src": "1112:619:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1820:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1866:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1868:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1868:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1841:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1850:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1837:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1837:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1862:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1833:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1833:32:4"
															},
															"nodeType": "YulIf",
															"src": "1830:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1959:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1974:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1988:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1978:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2003:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2038:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2049:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2034:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2034:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2058:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2013:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2013:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2003:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2086:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2101:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2115:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2105:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2131:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2166:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2177:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2162:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2162:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2186:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2141:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2141:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2131:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1782:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1793:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1805:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1813:6:4",
														"type": ""
													}
												],
												"src": "1737:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2276:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2293:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2313:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2298:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2298:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2286:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2286:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2286:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2264:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2271:3:4",
														"type": ""
													}
												],
												"src": "2217:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2424:272:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2434:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2481:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2448:32:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2448:39:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2438:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2496:78:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2562:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2567:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2503:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2503:71:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2496:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2609:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2616:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2605:16:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2623:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2628:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2583:21:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2583:52:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2583:52:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2644:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2655:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2682:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2660:21:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2660:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2651:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2644:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2405:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2412:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2420:3:4",
														"type": ""
													}
												],
												"src": "2332:364:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2848:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2858:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2924:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2929:2:4",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2865:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2858:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3030:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																	"nodeType": "YulIdentifier",
																	"src": "2941:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2941:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2941:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3043:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3054:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3059:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3050:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3050:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3043:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2836:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2844:3:4",
														"type": ""
													}
												],
												"src": "2702:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3220:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3230:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3296:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3301:2:4",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3237:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3237:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3230:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3402:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																	"nodeType": "YulIdentifier",
																	"src": "3313:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3313:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3313:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3415:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3426:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3431:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3422:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3422:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3415:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3208:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3216:3:4",
														"type": ""
													}
												],
												"src": "3074:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3592:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3602:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3668:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3673:2:4",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3609:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3609:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3602:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3774:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																	"nodeType": "YulIdentifier",
																	"src": "3685:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3685:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3685:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3787:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3798:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3803:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3794:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3794:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3787:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3580:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3588:3:4",
														"type": ""
													}
												],
												"src": "3446:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3964:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3974:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4040:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4045:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3981:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3974:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4146:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"nodeType": "YulIdentifier",
																	"src": "4057:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4057:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4057:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4159:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4170:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4175:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4166:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4166:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4159:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3952:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3960:3:4",
														"type": ""
													}
												],
												"src": "3818:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4336:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4346:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4412:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4417:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4353:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4353:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4346:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4518:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																	"nodeType": "YulIdentifier",
																	"src": "4429:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4429:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4429:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4531:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4542:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4547:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4538:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4538:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4531:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4324:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4332:3:4",
														"type": ""
													}
												],
												"src": "4190:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4708:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4718:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4784:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4789:2:4",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4725:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4725:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4718:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4890:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																	"nodeType": "YulIdentifier",
																	"src": "4801:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4801:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4801:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4903:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4914:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4919:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4910:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4910:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4903:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4696:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4704:3:4",
														"type": ""
													}
												],
												"src": "4562:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5080:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5090:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5156:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5161:2:4",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5097:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5097:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5090:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5262:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																	"nodeType": "YulIdentifier",
																	"src": "5173:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5173:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5173:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5275:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5286:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5291:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5282:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5282:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5275:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5068:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5076:3:4",
														"type": ""
													}
												],
												"src": "4934:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5371:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5388:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5411:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5393:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5393:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5381:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5381:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5381:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5359:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5366:3:4",
														"type": ""
													}
												],
												"src": "5306:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5491:51:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5508:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5529:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5513:15:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5513:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5501:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5501:35:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5501:35:4"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5479:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5486:3:4",
														"type": ""
													}
												],
												"src": "5430:112:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5640:118:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5650:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5662:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5673:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5658:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5658:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5650:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5724:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5737:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5748:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5733:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5733:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5686:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5686:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5686:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5612:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5624:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5635:4:4",
														"type": ""
													}
												],
												"src": "5548:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5882:195:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5892:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5904:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5915:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5900:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5900:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5892:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5939:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5950:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5935:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5935:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5958:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5964:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5954:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5954:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5928:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5928:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5928:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5984:86:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6056:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6065:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5992:63:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5992:78:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5984:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5854:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5866:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5877:4:4",
														"type": ""
													}
												],
												"src": "5764:313:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6254:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6264:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6276:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6287:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6272:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6272:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6264:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6311:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6322:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6307:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6307:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6330:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6336:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6326:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6326:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6300:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6300:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6300:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6356:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6490:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6364:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6364:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6356:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6234:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6249:4:4",
														"type": ""
													}
												],
												"src": "6083:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6679:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6689:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6701:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6712:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6697:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6697:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6689:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6736:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6747:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6732:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6732:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6755:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6761:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6751:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6751:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6725:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6725:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6725:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6781:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6915:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6789:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6789:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6781:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6659:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6674:4:4",
														"type": ""
													}
												],
												"src": "6508:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7104:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7114:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7126:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7137:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7122:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7122:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7114:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7161:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7172:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7157:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7157:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7180:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7186:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7176:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7176:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7150:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7150:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7150:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7206:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7340:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7214:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7214:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7206:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7084:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7099:4:4",
														"type": ""
													}
												],
												"src": "6933:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7529:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7539:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7551:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7562:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7547:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7547:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7539:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7586:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7597:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7582:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7582:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7605:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7611:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7601:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7601:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7575:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7575:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7575:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7631:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7765:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7639:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7639:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7631:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7509:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7524:4:4",
														"type": ""
													}
												],
												"src": "7358:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7954:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7964:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7976:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7987:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7972:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7972:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7964:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8011:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8022:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8007:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8007:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8030:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8036:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8026:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8026:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8000:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8000:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8000:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8056:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8190:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8064:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8064:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8056:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7934:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7949:4:4",
														"type": ""
													}
												],
												"src": "7783:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8379:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8389:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8401:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8412:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8397:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8397:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8389:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8436:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8447:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8432:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8432:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8455:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8461:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8451:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8451:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8425:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8425:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8425:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8481:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8615:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8489:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8489:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8481:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8359:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8374:4:4",
														"type": ""
													}
												],
												"src": "8208:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8804:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8814:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8826:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8837:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8822:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8822:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8814:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8861:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8872:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8857:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8857:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8880:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8886:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8876:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8876:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8850:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8850:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8850:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8906:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9040:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8914:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8906:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8784:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8799:4:4",
														"type": ""
													}
												],
												"src": "8633:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9156:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9166:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9178:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9189:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9174:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9174:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9166:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9246:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9259:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9270:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9255:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9255:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9202:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9202:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9202:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9128:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9140:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9151:4:4",
														"type": ""
													}
												],
												"src": "9058:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9380:120:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9390:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9402:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9413:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9398:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9398:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9390:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9466:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9479:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9490:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9475:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9475:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9426:39:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9426:67:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9426:67:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9352:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9364:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9375:4:4",
														"type": ""
													}
												],
												"src": "9286:214:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9546:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9556:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9572:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9566:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9566:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "9556:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9539:6:4",
														"type": ""
													}
												],
												"src": "9506:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9646:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9657:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9673:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9667:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9667:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "9657:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9629:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9639:6:4",
														"type": ""
													}
												],
												"src": "9587:99:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9788:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9805:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9810:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9798:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9798:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9798:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9826:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9845:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9850:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9841:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9841:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "9826:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9760:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9765:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "9776:11:4",
														"type": ""
													}
												],
												"src": "9692:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9911:261:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9921:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9944:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9926:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9926:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9921:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9955:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9978:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9960:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9960:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9955:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10118:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10120:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10120:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10120:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10039:1:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10046:66:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10114:1:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10042:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10042:74:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10036:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10036:81:4"
															},
															"nodeType": "YulIf",
															"src": "10033:107:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10150:16:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10161:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10164:1:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10157:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10157:9:4"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "10150:3:4"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9898:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9901:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9907:3:4",
														"type": ""
													}
												],
												"src": "9867:305:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10220:143:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10230:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10253:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10235:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10235:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10230:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10264:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10287:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10269:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10269:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10264:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10311:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "10313:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10313:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10313:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10308:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10301:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10301:9:4"
															},
															"nodeType": "YulIf",
															"src": "10298:35:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10343:14:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10352:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10355:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10348:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10348:9:4"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "10343:1:4"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10209:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10212:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "10218:1:4",
														"type": ""
													}
												],
												"src": "10178:185:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10417:300:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10427:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10450:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10432:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10432:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10427:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10461:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10484:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10466:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10466:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10461:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10659:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10661:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10661:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10661:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10571:1:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10564:6:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10564:9:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10557:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10557:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "10579:1:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10586:66:4",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "10654:1:4"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "10582:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10582:74:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10576:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10576:81:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10553:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10553:105:4"
															},
															"nodeType": "YulIf",
															"src": "10550:131:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10691:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10706:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10709:1:4"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "10702:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10702:9:4"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "10691:7:4"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10400:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10403:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "10409:7:4",
														"type": ""
													}
												],
												"src": "10369:348:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10768:146:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10778:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10801:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10783:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10783:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10778:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10812:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10835:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10817:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10817:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10812:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10859:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10861:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10861:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10861:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10853:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10856:1:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10850:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10850:8:4"
															},
															"nodeType": "YulIf",
															"src": "10847:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10891:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10903:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10906:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10899:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10899:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10891:4:4"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10754:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10757:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10763:4:4",
														"type": ""
													}
												],
												"src": "10723:191:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10965:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10975:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11004:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10986:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "10986:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "10975:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10947:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "10957:7:4",
														"type": ""
													}
												],
												"src": "10920:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11064:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11074:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11099:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "11092:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11092:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11085:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11085:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11074:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11046:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11056:7:4",
														"type": ""
													}
												],
												"src": "11022:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11163:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11173:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11188:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11195:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11184:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11184:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11173:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11145:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11155:7:4",
														"type": ""
													}
												],
												"src": "11118:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11295:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11305:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11316:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11305:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11277:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11287:7:4",
														"type": ""
													}
												],
												"src": "11250:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11376:43:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11386:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11401:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11408:4:4",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11397:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11397:16:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "11386:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11358:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "11368:7:4",
														"type": ""
													}
												],
												"src": "11333:86:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11474:258:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11484:10:4",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11493:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "11488:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11553:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11578:3:4"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "11583:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11574:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11574:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "11597:3:4"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "11602:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11593:3:4"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11593:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11587:5:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11587:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11567:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11567:39:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11567:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11514:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11517:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11511:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11511:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11525:19:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11527:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11536:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11539:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11532:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11532:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11527:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11507:3:4",
																"statements": []
															},
															"src": "11503:113:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11650:76:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11700:3:4"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "11705:6:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11696:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11696:16:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11714:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11689:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11689:27:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11689:27:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11631:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11634:6:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11628:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11628:13:4"
															},
															"nodeType": "YulIf",
															"src": "11625:101:4"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11456:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11461:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11466:6:4",
														"type": ""
													}
												],
												"src": "11425:307:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11789:269:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11799:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11813:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11819:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11809:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11809:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11799:6:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11830:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11860:4:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11866:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11856:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11856:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "11834:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11907:51:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11921:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "11935:6:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11943:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11931:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11931:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11921:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11887:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11880:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11880:26:4"
															},
															"nodeType": "YulIf",
															"src": "11877:81:4"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12010:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "12024:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12024:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12024:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11974:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11997:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12005:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11994:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11994:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11971:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "11971:38:4"
															},
															"nodeType": "YulIf",
															"src": "11968:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11773:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11782:6:4",
														"type": ""
													}
												],
												"src": "11738:320:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12092:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12109:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12112:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12102:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12102:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12102:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12206:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12209:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12199:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12199:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12199:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12230:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12233:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12223:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12223:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12223:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "12064:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12278:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12295:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12298:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12288:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12288:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12288:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12392:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12395:4:4",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12385:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12385:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12385:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12416:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12419:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12409:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12409:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12409:15:4"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "12250:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12464:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12481:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12484:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12474:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12474:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12474:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12578:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12581:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12571:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12571:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12571:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12602:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12605:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12595:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12595:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12595:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "12436:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12711:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12728:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12731:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12721:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12721:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12721:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "12622:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12834:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12851:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12854:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12844:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12844:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12844:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "12745:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12916:54:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12926:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12944:5:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12951:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12940:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12940:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12960:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12956:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12956:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12936:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "12936:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12926:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12899:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "12909:6:4",
														"type": ""
													}
												],
												"src": "12868:102:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13082:116:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13104:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13112:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13100:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13100:14:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13116:34:4",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13093:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13093:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13093:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13172:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13180:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13168:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13168:15:4"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13185:5:4",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13161:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13161:30:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13161:30:4"
														}
													]
												},
												"name": "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13074:6:4",
														"type": ""
													}
												],
												"src": "12976:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13310:115:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13332:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13340:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13328:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13328:14:4"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13344:34:4",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13321:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13321:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13321:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13400:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13408:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13396:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13396:15:4"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13413:4:4",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13389:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13389:29:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13389:29:4"
														}
													]
												},
												"name": "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13302:6:4",
														"type": ""
													}
												],
												"src": "13204:221:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13537:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13559:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13567:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13555:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13555:14:4"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13571:31:4",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13548:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13548:55:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13548:55:4"
														}
													]
												},
												"name": "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13529:6:4",
														"type": ""
													}
												],
												"src": "13431:179:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13722:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13744:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13752:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13740:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13740:14:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13756:34:4",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13733:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13733:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13733:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13812:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13820:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13808:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13808:15:4"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13825:8:4",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13801:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13801:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13801:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13714:6:4",
														"type": ""
													}
												],
												"src": "13616:225:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13953:118:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13975:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13983:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13971:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13971:14:4"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13987:34:4",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13964:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "13964:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13964:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14043:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14051:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14039:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14039:15:4"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14056:7:4",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14032:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14032:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14032:32:4"
														}
													]
												},
												"name": "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13945:6:4",
														"type": ""
													}
												],
												"src": "13847:224:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14183:117:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14205:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14213:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14201:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14201:14:4"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14217:34:4",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14194:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14194:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14194:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14273:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14281:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14269:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14269:15:4"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14286:6:4",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14262:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14262:31:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14262:31:4"
														}
													]
												},
												"name": "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14175:6:4",
														"type": ""
													}
												],
												"src": "14077:223:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14412:118:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14434:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14442:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14430:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14430:14:4"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14446:34:4",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14423:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14423:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14423:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14502:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14510:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14498:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14498:15:4"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14515:7:4",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14491:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14491:32:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14491:32:4"
														}
													]
												},
												"name": "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14404:6:4",
														"type": ""
													}
												],
												"src": "14306:224:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14579:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14636:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14645:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14648:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14638:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14638:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14638:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14602:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14627:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "14609:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14609:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14599:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14599:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14592:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14592:43:4"
															},
															"nodeType": "YulIf",
															"src": "14589:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14572:5:4",
														"type": ""
													}
												],
												"src": "14536:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14707:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14764:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14773:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14776:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14766:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14766:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14766:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "14730:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "14755:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "14737:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14737:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "14727:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14727:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14720:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "14720:43:4"
															},
															"nodeType": "YulIf",
															"src": "14717:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14700:5:4",
														"type": ""
													}
												],
												"src": "14664:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610e7a565b60405180910390f35b6100e660048036038101906100e19190610cc4565b610308565b6040516100f39190610e5f565b60405180910390f35b61010461032b565b6040516101119190610f7c565b60405180910390f35b610134600480360381019061012f9190610c71565b610335565b6040516101419190610e5f565b60405180910390f35b610152610364565b60405161015f9190610f97565b60405180910390f35b610182600480360381019061017d9190610cc4565b61036d565b60405161018f9190610e5f565b60405180910390f35b6101b260048036038101906101ad9190610c04565b6103a4565b6040516101bf9190610f7c565b60405180910390f35b6101d06103ec565b6040516101dd9190610e7a565b60405180910390f35b61020060048036038101906101fb9190610cc4565b61047e565b60405161020d9190610e5f565b60405180910390f35b610230600480360381019061022b9190610cc4565b6104f5565b60405161023d9190610e5f565b60405180910390f35b610260600480360381019061025b9190610c31565b610518565b60405161026d9190610f7c565b60405180910390f35b6060600380546102859061116b565b80601f01602080910402602001604051908101604052809291908181526020018280546102b19061116b565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610fce565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb9061116b565b80601f01602080910402602001604051908101604052809291908181526020018280546104279061116b565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610f5c565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610f3c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610ebc565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610f7c565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190610edc565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086590610f1c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590610e9c565b60405180910390fd5b6108e9838383610bd0565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690610efc565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a6457816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a589190610fce565b92505081905550610b5a565b60006064600584610a759190611055565b610a7f9190611024565b90508083610a8d91906110af565b6000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ada9190610fce565b9250508190555080600080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b519190610fce565b92505081905550505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bb79190610f7c565b60405180910390a3610bca848484610bd5565b50505050565b505050565b505050565b600081359050610be981611443565b92915050565b600081359050610bfe8161145a565b92915050565b600060208284031215610c1a57610c1961122a565b5b6000610c2884828501610bda565b91505092915050565b60008060408385031215610c4857610c4761122a565b5b6000610c5685828601610bda565b9250506020610c6785828601610bda565b9150509250929050565b600080600060608486031215610c8a57610c8961122a565b5b6000610c9886828701610bda565b9350506020610ca986828701610bda565b9250506040610cba86828701610bef565b9150509250925092565b60008060408385031215610cdb57610cda61122a565b5b6000610ce985828601610bda565b9250506020610cfa85828601610bef565b9150509250929050565b610d0d816110f5565b82525050565b6000610d1e82610fb2565b610d288185610fbd565b9350610d38818560208601611138565b610d418161122f565b840191505092915050565b6000610d59602383610fbd565b9150610d6482611240565b604082019050919050565b6000610d7c602283610fbd565b9150610d878261128f565b604082019050919050565b6000610d9f601d83610fbd565b9150610daa826112de565b602082019050919050565b6000610dc2602683610fbd565b9150610dcd82611307565b604082019050919050565b6000610de5602583610fbd565b9150610df082611356565b604082019050919050565b6000610e08602483610fbd565b9150610e13826113a5565b604082019050919050565b6000610e2b602583610fbd565b9150610e36826113f4565b604082019050919050565b610e4a81611121565b82525050565b610e598161112b565b82525050565b6000602082019050610e746000830184610d04565b92915050565b60006020820190508181036000830152610e948184610d13565b905092915050565b60006020820190508181036000830152610eb581610d4c565b9050919050565b60006020820190508181036000830152610ed581610d6f565b9050919050565b60006020820190508181036000830152610ef581610d92565b9050919050565b60006020820190508181036000830152610f1581610db5565b9050919050565b60006020820190508181036000830152610f3581610dd8565b9050919050565b60006020820190508181036000830152610f5581610dfb565b9050919050565b60006020820190508181036000830152610f7581610e1e565b9050919050565b6000602082019050610f916000830184610e41565b92915050565b6000602082019050610fac6000830184610e50565b92915050565b600081519050919050565b600082825260208201905092915050565b6000610fd982611121565b9150610fe483611121565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110195761101861119d565b5b828201905092915050565b600061102f82611121565b915061103a83611121565b92508261104a576110496111cc565b5b828204905092915050565b600061106082611121565b915061106b83611121565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156110a4576110a361119d565b5b828202905092915050565b60006110ba82611121565b91506110c583611121565b9250828210156110d8576110d761119d565b5b828203905092915050565b60006110ee82611101565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b8381101561115657808201518184015260208101905061113b565b83811115611165576000848401525b50505050565b6000600282049050600182168061118357607f821691505b60208210811415611197576111966111fb565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b61144c816110e3565b811461145757600080fd5b50565b61146381611121565b811461146e57600080fd5b5056fea2646970667358221220e1ca5bb88541c4ccbf473ff727f0faf385003873219fa7f94eea613b5277942f64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xE7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC71 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xC04 JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xE7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xCC4 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xE5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xC31 JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0x116B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0x116B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xFCE JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0x116B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0x116B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xF5C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xF3C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xEBC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0xEDC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0xF1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0xE9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xBD0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0xEFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA64 JUMPI DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA58 SWAP2 SWAP1 PUSH2 0xFCE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xB5A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0x5 DUP5 PUSH2 0xA75 SWAP2 SWAP1 PUSH2 0x1055 JUMP JUMPDEST PUSH2 0xA7F SWAP2 SWAP1 PUSH2 0x1024 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH2 0xA8D SWAP2 SWAP1 PUSH2 0x10AF JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xADA SWAP2 SWAP1 PUSH2 0xFCE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB51 SWAP2 SWAP1 PUSH2 0xFCE JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xBB7 SWAP2 SWAP1 PUSH2 0xF7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xBCA DUP5 DUP5 DUP5 PUSH2 0xBD5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBE9 DUP2 PUSH2 0x1443 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBFE DUP2 PUSH2 0x145A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC1A JUMPI PUSH2 0xC19 PUSH2 0x122A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC28 DUP5 DUP3 DUP6 ADD PUSH2 0xBDA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC48 JUMPI PUSH2 0xC47 PUSH2 0x122A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC56 DUP6 DUP3 DUP7 ADD PUSH2 0xBDA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC67 DUP6 DUP3 DUP7 ADD PUSH2 0xBDA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC8A JUMPI PUSH2 0xC89 PUSH2 0x122A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC98 DUP7 DUP3 DUP8 ADD PUSH2 0xBDA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCA9 DUP7 DUP3 DUP8 ADD PUSH2 0xBDA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCBA DUP7 DUP3 DUP8 ADD PUSH2 0xBEF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCDB JUMPI PUSH2 0xCDA PUSH2 0x122A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xCE9 DUP6 DUP3 DUP7 ADD PUSH2 0xBDA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xCFA DUP6 DUP3 DUP7 ADD PUSH2 0xBEF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xD0D DUP2 PUSH2 0x10F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD1E DUP3 PUSH2 0xFB2 JUMP JUMPDEST PUSH2 0xD28 DUP2 DUP6 PUSH2 0xFBD JUMP JUMPDEST SWAP4 POP PUSH2 0xD38 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1138 JUMP JUMPDEST PUSH2 0xD41 DUP2 PUSH2 0x122F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD59 PUSH1 0x23 DUP4 PUSH2 0xFBD JUMP JUMPDEST SWAP2 POP PUSH2 0xD64 DUP3 PUSH2 0x1240 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD7C PUSH1 0x22 DUP4 PUSH2 0xFBD JUMP JUMPDEST SWAP2 POP PUSH2 0xD87 DUP3 PUSH2 0x128F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD9F PUSH1 0x1D DUP4 PUSH2 0xFBD JUMP JUMPDEST SWAP2 POP PUSH2 0xDAA DUP3 PUSH2 0x12DE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDC2 PUSH1 0x26 DUP4 PUSH2 0xFBD JUMP JUMPDEST SWAP2 POP PUSH2 0xDCD DUP3 PUSH2 0x1307 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE5 PUSH1 0x25 DUP4 PUSH2 0xFBD JUMP JUMPDEST SWAP2 POP PUSH2 0xDF0 DUP3 PUSH2 0x1356 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE08 PUSH1 0x24 DUP4 PUSH2 0xFBD JUMP JUMPDEST SWAP2 POP PUSH2 0xE13 DUP3 PUSH2 0x13A5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2B PUSH1 0x25 DUP4 PUSH2 0xFBD JUMP JUMPDEST SWAP2 POP PUSH2 0xE36 DUP3 PUSH2 0x13F4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE4A DUP2 PUSH2 0x1121 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE59 DUP2 PUSH2 0x112B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xE74 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD04 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE94 DUP2 DUP5 PUSH2 0xD13 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEB5 DUP2 PUSH2 0xD4C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xED5 DUP2 PUSH2 0xD6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEF5 DUP2 PUSH2 0xD92 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF15 DUP2 PUSH2 0xDB5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF35 DUP2 PUSH2 0xDD8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF55 DUP2 PUSH2 0xDFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF75 DUP2 PUSH2 0xE1E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF91 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE41 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFAC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xE50 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD9 DUP3 PUSH2 0x1121 JUMP JUMPDEST SWAP2 POP PUSH2 0xFE4 DUP4 PUSH2 0x1121 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1019 JUMPI PUSH2 0x1018 PUSH2 0x119D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102F DUP3 PUSH2 0x1121 JUMP JUMPDEST SWAP2 POP PUSH2 0x103A DUP4 PUSH2 0x1121 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x104A JUMPI PUSH2 0x1049 PUSH2 0x11CC JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1060 DUP3 PUSH2 0x1121 JUMP JUMPDEST SWAP2 POP PUSH2 0x106B DUP4 PUSH2 0x1121 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x10A4 JUMPI PUSH2 0x10A3 PUSH2 0x119D JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10BA DUP3 PUSH2 0x1121 JUMP JUMPDEST SWAP2 POP PUSH2 0x10C5 DUP4 PUSH2 0x1121 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x10D8 JUMPI PUSH2 0x10D7 PUSH2 0x119D JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10EE DUP3 PUSH2 0x1101 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1156 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x113B JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1165 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1183 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1197 JUMPI PUSH2 0x1196 PUSH2 0x11FB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x144C DUP2 PUSH2 0x10E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1463 DUP2 PUSH2 0x1121 JUMP JUMPDEST DUP2 EQ PUSH2 0x146E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xCA JUMPDEST 0xB8 DUP6 COINBASE 0xC4 0xCC 0xBF SELFBALANCE EXTCODEHASH 0xF7 0x27 CREATE STATICCALL RETURN DUP6 STOP CODESIZE PUSH20 0x219FA7F94EEA613B5277942F64736F6C63430008 SMOD STOP CALLER ",
							"sourceMap": "1403:11945:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2362:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4639:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3450:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5398:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6079:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3614:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2573:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6800:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4182:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2362:98;2416:13;2448:5;2441:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2362:98;:::o;4639:197::-;4722:4;4738:13;4754:12;:10;:12::i;:::-;4738:28;;4776:32;4785:5;4792:7;4801:6;4776:8;:32::i;:::-;4825:4;4818:11;;;4639:197;;;;:::o;3450:106::-;3511:7;3537:12;;3530:19;;3450:106;:::o;5398:286::-;5525:4;5541:15;5559:12;:10;:12::i;:::-;5541:30;;5581:38;5597:4;5603:7;5612:6;5581:15;:38::i;:::-;5629:27;5639:4;5645:2;5649:6;5629:9;:27::i;:::-;5673:4;5666:11;;;5398:286;;;;;:::o;3299:91::-;3357:5;3381:2;3374:9;;3299:91;:::o;6079:234::-;6167:4;6183:13;6199:12;:10;:12::i;:::-;6183:28;;6221:64;6230:5;6237:7;6274:10;6246:25;6256:5;6263:7;6246:9;:25::i;:::-;:38;;;;:::i;:::-;6221:8;:64::i;:::-;6302:4;6295:11;;;6079:234;;;;:::o;3614:125::-;3688:7;3714:9;:18;3724:7;3714:18;;;;;;;;;;;;;;;;3707:25;;3614:125;;;:::o;2573:102::-;2629:13;2661:7;2654:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2573:102;:::o;6800:427::-;6893:4;6909:13;6925:12;:10;:12::i;:::-;6909:28;;6947:24;6974:25;6984:5;6991:7;6974:9;:25::i;:::-;6947:52;;7037:15;7017:16;:35;;7009:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;7128:60;7137:5;7144:7;7172:15;7153:16;:34;7128:8;:60::i;:::-;7216:4;7209:11;;;;6800:427;;;;:::o;3935:189::-;4014:4;4030:13;4046:12;:10;:12::i;:::-;4030:28;;4068;4078:5;4085:2;4089:6;4068:9;:28::i;:::-;4113:4;4106:11;;;3935:189;;;;:::o;4182:149::-;4271:7;4297:11;:18;4309:5;4297:18;;;;;;;;;;;;;;;:27;4316:7;4297:27;;;;;;;;;;;;;;;;4290:34;;4182:149;;;;:::o;640:96:3:-;693:7;719:10;712:17;;640:96;:::o;10841:370:0:-;10989:1;10972:19;;:5;:19;;;;10964:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11069:1;11050:21;;:7;:21;;;;11042:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11151:6;11121:11;:18;11133:5;11121:18;;;;;;;;;;;;;;;:27;11140:7;11121:27;;;;;;;;;;;;;;;:36;;;;11188:7;11172:32;;11181:5;11172:32;;;11197:6;11172:32;;;;;;:::i;:::-;;;;;;;;10841:370;;;:::o;11492:441::-;11622:24;11649:25;11659:5;11666:7;11649:9;:25::i;:::-;11622:52;;11708:17;11688:16;:37;11684:243;;11769:6;11749:16;:26;;11741:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11851:51;11860:5;11867:7;11895:6;11876:16;:25;11851:8;:51::i;:::-;11684:243;11612:321;11492:441;;;:::o;7681:1176::-;7823:1;7807:18;;:4;:18;;;;7799:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7899:1;7885:16;;:2;:16;;;;7877:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7952:38;7973:4;7979:2;7983:6;7952:20;:38::i;:::-;8001:19;8023:9;:15;8033:4;8023:15;;;;;;;;;;;;;;;;8001:37;;8071:6;8056:11;:21;;8048:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;8186:6;8172:11;:20;8154:9;:15;8164:4;8154:15;;;;;;;;;;;;;;;:38;;;;8539:13;;;;;;;;;;;8533:19;;:2;:19;;;8530:231;;;8584:6;8567:9;:13;8577:2;8567:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;8530:231;;;8628:11;8656:3;8652:1;8643:6;:10;;;;:::i;:::-;8642:17;;;;:::i;:::-;8628:31;;8699:3;8690:6;:12;;;;:::i;:::-;8673:9;:13;8683:2;8673:13;;;;;;;;;;;;;;;;:29;;;;;;;:::i;:::-;;;;;;;;8747:3;8716:9;:27;8726:16;;;;;;;;;;;8716:27;;;;;;;;;;;;;;;;:34;;;;;;;:::i;:::-;;;;;;;;8614:147;8530:231;8791:2;8776:26;;8785:4;8776:26;;;8795:6;8776:26;;;;;;:::i;:::-;;;;;;;;8813:37;8833:4;8839:2;8843:6;8813:19;:37::i;:::-;7789:1068;7681:1176;;;:::o;12517:121::-;;;;:::o;13226:120::-;;;;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:119;;;763:79;;:::i;:::-;725:119;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;632:474;;;;;:::o;1112:619::-;1189:6;1197;1205;1254:2;1242:9;1233:7;1229:23;1225:32;1222:119;;;1260:79;;:::i;:::-;1222:119;1380:1;1405:53;1450:7;1441:6;1430:9;1426:22;1405:53;:::i;:::-;1395:63;;1351:117;1507:2;1533:53;1578:7;1569:6;1558:9;1554:22;1533:53;:::i;:::-;1523:63;;1478:118;1635:2;1661:53;1706:7;1697:6;1686:9;1682:22;1661:53;:::i;:::-;1651:63;;1606:118;1112:619;;;;;:::o;1737:474::-;1805:6;1813;1862:2;1850:9;1841:7;1837:23;1833:32;1830:119;;;1868:79;;:::i;:::-;1830:119;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;2115:2;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2086:118;1737:474;;;;;:::o;2217:109::-;2298:21;2313:5;2298:21;:::i;:::-;2293:3;2286:34;2217:109;;:::o;2332:364::-;2420:3;2448:39;2481:5;2448:39;:::i;:::-;2503:71;2567:6;2562:3;2503:71;:::i;:::-;2496:78;;2583:52;2628:6;2623:3;2616:4;2609:5;2605:16;2583:52;:::i;:::-;2660:29;2682:6;2660:29;:::i;:::-;2655:3;2651:39;2644:46;;2424:272;2332:364;;;;:::o;2702:366::-;2844:3;2865:67;2929:2;2924:3;2865:67;:::i;:::-;2858:74;;2941:93;3030:3;2941:93;:::i;:::-;3059:2;3054:3;3050:12;3043:19;;2702:366;;;:::o;3074:::-;3216:3;3237:67;3301:2;3296:3;3237:67;:::i;:::-;3230:74;;3313:93;3402:3;3313:93;:::i;:::-;3431:2;3426:3;3422:12;3415:19;;3074:366;;;:::o;3446:::-;3588:3;3609:67;3673:2;3668:3;3609:67;:::i;:::-;3602:74;;3685:93;3774:3;3685:93;:::i;:::-;3803:2;3798:3;3794:12;3787:19;;3446:366;;;:::o;3818:::-;3960:3;3981:67;4045:2;4040:3;3981:67;:::i;:::-;3974:74;;4057:93;4146:3;4057:93;:::i;:::-;4175:2;4170:3;4166:12;4159:19;;3818:366;;;:::o;4190:::-;4332:3;4353:67;4417:2;4412:3;4353:67;:::i;:::-;4346:74;;4429:93;4518:3;4429:93;:::i;:::-;4547:2;4542:3;4538:12;4531:19;;4190:366;;;:::o;4562:::-;4704:3;4725:67;4789:2;4784:3;4725:67;:::i;:::-;4718:74;;4801:93;4890:3;4801:93;:::i;:::-;4919:2;4914:3;4910:12;4903:19;;4562:366;;;:::o;4934:::-;5076:3;5097:67;5161:2;5156:3;5097:67;:::i;:::-;5090:74;;5173:93;5262:3;5173:93;:::i;:::-;5291:2;5286:3;5282:12;5275:19;;4934:366;;;:::o;5306:118::-;5393:24;5411:5;5393:24;:::i;:::-;5388:3;5381:37;5306:118;;:::o;5430:112::-;5513:22;5529:5;5513:22;:::i;:::-;5508:3;5501:35;5430:112;;:::o;5548:210::-;5635:4;5673:2;5662:9;5658:18;5650:26;;5686:65;5748:1;5737:9;5733:17;5724:6;5686:65;:::i;:::-;5548:210;;;;:::o;5764:313::-;5877:4;5915:2;5904:9;5900:18;5892:26;;5964:9;5958:4;5954:20;5950:1;5939:9;5935:17;5928:47;5992:78;6065:4;6056:6;5992:78;:::i;:::-;5984:86;;5764:313;;;;:::o;6083:419::-;6249:4;6287:2;6276:9;6272:18;6264:26;;6336:9;6330:4;6326:20;6322:1;6311:9;6307:17;6300:47;6364:131;6490:4;6364:131;:::i;:::-;6356:139;;6083:419;;;:::o;6508:::-;6674:4;6712:2;6701:9;6697:18;6689:26;;6761:9;6755:4;6751:20;6747:1;6736:9;6732:17;6725:47;6789:131;6915:4;6789:131;:::i;:::-;6781:139;;6508:419;;;:::o;6933:::-;7099:4;7137:2;7126:9;7122:18;7114:26;;7186:9;7180:4;7176:20;7172:1;7161:9;7157:17;7150:47;7214:131;7340:4;7214:131;:::i;:::-;7206:139;;6933:419;;;:::o;7358:::-;7524:4;7562:2;7551:9;7547:18;7539:26;;7611:9;7605:4;7601:20;7597:1;7586:9;7582:17;7575:47;7639:131;7765:4;7639:131;:::i;:::-;7631:139;;7358:419;;;:::o;7783:::-;7949:4;7987:2;7976:9;7972:18;7964:26;;8036:9;8030:4;8026:20;8022:1;8011:9;8007:17;8000:47;8064:131;8190:4;8064:131;:::i;:::-;8056:139;;7783:419;;;:::o;8208:::-;8374:4;8412:2;8401:9;8397:18;8389:26;;8461:9;8455:4;8451:20;8447:1;8436:9;8432:17;8425:47;8489:131;8615:4;8489:131;:::i;:::-;8481:139;;8208:419;;;:::o;8633:::-;8799:4;8837:2;8826:9;8822:18;8814:26;;8886:9;8880:4;8876:20;8872:1;8861:9;8857:17;8850:47;8914:131;9040:4;8914:131;:::i;:::-;8906:139;;8633:419;;;:::o;9058:222::-;9151:4;9189:2;9178:9;9174:18;9166:26;;9202:71;9270:1;9259:9;9255:17;9246:6;9202:71;:::i;:::-;9058:222;;;;:::o;9286:214::-;9375:4;9413:2;9402:9;9398:18;9390:26;;9426:67;9490:1;9479:9;9475:17;9466:6;9426:67;:::i;:::-;9286:214;;;;:::o;9587:99::-;9639:6;9673:5;9667:12;9657:22;;9587:99;;;:::o;9692:169::-;9776:11;9810:6;9805:3;9798:19;9850:4;9845:3;9841:14;9826:29;;9692:169;;;;:::o;9867:305::-;9907:3;9926:20;9944:1;9926:20;:::i;:::-;9921:25;;9960:20;9978:1;9960:20;:::i;:::-;9955:25;;10114:1;10046:66;10042:74;10039:1;10036:81;10033:107;;;10120:18;;:::i;:::-;10033:107;10164:1;10161;10157:9;10150:16;;9867:305;;;;:::o;10178:185::-;10218:1;10235:20;10253:1;10235:20;:::i;:::-;10230:25;;10269:20;10287:1;10269:20;:::i;:::-;10264:25;;10308:1;10298:35;;10313:18;;:::i;:::-;10298:35;10355:1;10352;10348:9;10343:14;;10178:185;;;;:::o;10369:348::-;10409:7;10432:20;10450:1;10432:20;:::i;:::-;10427:25;;10466:20;10484:1;10466:20;:::i;:::-;10461:25;;10654:1;10586:66;10582:74;10579:1;10576:81;10571:1;10564:9;10557:17;10553:105;10550:131;;;10661:18;;:::i;:::-;10550:131;10709:1;10706;10702:9;10691:20;;10369:348;;;;:::o;10723:191::-;10763:4;10783:20;10801:1;10783:20;:::i;:::-;10778:25;;10817:20;10835:1;10817:20;:::i;:::-;10812:25;;10856:1;10853;10850:8;10847:34;;;10861:18;;:::i;:::-;10847:34;10906:1;10903;10899:9;10891:17;;10723:191;;;;:::o;10920:96::-;10957:7;10986:24;11004:5;10986:24;:::i;:::-;10975:35;;10920:96;;;:::o;11022:90::-;11056:7;11099:5;11092:13;11085:21;11074:32;;11022:90;;;:::o;11118:126::-;11155:7;11195:42;11188:5;11184:54;11173:65;;11118:126;;;:::o;11250:77::-;11287:7;11316:5;11305:16;;11250:77;;;:::o;11333:86::-;11368:7;11408:4;11401:5;11397:16;11386:27;;11333:86;;;:::o;11425:307::-;11493:1;11503:113;11517:6;11514:1;11511:13;11503:113;;;11602:1;11597:3;11593:11;11587:18;11583:1;11578:3;11574:11;11567:39;11539:2;11536:1;11532:10;11527:15;;11503:113;;;11634:6;11631:1;11628:13;11625:101;;;11714:1;11705:6;11700:3;11696:16;11689:27;11625:101;11474:258;11425:307;;;:::o;11738:320::-;11782:6;11819:1;11813:4;11809:12;11799:22;;11866:1;11860:4;11856:12;11887:18;11877:81;;11943:4;11935:6;11931:17;11921:27;;11877:81;12005:2;11997:6;11994:14;11974:18;11971:38;11968:84;;;12024:18;;:::i;:::-;11968:84;11789:269;11738:320;;;:::o;12064:180::-;12112:77;12109:1;12102:88;12209:4;12206:1;12199:15;12233:4;12230:1;12223:15;12250:180;12298:77;12295:1;12288:88;12395:4;12392:1;12385:15;12419:4;12416:1;12409:15;12436:180;12484:77;12481:1;12474:88;12581:4;12578:1;12571:15;12605:4;12602:1;12595:15;12745:117;12854:1;12851;12844:12;12868:102;12909:6;12960:2;12956:7;12951:2;12944:5;12940:14;12936:28;12926:38;;12868:102;;;:::o;12976:222::-;13116:34;13112:1;13104:6;13100:14;13093:58;13185:5;13180:2;13172:6;13168:15;13161:30;12976:222;:::o;13204:221::-;13344:34;13340:1;13332:6;13328:14;13321:58;13413:4;13408:2;13400:6;13396:15;13389:29;13204:221;:::o;13431:179::-;13571:31;13567:1;13559:6;13555:14;13548:55;13431:179;:::o;13616:225::-;13756:34;13752:1;13744:6;13740:14;13733:58;13825:8;13820:2;13812:6;13808:15;13801:33;13616:225;:::o;13847:224::-;13987:34;13983:1;13975:6;13971:14;13964:58;14056:7;14051:2;14043:6;14039:15;14032:32;13847:224;:::o;14077:223::-;14217:34;14213:1;14205:6;14201:14;14194:58;14286:6;14281:2;14273:6;14269:15;14262:31;14077:223;:::o;14306:224::-;14446:34;14442:1;14434:6;14430:14;14423:58;14515:7;14510:2;14502:6;14498:15;14491:32;14306:224;:::o;14536:122::-;14609:24;14627:5;14609:24;:::i;:::-;14602:5;14599:35;14589:63;;14648:1;14645;14638:12;14589:63;14536:122;:::o;14664:::-;14737:24;14755:5;14737:24;:::i;:::-;14730:5;14727:35;14717:63;;14776:1;14773;14766:12;14717:63;14664:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1057400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2863",
								"decimals()": "432",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2482",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2174,
									"end": 2179,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2166,
									"end": 2171,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2166,
									"end": 2179,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2166,
									"end": 2179,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2166,
									"end": 2179,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2166,
									"end": 2179,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2166,
									"end": 2179,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2166,
									"end": 2179,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2166,
									"end": 2179,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2166,
									"end": 2179,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2166,
									"end": 2179,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2166,
									"end": 2179,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2166,
									"end": 2179,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2166,
									"end": 2179,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2166,
									"end": 2179,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2166,
									"end": 2179,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2166,
									"end": 2179,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2166,
									"end": 2179,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2199,
									"end": 2206,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2189,
									"end": 2196,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2189,
									"end": 2206,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2189,
									"end": 2206,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2189,
									"end": 2206,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2189,
									"end": 2206,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2189,
									"end": 2206,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2189,
									"end": 2206,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2189,
									"end": 2206,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2189,
									"end": 2206,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2189,
									"end": 2206,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2189,
									"end": 2206,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2189,
									"end": 2206,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2189,
									"end": 2206,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2189,
									"end": 2206,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 2189,
									"end": 2206,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2189,
									"end": 2206,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2189,
									"end": 2206,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2232,
									"end": 2245,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2216,
									"end": 2229,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2216,
									"end": 2229,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2216,
									"end": 2245,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2216,
									"end": 2245,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2216,
									"end": 2245,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2216,
									"end": 2245,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2216,
									"end": 2245,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2216,
									"end": 2245,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2216,
									"end": 2245,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2216,
									"end": 2245,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2216,
									"end": 2245,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2216,
									"end": 2245,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2216,
									"end": 2245,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2216,
									"end": 2245,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2216,
									"end": 2245,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2216,
									"end": 2245,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2216,
									"end": 2245,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2216,
									"end": 2245,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2216,
									"end": 2245,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2216,
									"end": 2245,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2274,
									"end": 2290,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2255,
									"end": 2271,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2255,
									"end": 2271,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2255,
									"end": 2290,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2255,
									"end": 2290,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2255,
									"end": 2290,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2255,
									"end": 2290,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2255,
									"end": 2290,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2255,
									"end": 2290,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2255,
									"end": 2290,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2255,
									"end": 2290,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2255,
									"end": 2290,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2255,
									"end": 2290,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2255,
									"end": 2290,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2255,
									"end": 2290,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2255,
									"end": 2290,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2255,
									"end": 2290,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2255,
									"end": 2290,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2255,
									"end": 2290,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2255,
									"end": 2290,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2255,
									"end": 2290,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2051,
									"end": 2297,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 96,
									"end": 101,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 179,
									"end": 185,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 137,
									"end": 186,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 137,
									"end": 186,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 121,
									"end": 187,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 121,
									"end": 187,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 112,
									"end": 187,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 112,
									"end": 187,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 210,
									"end": 216,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 203,
									"end": 208,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 196,
									"end": 217,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 248,
									"end": 252,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 241,
									"end": 246,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 237,
									"end": 253,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 286,
									"end": 289,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 277,
									"end": 283,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 272,
									"end": 275,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 268,
									"end": 284,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 265,
									"end": 290,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 262,
									"end": 374,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 262,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 293,
									"end": 372,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 262,
									"end": 374,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 262,
									"end": 374,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 415,
									"end": 421,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 410,
									"end": 413,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 405,
									"end": 408,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 383,
									"end": 422,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 383,
									"end": 422,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 102,
									"end": 428,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 428,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 434,
									"end": 577,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 434,
									"end": 577,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 491,
									"end": 496,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 522,
									"end": 528,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 516,
									"end": 529,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 507,
									"end": 529,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 507,
									"end": 529,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 538,
									"end": 571,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 565,
									"end": 570,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 538,
									"end": 571,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 538,
									"end": 571,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 538,
									"end": 571,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 538,
									"end": 571,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 434,
									"end": 577,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 434,
									"end": 577,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 434,
									"end": 577,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 434,
									"end": 577,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 434,
									"end": 577,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 597,
									"end": 952,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 597,
									"end": 952,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 664,
									"end": 669,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 713,
									"end": 716,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 706,
									"end": 710,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 698,
									"end": 704,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 694,
									"end": 711,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 690,
									"end": 717,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 680,
									"end": 802,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 680,
									"end": 802,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 721,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 721,
									"end": 800,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 721,
									"end": 800,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 721,
									"end": 800,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 721,
									"end": 800,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 680,
									"end": 802,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 680,
									"end": 802,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 831,
									"end": 837,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 825,
									"end": 838,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 856,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 942,
									"end": 945,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 934,
									"end": 940,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 927,
									"end": 931,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 919,
									"end": 925,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 915,
									"end": 932,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 856,
									"end": 946,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 856,
									"end": 946,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 856,
									"end": 946,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 856,
									"end": 946,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 847,
									"end": 946,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 847,
									"end": 946,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 670,
									"end": 952,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 597,
									"end": 952,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 597,
									"end": 952,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 597,
									"end": 952,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 597,
									"end": 952,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 597,
									"end": 952,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 958,
									"end": 2124,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 958,
									"end": 2124,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1075,
									"end": 1081,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1083,
									"end": 1089,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1091,
									"end": 1097,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1099,
									"end": 1105,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1148,
									"end": 1151,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1136,
									"end": 1145,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1127,
									"end": 1134,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1123,
									"end": 1146,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1119,
									"end": 1152,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 1116,
									"end": 1236,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1116,
									"end": 1236,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1116,
									"end": 1236,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1155,
									"end": 1234,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1155,
									"end": 1234,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 1155,
									"end": 1234,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1155,
									"end": 1234,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 1155,
									"end": 1234,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1116,
									"end": 1236,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 1116,
									"end": 1236,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1296,
									"end": 1297,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1285,
									"end": 1294,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1281,
									"end": 1298,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1275,
									"end": 1299,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1344,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1315,
									"end": 1345,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1312,
									"end": 1429,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1312,
									"end": 1429,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1312,
									"end": 1429,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1348,
									"end": 1427,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 1348,
									"end": 1427,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1348,
									"end": 1427,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1348,
									"end": 1427,
									"name": "tag",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 1348,
									"end": 1427,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1312,
									"end": 1429,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 1312,
									"end": 1429,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1453,
									"end": 1527,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 1519,
									"end": 1526,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1510,
									"end": 1516,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1499,
									"end": 1508,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 1495,
									"end": 1517,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1453,
									"end": 1527,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1453,
									"end": 1527,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1453,
									"end": 1527,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 1453,
									"end": 1527,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1443,
									"end": 1527,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 1443,
									"end": 1527,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1246,
									"end": 1537,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1597,
									"end": 1599,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1595,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1600,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1576,
									"end": 1601,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1628,
									"end": 1646,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1620,
									"end": 1626,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1617,
									"end": 1647,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1614,
									"end": 1731,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1614,
									"end": 1731,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1614,
									"end": 1731,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1650,
									"end": 1729,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 1650,
									"end": 1729,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 1650,
									"end": 1729,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1650,
									"end": 1729,
									"name": "tag",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 1650,
									"end": 1729,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1614,
									"end": 1731,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 1614,
									"end": 1731,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1755,
									"end": 1829,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1812,
									"end": 1818,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1801,
									"end": 1810,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 1797,
									"end": 1819,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1755,
									"end": 1829,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 1755,
									"end": 1829,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1755,
									"end": 1829,
									"name": "tag",
									"source": 4,
									"value": "53"
								},
								{
									"begin": 1755,
									"end": 1829,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1745,
									"end": 1829,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1745,
									"end": 1829,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1547,
									"end": 1839,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1878,
									"end": 1880,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1904,
									"end": 1968,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 1960,
									"end": 1967,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 1951,
									"end": 1957,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1940,
									"end": 1949,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 1936,
									"end": 1958,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1904,
									"end": 1968,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1904,
									"end": 1968,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1904,
									"end": 1968,
									"name": "tag",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 1904,
									"end": 1968,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1894,
									"end": 1968,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1894,
									"end": 1968,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1849,
									"end": 1978,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2017,
									"end": 2019,
									"name": "PUSH",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 2043,
									"end": 2107,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 2099,
									"end": 2106,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 2090,
									"end": 2096,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2079,
									"end": 2088,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 2075,
									"end": 2097,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2043,
									"end": 2107,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 2043,
									"end": 2107,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2043,
									"end": 2107,
									"name": "tag",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 2043,
									"end": 2107,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2033,
									"end": 2107,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2033,
									"end": 2107,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1988,
									"end": 2117,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 958,
									"end": 2124,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 958,
									"end": 2124,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": 958,
									"end": 2124,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 958,
									"end": 2124,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 958,
									"end": 2124,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 958,
									"end": 2124,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 958,
									"end": 2124,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 958,
									"end": 2124,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2130,
									"end": 2259,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 2130,
									"end": 2259,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2164,
									"end": 2170,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2191,
									"end": 2211,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 2191,
									"end": 2211,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 2191,
									"end": 2211,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2191,
									"end": 2211,
									"name": "tag",
									"source": 4,
									"value": "57"
								},
								{
									"begin": 2191,
									"end": 2211,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2181,
									"end": 2211,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2181,
									"end": 2211,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2220,
									"end": 2253,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 2248,
									"end": 2252,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2240,
									"end": 2246,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2220,
									"end": 2253,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 2220,
									"end": 2253,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2220,
									"end": 2253,
									"name": "tag",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 2220,
									"end": 2253,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2130,
									"end": 2259,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2130,
									"end": 2259,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2130,
									"end": 2259,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2130,
									"end": 2259,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2265,
									"end": 2340,
									"name": "tag",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 2265,
									"end": 2340,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2298,
									"end": 2304,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2331,
									"end": 2333,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2325,
									"end": 2334,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2315,
									"end": 2334,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2315,
									"end": 2334,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2265,
									"end": 2340,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2265,
									"end": 2340,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2346,
									"end": 2654,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 2346,
									"end": 2654,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2408,
									"end": 2412,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2498,
									"end": 2516,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2490,
									"end": 2496,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2487,
									"end": 2517,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2484,
									"end": 2540,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2484,
									"end": 2540,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 2484,
									"end": 2540,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2520,
									"end": 2538,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 2520,
									"end": 2538,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 2520,
									"end": 2538,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2520,
									"end": 2538,
									"name": "tag",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 2520,
									"end": 2538,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2484,
									"end": 2540,
									"name": "tag",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 2484,
									"end": 2540,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2558,
									"end": 2587,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 2580,
									"end": 2586,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2558,
									"end": 2587,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 2558,
									"end": 2587,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2558,
									"end": 2587,
									"name": "tag",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 2558,
									"end": 2587,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2550,
									"end": 2587,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2550,
									"end": 2587,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2642,
									"end": 2646,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2636,
									"end": 2640,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2632,
									"end": 2647,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2624,
									"end": 2647,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2624,
									"end": 2647,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2346,
									"end": 2654,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2346,
									"end": 2654,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2346,
									"end": 2654,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2346,
									"end": 2654,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2660,
									"end": 2756,
									"name": "tag",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 2660,
									"end": 2756,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2697,
									"end": 2704,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 2744,
									"end": 2749,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "tag",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 2726,
									"end": 2750,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2715,
									"end": 2750,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2715,
									"end": 2750,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2660,
									"end": 2756,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2660,
									"end": 2756,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2660,
									"end": 2756,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2660,
									"end": 2756,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2762,
									"end": 2888,
									"name": "tag",
									"source": 4,
									"value": "71"
								},
								{
									"begin": 2762,
									"end": 2888,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2799,
									"end": 2806,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2839,
									"end": 2881,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2832,
									"end": 2837,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2828,
									"end": 2882,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2817,
									"end": 2882,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2817,
									"end": 2882,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2762,
									"end": 2888,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2762,
									"end": 2888,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2762,
									"end": 2888,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2762,
									"end": 2888,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 2894,
									"end": 3201,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 2894,
									"end": 3201,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2962,
									"end": 2963,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2972,
									"end": 3085,
									"name": "tag",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 2972,
									"end": 3085,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2986,
									"end": 2992,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2983,
									"end": 2984,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2980,
									"end": 2993,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2972,
									"end": 3085,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2972,
									"end": 3085,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 2972,
									"end": 3085,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3071,
									"end": 3072,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3066,
									"end": 3069,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3062,
									"end": 3073,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3056,
									"end": 3074,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3052,
									"end": 3053,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3047,
									"end": 3050,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3043,
									"end": 3054,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3036,
									"end": 3075,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3008,
									"end": 3010,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3005,
									"end": 3006,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3001,
									"end": 3011,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2996,
									"end": 3011,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2996,
									"end": 3011,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2972,
									"end": 3085,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 2972,
									"end": 3085,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2972,
									"end": 3085,
									"name": "tag",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 2972,
									"end": 3085,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3103,
									"end": 3109,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3100,
									"end": 3101,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3097,
									"end": 3110,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 3094,
									"end": 3195,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3094,
									"end": 3195,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "77"
								},
								{
									"begin": 3094,
									"end": 3195,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3183,
									"end": 3184,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3174,
									"end": 3180,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3169,
									"end": 3172,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3165,
									"end": 3181,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3158,
									"end": 3185,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3094,
									"end": 3195,
									"name": "tag",
									"source": 4,
									"value": "77"
								},
								{
									"begin": 3094,
									"end": 3195,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2943,
									"end": 3201,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2894,
									"end": 3201,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2894,
									"end": 3201,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2894,
									"end": 3201,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2894,
									"end": 3201,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 3207,
									"end": 3527,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 3207,
									"end": 3527,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3251,
									"end": 3257,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3288,
									"end": 3289,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 3282,
									"end": 3286,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3278,
									"end": 3290,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 3268,
									"end": 3290,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3268,
									"end": 3290,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3335,
									"end": 3336,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3329,
									"end": 3333,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3325,
									"end": 3337,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3356,
									"end": 3374,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3346,
									"end": 3427,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "79"
								},
								{
									"begin": 3346,
									"end": 3427,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3412,
									"end": 3416,
									"name": "PUSH",
									"source": 4,
									"value": "7F"
								},
								{
									"begin": 3404,
									"end": 3410,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3400,
									"end": 3417,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3390,
									"end": 3417,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3390,
									"end": 3417,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3346,
									"end": 3427,
									"name": "tag",
									"source": 4,
									"value": "79"
								},
								{
									"begin": 3346,
									"end": 3427,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3474,
									"end": 3476,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3466,
									"end": 3472,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3463,
									"end": 3477,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3443,
									"end": 3461,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3440,
									"end": 3478,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 3437,
									"end": 3521,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3437,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 3437,
									"end": 3521,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3493,
									"end": 3511,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "81"
								},
								{
									"begin": 3493,
									"end": 3511,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "82"
								},
								{
									"begin": 3493,
									"end": 3511,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 3493,
									"end": 3511,
									"name": "tag",
									"source": 4,
									"value": "81"
								},
								{
									"begin": 3493,
									"end": 3511,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3437,
									"end": 3521,
									"name": "tag",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 3437,
									"end": 3521,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3258,
									"end": 3527,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3207,
									"end": 3527,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3207,
									"end": 3527,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3207,
									"end": 3527,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3207,
									"end": 3527,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 3533,
									"end": 3814,
									"name": "tag",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 3533,
									"end": 3814,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3643,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "84"
								},
								{
									"begin": 3638,
									"end": 3642,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3616,
									"end": 3643,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 3616,
									"end": 3643,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 3616,
									"end": 3643,
									"name": "tag",
									"source": 4,
									"value": "84"
								},
								{
									"begin": 3616,
									"end": 3643,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3608,
									"end": 3614,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3604,
									"end": 3644,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3746,
									"end": 3752,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3734,
									"end": 3744,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3731,
									"end": 3753,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3710,
									"end": 3728,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3698,
									"end": 3708,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3695,
									"end": 3729,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 3692,
									"end": 3754,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3689,
									"end": 3777,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3689,
									"end": 3777,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "85"
								},
								{
									"begin": 3689,
									"end": 3777,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3757,
									"end": 3775,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "86"
								},
								{
									"begin": 3757,
									"end": 3775,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 3757,
									"end": 3775,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 3757,
									"end": 3775,
									"name": "tag",
									"source": 4,
									"value": "86"
								},
								{
									"begin": 3757,
									"end": 3775,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3689,
									"end": 3777,
									"name": "tag",
									"source": 4,
									"value": "85"
								},
								{
									"begin": 3689,
									"end": 3777,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3797,
									"end": 3807,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3793,
									"end": 3795,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 3786,
									"end": 3808,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3576,
									"end": 3814,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3533,
									"end": 3814,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3533,
									"end": 3814,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3533,
									"end": 3814,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 3820,
									"end": 4000,
									"name": "tag",
									"source": 4,
									"value": "82"
								},
								{
									"begin": 3820,
									"end": 4000,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3868,
									"end": 3945,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3865,
									"end": 3866,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3858,
									"end": 3946,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3965,
									"end": 3969,
									"name": "PUSH",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 3962,
									"end": 3963,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3955,
									"end": 3970,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3989,
									"end": 3993,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3986,
									"end": 3987,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3979,
									"end": 3994,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 4006,
									"end": 4186,
									"name": "tag",
									"source": 4,
									"value": "65"
								},
								{
									"begin": 4006,
									"end": 4186,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4054,
									"end": 4131,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4051,
									"end": 4052,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4044,
									"end": 4132,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4151,
									"end": 4155,
									"name": "PUSH",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 4148,
									"end": 4149,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 4141,
									"end": 4156,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4175,
									"end": 4179,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 4172,
									"end": 4173,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4165,
									"end": 4180,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 4192,
									"end": 4309,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 4192,
									"end": 4309,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4301,
									"end": 4302,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4298,
									"end": 4299,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4291,
									"end": 4303,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 4315,
									"end": 4432,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 4315,
									"end": 4432,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4424,
									"end": 4425,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4421,
									"end": 4422,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4414,
									"end": 4426,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 4438,
									"end": 4555,
									"name": "tag",
									"source": 4,
									"value": "49"
								},
								{
									"begin": 4438,
									"end": 4555,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4547,
									"end": 4548,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4544,
									"end": 4545,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4537,
									"end": 4549,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 4561,
									"end": 4678,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 4561,
									"end": 4678,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4670,
									"end": 4671,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4667,
									"end": 4668,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4660,
									"end": 4672,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 4684,
									"end": 4786,
									"name": "tag",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 4684,
									"end": 4786,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4725,
									"end": 4731,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4776,
									"end": 4778,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 4772,
									"end": 4779,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 4767,
									"end": 4769,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 4760,
									"end": 4765,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4756,
									"end": 4770,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4752,
									"end": 4780,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4742,
									"end": 4780,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4742,
									"end": 4780,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4684,
									"end": 4786,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4684,
									"end": 4786,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4684,
									"end": 4786,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4684,
									"end": 4786,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 4792,
									"end": 4914,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 4792,
									"end": 4914,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4865,
									"end": 4889,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "95"
								},
								{
									"begin": 4883,
									"end": 4888,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4865,
									"end": 4889,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 4865,
									"end": 4889,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 4865,
									"end": 4889,
									"name": "tag",
									"source": 4,
									"value": "95"
								},
								{
									"begin": 4865,
									"end": 4889,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4858,
									"end": 4863,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4855,
									"end": 4890,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 4845,
									"end": 4908,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "96"
								},
								{
									"begin": 4845,
									"end": 4908,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4904,
									"end": 4905,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4901,
									"end": 4902,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4894,
									"end": 4906,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 4845,
									"end": 4908,
									"name": "tag",
									"source": 4,
									"value": "96"
								},
								{
									"begin": 4845,
									"end": 4908,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4792,
									"end": 4914,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4792,
									"end": 4914,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1403,
									"end": 13348,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e1ca5bb88541c4ccbf473ff727f0faf385003873219fa7f94eea613b5277942f64736f6c63430008070033",
									".code": [
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 13348,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2429,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2362,
											"end": 2460,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4722,
											"end": 4726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4738,
											"end": 4751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4754,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4754,
											"end": 4766,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4754,
											"end": 4766,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4754,
											"end": 4766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4738,
											"end": 4766,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4776,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4785,
											"end": 4790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4792,
											"end": 4799,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4801,
											"end": 4807,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4776,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4776,
											"end": 4808,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4776,
											"end": 4808,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4776,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4825,
											"end": 4829,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4818,
											"end": 4829,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4818,
											"end": 4829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4818,
											"end": 4829,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4639,
											"end": 4836,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3511,
											"end": 3518,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3537,
											"end": 3549,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3537,
											"end": 3549,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3530,
											"end": 3549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3530,
											"end": 3549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3450,
											"end": 3556,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5525,
											"end": 5529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5541,
											"end": 5556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5559,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5559,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5559,
											"end": 5571,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5559,
											"end": 5571,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5559,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5541,
											"end": 5571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5541,
											"end": 5571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5597,
											"end": 5601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5603,
											"end": 5610,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5612,
											"end": 5618,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 5581,
											"end": 5619,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5581,
											"end": 5619,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 5581,
											"end": 5619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5629,
											"end": 5656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5639,
											"end": 5643,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5645,
											"end": 5647,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5629,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5629,
											"end": 5656,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5629,
											"end": 5656,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5629,
											"end": 5656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5673,
											"end": 5677,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5666,
											"end": 5677,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5666,
											"end": 5677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5666,
											"end": 5677,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5684,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3357,
											"end": 3362,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3383,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3374,
											"end": 3383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3374,
											"end": 3383,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3390,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6167,
											"end": 6171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6183,
											"end": 6196,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6199,
											"end": 6211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6199,
											"end": 6209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 6199,
											"end": 6211,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6199,
											"end": 6211,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 6199,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6183,
											"end": 6211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6221,
											"end": 6285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6237,
											"end": 6244,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6274,
											"end": 6284,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6246,
											"end": 6271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6256,
											"end": 6261,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6263,
											"end": 6270,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 6246,
											"end": 6255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6246,
											"end": 6271,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6246,
											"end": 6271,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 6246,
											"end": 6271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6246,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6246,
											"end": 6284,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6246,
											"end": 6284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6246,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 6246,
											"end": 6284,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6246,
											"end": 6284,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6246,
											"end": 6284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6221,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6221,
											"end": 6285,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6221,
											"end": 6285,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 6221,
											"end": 6285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6302,
											"end": 6306,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6295,
											"end": 6306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6295,
											"end": 6306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6295,
											"end": 6306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6313,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3688,
											"end": 3695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3714,
											"end": 3723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3724,
											"end": 3731,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3732,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3732,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3732,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3614,
											"end": 3739,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2642,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2661,
											"end": 2668,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2668,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2675,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6893,
											"end": 6897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6909,
											"end": 6922,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6925,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6925,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 6925,
											"end": 6937,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6925,
											"end": 6937,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 6925,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6909,
											"end": 6937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6909,
											"end": 6937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 6999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6984,
											"end": 6989,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6991,
											"end": 6998,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6974,
											"end": 6983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6974,
											"end": 6999,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6974,
											"end": 6999,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 6974,
											"end": 6999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6947,
											"end": 6999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7037,
											"end": 7052,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7052,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 7017,
											"end": 7052,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7009,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 7009,
											"end": 7094,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7009,
											"end": 7094,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7009,
											"end": 7094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7009,
											"end": 7094,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7009,
											"end": 7094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7009,
											"end": 7094,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7009,
											"end": 7094,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7009,
											"end": 7094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7009,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7009,
											"end": 7094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7009,
											"end": 7094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 7009,
											"end": 7094,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7009,
											"end": 7094,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7009,
											"end": 7094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7009,
											"end": 7094,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7009,
											"end": 7094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7009,
											"end": 7094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7009,
											"end": 7094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7009,
											"end": 7094,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7009,
											"end": 7094,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7009,
											"end": 7094,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7009,
											"end": 7094,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 7009,
											"end": 7094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7128,
											"end": 7188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 7137,
											"end": 7142,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7144,
											"end": 7151,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7172,
											"end": 7187,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 7153,
											"end": 7169,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7153,
											"end": 7187,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7128,
											"end": 7136,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 7128,
											"end": 7188,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7128,
											"end": 7188,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 7128,
											"end": 7188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7216,
											"end": 7220,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7209,
											"end": 7220,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7209,
											"end": 7220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7209,
											"end": 7220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7209,
											"end": 7220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6800,
											"end": 7227,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4014,
											"end": 4018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4046,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4046,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4046,
											"end": 4058,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4046,
											"end": 4058,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4046,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4030,
											"end": 4058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4030,
											"end": 4058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4078,
											"end": 4083,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4085,
											"end": 4087,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4095,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4068,
											"end": 4077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4068,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4113,
											"end": 4117,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4106,
											"end": 4117,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4106,
											"end": 4117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4106,
											"end": 4117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3935,
											"end": 4124,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4271,
											"end": 4278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4297,
											"end": 4308,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4309,
											"end": 4314,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4297,
											"end": 4315,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4316,
											"end": 4323,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4324,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4297,
											"end": 4324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4324,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4297,
											"end": 4324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4324,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4324,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4297,
											"end": 4324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4324,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4324,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4297,
											"end": 4324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4297,
											"end": 4324,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4297,
											"end": 4324,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4290,
											"end": 4324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4182,
											"end": 4331,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10841,
											"end": 11211,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 10841,
											"end": 11211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10989,
											"end": 10990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10972,
											"end": 10991,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10972,
											"end": 10991,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10972,
											"end": 10977,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10972,
											"end": 10991,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10972,
											"end": 10991,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10972,
											"end": 10991,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10972,
											"end": 10991,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10964,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10964,
											"end": 11032,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10964,
											"end": 11032,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10964,
											"end": 11032,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10964,
											"end": 11032,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10964,
											"end": 11032,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10964,
											"end": 11032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10964,
											"end": 11032,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10964,
											"end": 11032,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10964,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10964,
											"end": 11032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10964,
											"end": 11032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10964,
											"end": 11032,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10964,
											"end": 11032,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10964,
											"end": 11032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10964,
											"end": 11032,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10964,
											"end": 11032,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10964,
											"end": 11032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10964,
											"end": 11032,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10964,
											"end": 11032,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10964,
											"end": 11032,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10964,
											"end": 11032,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10964,
											"end": 11032,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10964,
											"end": 11032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11069,
											"end": 11070,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11050,
											"end": 11071,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11050,
											"end": 11071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11050,
											"end": 11057,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11050,
											"end": 11071,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11050,
											"end": 11071,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11050,
											"end": 11071,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11050,
											"end": 11071,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 11042,
											"end": 11110,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11042,
											"end": 11110,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11110,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11042,
											"end": 11110,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11110,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11110,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11042,
											"end": 11110,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 11042,
											"end": 11110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11110,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 11042,
											"end": 11110,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11042,
											"end": 11110,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 11042,
											"end": 11110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11110,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11042,
											"end": 11110,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11110,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11110,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11110,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11110,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11042,
											"end": 11110,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 11042,
											"end": 11110,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11151,
											"end": 11157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11132,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11121,
											"end": 11139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11133,
											"end": 11138,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11139,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11121,
											"end": 11139,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11139,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11121,
											"end": 11139,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11121,
											"end": 11139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11121,
											"end": 11139,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11121,
											"end": 11139,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11140,
											"end": 11147,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11121,
											"end": 11148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11121,
											"end": 11148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11121,
											"end": 11148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11121,
											"end": 11148,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11121,
											"end": 11148,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11157,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11121,
											"end": 11157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11188,
											"end": 11195,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11181,
											"end": 11186,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11197,
											"end": 11203,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11172,
											"end": 11204,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10841,
											"end": 11211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10841,
											"end": 11211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10841,
											"end": 11211,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 10841,
											"end": 11211,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11492,
											"end": 11933,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 11492,
											"end": 11933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11622,
											"end": 11646,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11649,
											"end": 11674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11659,
											"end": 11664,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11666,
											"end": 11673,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11649,
											"end": 11658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 11649,
											"end": 11674,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11649,
											"end": 11674,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11649,
											"end": 11674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11622,
											"end": 11674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11622,
											"end": 11674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11708,
											"end": 11725,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11688,
											"end": 11704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11688,
											"end": 11725,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 11684,
											"end": 11927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 11684,
											"end": 11927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11769,
											"end": 11775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11749,
											"end": 11765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11749,
											"end": 11775,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 11749,
											"end": 11775,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11741,
											"end": 11809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11741,
											"end": 11809,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11741,
											"end": 11809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11741,
											"end": 11809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11741,
											"end": 11809,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11741,
											"end": 11809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11741,
											"end": 11809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11741,
											"end": 11809,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11741,
											"end": 11809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11741,
											"end": 11809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11741,
											"end": 11809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11741,
											"end": 11809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 11741,
											"end": 11809,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11741,
											"end": 11809,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11741,
											"end": 11809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11741,
											"end": 11809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11741,
											"end": 11809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11741,
											"end": 11809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11741,
											"end": 11809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11741,
											"end": 11809,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11741,
											"end": 11809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11741,
											"end": 11809,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11741,
											"end": 11809,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 11741,
											"end": 11809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11851,
											"end": 11902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11860,
											"end": 11865,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11867,
											"end": 11874,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11895,
											"end": 11901,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11876,
											"end": 11892,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11876,
											"end": 11901,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11851,
											"end": 11859,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11851,
											"end": 11902,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11851,
											"end": 11902,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11851,
											"end": 11902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11684,
											"end": 11927,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 11684,
											"end": 11927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11612,
											"end": 11933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11492,
											"end": 11933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11492,
											"end": 11933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11492,
											"end": 11933,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11492,
											"end": 11933,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7681,
											"end": 8857,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7681,
											"end": 8857,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7823,
											"end": 7824,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7807,
											"end": 7825,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7807,
											"end": 7825,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7807,
											"end": 7811,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7807,
											"end": 7825,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7807,
											"end": 7825,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7807,
											"end": 7825,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7807,
											"end": 7825,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7799,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7899,
											"end": 7900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7885,
											"end": 7901,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7885,
											"end": 7901,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7885,
											"end": 7887,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7885,
											"end": 7901,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7885,
											"end": 7901,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7885,
											"end": 7901,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7885,
											"end": 7901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7877,
											"end": 7941,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7877,
											"end": 7941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7941,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7877,
											"end": 7941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7877,
											"end": 7941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7877,
											"end": 7941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 7877,
											"end": 7941,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7877,
											"end": 7941,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 7877,
											"end": 7941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7877,
											"end": 7941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7877,
											"end": 7941,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 7877,
											"end": 7941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7952,
											"end": 7990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7979,
											"end": 7981,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7983,
											"end": 7989,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7952,
											"end": 7972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 7952,
											"end": 7990,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7952,
											"end": 7990,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 7952,
											"end": 7990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8001,
											"end": 8020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8023,
											"end": 8032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8023,
											"end": 8038,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8033,
											"end": 8037,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8023,
											"end": 8038,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8023,
											"end": 8038,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8023,
											"end": 8038,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8023,
											"end": 8038,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8023,
											"end": 8038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8023,
											"end": 8038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8023,
											"end": 8038,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8023,
											"end": 8038,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8023,
											"end": 8038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8023,
											"end": 8038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8023,
											"end": 8038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8023,
											"end": 8038,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8023,
											"end": 8038,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8023,
											"end": 8038,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8023,
											"end": 8038,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8023,
											"end": 8038,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8001,
											"end": 8038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8001,
											"end": 8038,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8071,
											"end": 8077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8056,
											"end": 8067,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8056,
											"end": 8077,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8056,
											"end": 8077,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8048,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 8048,
											"end": 8120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8048,
											"end": 8120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8048,
											"end": 8120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8048,
											"end": 8120,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8048,
											"end": 8120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8048,
											"end": 8120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8048,
											"end": 8120,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8048,
											"end": 8120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8048,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 8048,
											"end": 8120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8048,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 8048,
											"end": 8120,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8048,
											"end": 8120,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 8048,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8048,
											"end": 8120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8048,
											"end": 8120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8048,
											"end": 8120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8048,
											"end": 8120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8048,
											"end": 8120,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8048,
											"end": 8120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8048,
											"end": 8120,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8048,
											"end": 8120,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 8048,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8186,
											"end": 8192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8172,
											"end": 8183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8172,
											"end": 8192,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8154,
											"end": 8163,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8164,
											"end": 8168,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8154,
											"end": 8169,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8154,
											"end": 8192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8154,
											"end": 8192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8154,
											"end": 8192,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8154,
											"end": 8192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8552,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8539,
											"end": 8552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8539,
											"end": 8552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8552,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8552,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8539,
											"end": 8552,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8552,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8539,
											"end": 8552,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8539,
											"end": 8552,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8533,
											"end": 8552,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8533,
											"end": 8552,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8533,
											"end": 8535,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8533,
											"end": 8552,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8533,
											"end": 8552,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8533,
											"end": 8552,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8530,
											"end": 8761,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8530,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8530,
											"end": 8761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8584,
											"end": 8590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8567,
											"end": 8576,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8567,
											"end": 8580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8577,
											"end": 8579,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8567,
											"end": 8580,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8567,
											"end": 8580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8567,
											"end": 8580,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8567,
											"end": 8580,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8567,
											"end": 8580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8567,
											"end": 8580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8567,
											"end": 8580,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8567,
											"end": 8580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8567,
											"end": 8580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8567,
											"end": 8580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8567,
											"end": 8580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8567,
											"end": 8580,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8567,
											"end": 8580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8567,
											"end": 8580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8567,
											"end": 8580,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8567,
											"end": 8580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8567,
											"end": 8590,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8567,
											"end": 8590,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8567,
											"end": 8590,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8567,
											"end": 8590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8567,
											"end": 8590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8567,
											"end": 8590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8567,
											"end": 8590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8567,
											"end": 8590,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8567,
											"end": 8590,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 8567,
											"end": 8590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8567,
											"end": 8590,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8567,
											"end": 8590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8567,
											"end": 8590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8567,
											"end": 8590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8567,
											"end": 8590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8567,
											"end": 8590,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8567,
											"end": 8590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8530,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 8530,
											"end": 8761,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8530,
											"end": 8761,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 8530,
											"end": 8761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8628,
											"end": 8639,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 8652,
											"end": 8653,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8643,
											"end": 8649,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8643,
											"end": 8653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 8643,
											"end": 8653,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8643,
											"end": 8653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8643,
											"end": 8653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 8643,
											"end": 8653,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8643,
											"end": 8653,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 8643,
											"end": 8653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8642,
											"end": 8659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 8642,
											"end": 8659,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8642,
											"end": 8659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8642,
											"end": 8659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 8642,
											"end": 8659,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8642,
											"end": 8659,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 8642,
											"end": 8659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8628,
											"end": 8659,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8628,
											"end": 8659,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8699,
											"end": 8702,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8690,
											"end": 8696,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8690,
											"end": 8702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 8690,
											"end": 8702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8690,
											"end": 8702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8690,
											"end": 8702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 8690,
											"end": 8702,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8690,
											"end": 8702,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 8690,
											"end": 8702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8673,
											"end": 8682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8673,
											"end": 8686,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8683,
											"end": 8685,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8673,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8673,
											"end": 8686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8673,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8673,
											"end": 8686,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8673,
											"end": 8686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8673,
											"end": 8686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8673,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8673,
											"end": 8686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8673,
											"end": 8686,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8673,
											"end": 8686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8673,
											"end": 8686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8673,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8673,
											"end": 8686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8673,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8673,
											"end": 8686,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8673,
											"end": 8686,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8673,
											"end": 8702,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8673,
											"end": 8702,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8673,
											"end": 8702,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8673,
											"end": 8702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 8673,
											"end": 8702,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8673,
											"end": 8702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8673,
											"end": 8702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8673,
											"end": 8702,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8673,
											"end": 8702,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 8673,
											"end": 8702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8673,
											"end": 8702,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8673,
											"end": 8702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8673,
											"end": 8702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8673,
											"end": 8702,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8673,
											"end": 8702,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8673,
											"end": 8702,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8673,
											"end": 8702,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8747,
											"end": 8750,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8716,
											"end": 8725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8716,
											"end": 8743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8726,
											"end": 8742,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 8726,
											"end": 8742,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8726,
											"end": 8742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8726,
											"end": 8742,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8726,
											"end": 8742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8726,
											"end": 8742,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8726,
											"end": 8742,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8726,
											"end": 8742,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8726,
											"end": 8742,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8726,
											"end": 8742,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8726,
											"end": 8742,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8716,
											"end": 8743,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8716,
											"end": 8743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8716,
											"end": 8743,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8716,
											"end": 8743,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8716,
											"end": 8743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8716,
											"end": 8743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8716,
											"end": 8743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8716,
											"end": 8743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8716,
											"end": 8743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8716,
											"end": 8743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8716,
											"end": 8743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8716,
											"end": 8743,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8716,
											"end": 8743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8716,
											"end": 8743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8716,
											"end": 8743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8716,
											"end": 8743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8716,
											"end": 8750,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8716,
											"end": 8750,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8716,
											"end": 8750,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8716,
											"end": 8750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 8716,
											"end": 8750,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8716,
											"end": 8750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8716,
											"end": 8750,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 8716,
											"end": 8750,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8716,
											"end": 8750,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 8716,
											"end": 8750,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8716,
											"end": 8750,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8716,
											"end": 8750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8716,
											"end": 8750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8716,
											"end": 8750,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8716,
											"end": 8750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8716,
											"end": 8750,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8716,
											"end": 8750,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8614,
											"end": 8761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8530,
											"end": 8761,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 8530,
											"end": 8761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8791,
											"end": 8793,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8776,
											"end": 8802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8785,
											"end": 8789,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8776,
											"end": 8802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8802,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8795,
											"end": 8801,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8776,
											"end": 8802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 8776,
											"end": 8802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8776,
											"end": 8802,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8776,
											"end": 8802,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 8776,
											"end": 8802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8802,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8776,
											"end": 8802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8802,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8802,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8776,
											"end": 8802,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 8813,
											"end": 8850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 8833,
											"end": 8837,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8839,
											"end": 8841,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8843,
											"end": 8849,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8813,
											"end": 8832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 8813,
											"end": 8850,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8813,
											"end": 8850,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 8813,
											"end": 8850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7789,
											"end": 8857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 8857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 8857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 8857,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7681,
											"end": 8857,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12517,
											"end": 12638,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 12517,
											"end": 12638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12638,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12517,
											"end": 12638,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 13226,
											"end": 13346,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 13226,
											"end": 13346,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13226,
											"end": 13346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13226,
											"end": 13346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13226,
											"end": 13346,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13226,
											"end": 13346,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 700,
											"end": 706,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 708,
											"end": 714,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 757,
											"end": 759,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 745,
											"end": 754,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 736,
											"end": 743,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 732,
											"end": 755,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 728,
											"end": 760,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 725,
											"end": 844,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 725,
											"end": 844,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 763,
											"end": 842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 725,
											"end": 844,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 725,
											"end": 844,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 883,
											"end": 884,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 953,
											"end": 960,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 944,
											"end": 950,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 933,
											"end": 942,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 929,
											"end": 951,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 908,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 908,
											"end": 961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 898,
											"end": 961,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 898,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 854,
											"end": 971,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1081,
											"end": 1088,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1061,
											"end": 1070,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1057,
											"end": 1079,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1036,
											"end": 1089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1026,
											"end": 1089,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 981,
											"end": 1099,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1106,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1205,
											"end": 1211,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1254,
											"end": 1256,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1242,
											"end": 1251,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1233,
											"end": 1240,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1229,
											"end": 1252,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1225,
											"end": 1257,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1260,
											"end": 1339,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1222,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1381,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1450,
											"end": 1457,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1441,
											"end": 1447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1430,
											"end": 1439,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1426,
											"end": 1448,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1405,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1351,
											"end": 1468,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1507,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 1578,
											"end": 1585,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1575,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1554,
											"end": 1576,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1478,
											"end": 1596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1637,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1706,
											"end": 1713,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1686,
											"end": 1695,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1731,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1862,
											"end": 1864,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1841,
											"end": 1848,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1837,
											"end": 1860,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1833,
											"end": 1865,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1868,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1830,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2049,
											"end": 2055,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2038,
											"end": 2047,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2056,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2013,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2003,
											"end": 2066,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1959,
											"end": 2076,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2115,
											"end": 2117,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2186,
											"end": 2193,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2166,
											"end": 2175,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2141,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2131,
											"end": 2194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2086,
											"end": 2204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 2211,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2313,
											"end": 2318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2298,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2296,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2286,
											"end": 2320,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2217,
											"end": 2326,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2420,
											"end": 2423,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 2481,
											"end": 2486,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 2448,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2567,
											"end": 2573,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2565,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2503,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2496,
											"end": 2574,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2496,
											"end": 2574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2628,
											"end": 2634,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2626,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2616,
											"end": 2620,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2609,
											"end": 2614,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2605,
											"end": 2621,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2583,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 2682,
											"end": 2688,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 2660,
											"end": 2689,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2658,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2651,
											"end": 2690,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2644,
											"end": 2690,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2644,
											"end": 2690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2424,
											"end": 2696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2332,
											"end": 2696,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2844,
											"end": 2847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2929,
											"end": 2931,
											"name": "PUSH",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2924,
											"end": 2927,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2865,
											"end": 2932,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2932,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2858,
											"end": 2932,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 3030,
											"end": 3033,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 2941,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3059,
											"end": 3061,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3054,
											"end": 3057,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3050,
											"end": 3062,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3043,
											"end": 3062,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3043,
											"end": 3062,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 3068,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3216,
											"end": 3219,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 3301,
											"end": 3303,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3296,
											"end": 3299,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 3237,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3230,
											"end": 3304,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3230,
											"end": 3304,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 3402,
											"end": 3405,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 3313,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3431,
											"end": 3433,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3426,
											"end": 3429,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3422,
											"end": 3434,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3434,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3415,
											"end": 3434,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3074,
											"end": 3440,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3588,
											"end": 3591,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 3673,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "1D"
										},
										{
											"begin": 3668,
											"end": 3671,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 3609,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3602,
											"end": 3676,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3602,
											"end": 3676,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 3774,
											"end": 3777,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 3685,
											"end": 3778,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3805,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3798,
											"end": 3801,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3794,
											"end": 3806,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3787,
											"end": 3806,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3787,
											"end": 3806,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3446,
											"end": 3812,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 3963,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 4045,
											"end": 4047,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 4040,
											"end": 4043,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 3981,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4048,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 4146,
											"end": 4149,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 4057,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4175,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4170,
											"end": 4173,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4178,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4159,
											"end": 4178,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 4184,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4332,
											"end": 4335,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 4417,
											"end": 4419,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 4412,
											"end": 4415,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 4353,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4346,
											"end": 4420,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4346,
											"end": 4420,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 4518,
											"end": 4521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 4429,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4547,
											"end": 4549,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4542,
											"end": 4545,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4550,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4550,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4531,
											"end": 4550,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4190,
											"end": 4556,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4704,
											"end": 4707,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 4789,
											"end": 4791,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 4784,
											"end": 4787,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 4725,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4718,
											"end": 4792,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4718,
											"end": 4792,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 4890,
											"end": 4893,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 4801,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4921,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4914,
											"end": 4917,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4910,
											"end": 4922,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4903,
											"end": 4922,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4903,
											"end": 4922,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4928,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5076,
											"end": 5079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 5161,
											"end": 5163,
											"name": "PUSH",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 5156,
											"end": 5159,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 5097,
											"end": 5164,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5090,
											"end": 5164,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5090,
											"end": 5164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 5262,
											"end": 5265,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 5173,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5291,
											"end": 5293,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5286,
											"end": 5289,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5282,
											"end": 5294,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5275,
											"end": 5294,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5275,
											"end": 5294,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4934,
											"end": 5300,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5306,
											"end": 5424,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 5306,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 5411,
											"end": 5416,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 5393,
											"end": 5417,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5393,
											"end": 5417,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 5393,
											"end": 5417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5388,
											"end": 5391,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5381,
											"end": 5418,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5306,
											"end": 5424,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5306,
											"end": 5424,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5306,
											"end": 5424,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 5529,
											"end": 5534,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 5513,
											"end": 5535,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5508,
											"end": 5511,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5501,
											"end": 5536,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5430,
											"end": 5542,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5635,
											"end": 5639,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5673,
											"end": 5675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5662,
											"end": 5671,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5658,
											"end": 5676,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5650,
											"end": 5676,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5650,
											"end": 5676,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5686,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 5748,
											"end": 5749,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5737,
											"end": 5746,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5733,
											"end": 5750,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5724,
											"end": 5730,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5686,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 5686,
											"end": 5751,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5686,
											"end": 5751,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 5686,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5548,
											"end": 5758,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5877,
											"end": 5881,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5915,
											"end": 5917,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5904,
											"end": 5913,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5900,
											"end": 5918,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5892,
											"end": 5918,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5892,
											"end": 5918,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5964,
											"end": 5973,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5958,
											"end": 5962,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5954,
											"end": 5974,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5950,
											"end": 5951,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5939,
											"end": 5948,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5935,
											"end": 5952,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5928,
											"end": 5975,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5992,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 6065,
											"end": 6069,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6056,
											"end": 6062,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5992,
											"end": 6070,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 5992,
											"end": 6070,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5992,
											"end": 6070,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 5992,
											"end": 6070,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5984,
											"end": 6070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5984,
											"end": 6070,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5764,
											"end": 6077,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6249,
											"end": 6253,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6287,
											"end": 6289,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6276,
											"end": 6285,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6272,
											"end": 6290,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6264,
											"end": 6290,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6264,
											"end": 6290,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6345,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6330,
											"end": 6334,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6326,
											"end": 6346,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6322,
											"end": 6323,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6311,
											"end": 6320,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6324,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6300,
											"end": 6347,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6364,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 6490,
											"end": 6494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6364,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 6364,
											"end": 6495,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6364,
											"end": 6495,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 6364,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6083,
											"end": 6502,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 6714,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6701,
											"end": 6710,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6697,
											"end": 6715,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6689,
											"end": 6715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6689,
											"end": 6715,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6755,
											"end": 6759,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6751,
											"end": 6771,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6747,
											"end": 6748,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6745,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6732,
											"end": 6749,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6725,
											"end": 6772,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6789,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 6915,
											"end": 6919,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6789,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 6789,
											"end": 6920,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6789,
											"end": 6920,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 6789,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6781,
											"end": 6920,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6781,
											"end": 6920,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6508,
											"end": 6927,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7099,
											"end": 7103,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7137,
											"end": 7139,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7126,
											"end": 7135,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7122,
											"end": 7140,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7114,
											"end": 7140,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7114,
											"end": 7140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7186,
											"end": 7195,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7180,
											"end": 7184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7176,
											"end": 7196,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7172,
											"end": 7173,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7161,
											"end": 7170,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7157,
											"end": 7174,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7150,
											"end": 7197,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 7340,
											"end": 7344,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 7214,
											"end": 7345,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7206,
											"end": 7345,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7206,
											"end": 7345,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6933,
											"end": 7352,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7524,
											"end": 7528,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7562,
											"end": 7564,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7551,
											"end": 7560,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7547,
											"end": 7565,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7539,
											"end": 7565,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7539,
											"end": 7565,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7611,
											"end": 7620,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7605,
											"end": 7609,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7601,
											"end": 7621,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7597,
											"end": 7598,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7586,
											"end": 7595,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7582,
											"end": 7599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7575,
											"end": 7622,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7639,
											"end": 7770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 7765,
											"end": 7769,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7639,
											"end": 7770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 7639,
											"end": 7770,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7639,
											"end": 7770,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 7639,
											"end": 7770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7631,
											"end": 7770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7631,
											"end": 7770,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7358,
											"end": 7777,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7949,
											"end": 7953,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7987,
											"end": 7989,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7976,
											"end": 7985,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7972,
											"end": 7990,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7964,
											"end": 7990,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7964,
											"end": 7990,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8036,
											"end": 8045,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8030,
											"end": 8034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8026,
											"end": 8046,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8022,
											"end": 8023,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8011,
											"end": 8020,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8007,
											"end": 8024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8000,
											"end": 8047,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8064,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 8190,
											"end": 8194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8064,
											"end": 8195,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 8064,
											"end": 8195,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8064,
											"end": 8195,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 8064,
											"end": 8195,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8056,
											"end": 8195,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8056,
											"end": 8195,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7783,
											"end": 8202,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8374,
											"end": 8378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8412,
											"end": 8414,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8401,
											"end": 8410,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8397,
											"end": 8415,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8389,
											"end": 8415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8389,
											"end": 8415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8461,
											"end": 8470,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8455,
											"end": 8459,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8451,
											"end": 8471,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8447,
											"end": 8448,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8436,
											"end": 8445,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8432,
											"end": 8449,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8425,
											"end": 8472,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8489,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 8615,
											"end": 8619,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8489,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 8489,
											"end": 8620,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8489,
											"end": 8620,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 8489,
											"end": 8620,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8620,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8481,
											"end": 8620,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8208,
											"end": 8627,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8799,
											"end": 8803,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8837,
											"end": 8839,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8826,
											"end": 8835,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8822,
											"end": 8840,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8814,
											"end": 8840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8814,
											"end": 8840,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8886,
											"end": 8895,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8880,
											"end": 8884,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8876,
											"end": 8896,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8872,
											"end": 8873,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8861,
											"end": 8870,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8857,
											"end": 8874,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8850,
											"end": 8897,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8914,
											"end": 9045,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 9040,
											"end": 9044,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8914,
											"end": 9045,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 8914,
											"end": 9045,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8914,
											"end": 9045,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 8914,
											"end": 9045,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8906,
											"end": 9045,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8906,
											"end": 9045,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8633,
											"end": 9052,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9151,
											"end": 9155,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9189,
											"end": 9191,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9178,
											"end": 9187,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9174,
											"end": 9192,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9166,
											"end": 9192,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9166,
											"end": 9192,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9202,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 9270,
											"end": 9271,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9259,
											"end": 9268,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9255,
											"end": 9272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9246,
											"end": 9252,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9202,
											"end": 9273,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 9202,
											"end": 9273,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9202,
											"end": 9273,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 9202,
											"end": 9273,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9058,
											"end": 9280,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9375,
											"end": 9379,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9413,
											"end": 9415,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9402,
											"end": 9411,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9398,
											"end": 9416,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9390,
											"end": 9416,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9390,
											"end": 9416,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9426,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 9490,
											"end": 9491,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9479,
											"end": 9488,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9475,
											"end": 9492,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9466,
											"end": 9472,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9426,
											"end": 9493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 9426,
											"end": 9493,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9426,
											"end": 9493,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 9426,
											"end": 9493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9286,
											"end": 9500,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9639,
											"end": 9645,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9673,
											"end": 9678,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9667,
											"end": 9679,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9657,
											"end": 9679,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9657,
											"end": 9679,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9587,
											"end": 9686,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9776,
											"end": 9787,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9810,
											"end": 9816,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9805,
											"end": 9808,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9798,
											"end": 9817,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9850,
											"end": 9854,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9845,
											"end": 9848,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9841,
											"end": 9855,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9826,
											"end": 9855,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9826,
											"end": 9855,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9692,
											"end": 9861,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9910,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9926,
											"end": 9946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 9944,
											"end": 9945,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9926,
											"end": 9946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 9926,
											"end": 9946,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9926,
											"end": 9946,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 9926,
											"end": 9946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9921,
											"end": 9946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9921,
											"end": 9946,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9960,
											"end": 9980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 9978,
											"end": 9979,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9960,
											"end": 9980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 9960,
											"end": 9980,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9960,
											"end": 9980,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 9960,
											"end": 9980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9980,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9980,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10114,
											"end": 10115,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10046,
											"end": 10112,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10042,
											"end": 10116,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10039,
											"end": 10040,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10036,
											"end": 10117,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10033,
											"end": 10140,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10033,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 10033,
											"end": 10140,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 10120,
											"end": 10138,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10033,
											"end": 10140,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 10033,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10164,
											"end": 10165,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10161,
											"end": 10162,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10157,
											"end": 10166,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10150,
											"end": 10166,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10150,
											"end": 10166,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9867,
											"end": 10172,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10178,
											"end": 10363,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 10178,
											"end": 10363,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10218,
											"end": 10219,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10235,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 10253,
											"end": 10254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10235,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 10235,
											"end": 10255,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10235,
											"end": 10255,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 10235,
											"end": 10255,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10230,
											"end": 10255,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10230,
											"end": 10255,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10269,
											"end": 10289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 10287,
											"end": 10288,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10269,
											"end": 10289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 10269,
											"end": 10289,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10269,
											"end": 10289,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 10269,
											"end": 10289,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10264,
											"end": 10289,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10264,
											"end": 10289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10308,
											"end": 10309,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10298,
											"end": 10333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 10298,
											"end": 10333,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10313,
											"end": 10331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 10313,
											"end": 10331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 10313,
											"end": 10331,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10313,
											"end": 10331,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 10313,
											"end": 10331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10298,
											"end": 10333,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 10298,
											"end": 10333,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10355,
											"end": 10356,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10352,
											"end": 10353,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10348,
											"end": 10357,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 10343,
											"end": 10357,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10343,
											"end": 10357,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10178,
											"end": 10363,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10178,
											"end": 10363,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10178,
											"end": 10363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10178,
											"end": 10363,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10178,
											"end": 10363,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10369,
											"end": 10717,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 10369,
											"end": 10717,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10409,
											"end": 10416,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10432,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 10450,
											"end": 10451,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10432,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 10432,
											"end": 10452,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10432,
											"end": 10452,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 10432,
											"end": 10452,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10427,
											"end": 10452,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10427,
											"end": 10452,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10466,
											"end": 10486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 10484,
											"end": 10485,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10466,
											"end": 10486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 10466,
											"end": 10486,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10466,
											"end": 10486,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 10466,
											"end": 10486,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10461,
											"end": 10486,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10461,
											"end": 10486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10654,
											"end": 10655,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10586,
											"end": 10652,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10582,
											"end": 10656,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 10579,
											"end": 10580,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10657,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10571,
											"end": 10572,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10564,
											"end": 10573,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10557,
											"end": 10574,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10553,
											"end": 10658,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10550,
											"end": 10681,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10550,
											"end": 10681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 10550,
											"end": 10681,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10661,
											"end": 10679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 10661,
											"end": 10679,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 10661,
											"end": 10679,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10661,
											"end": 10679,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 10661,
											"end": 10679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10550,
											"end": 10681,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 10550,
											"end": 10681,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10709,
											"end": 10710,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10706,
											"end": 10707,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10702,
											"end": 10711,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 10691,
											"end": 10711,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10691,
											"end": 10711,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10369,
											"end": 10717,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10369,
											"end": 10717,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10369,
											"end": 10717,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10369,
											"end": 10717,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10369,
											"end": 10717,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10723,
											"end": 10914,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 10723,
											"end": 10914,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10763,
											"end": 10767,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10783,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 10801,
											"end": 10802,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10783,
											"end": 10803,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 10783,
											"end": 10803,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10783,
											"end": 10803,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 10783,
											"end": 10803,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10778,
											"end": 10803,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10778,
											"end": 10803,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 10835,
											"end": 10836,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 10817,
											"end": 10837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10812,
											"end": 10837,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10812,
											"end": 10837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10856,
											"end": 10857,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10853,
											"end": 10854,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10850,
											"end": 10858,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10847,
											"end": 10881,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10847,
											"end": 10881,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 10847,
											"end": 10881,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10861,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 10861,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 10861,
											"end": 10879,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10861,
											"end": 10879,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 10861,
											"end": 10879,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10847,
											"end": 10881,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 10847,
											"end": 10881,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10906,
											"end": 10907,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10903,
											"end": 10904,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10899,
											"end": 10908,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10891,
											"end": 10908,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10891,
											"end": 10908,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10914,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10914,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10914,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10914,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10914,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10920,
											"end": 11016,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 10920,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10957,
											"end": 10964,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10986,
											"end": 11010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 11004,
											"end": 11009,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10986,
											"end": 11010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 10986,
											"end": 11010,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10986,
											"end": 11010,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 10986,
											"end": 11010,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10975,
											"end": 11010,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10975,
											"end": 11010,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10920,
											"end": 11016,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10920,
											"end": 11016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10920,
											"end": 11016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10920,
											"end": 11016,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11022,
											"end": 11112,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 11022,
											"end": 11112,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11056,
											"end": 11063,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11099,
											"end": 11104,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11092,
											"end": 11105,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11085,
											"end": 11106,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11074,
											"end": 11106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11074,
											"end": 11106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11022,
											"end": 11112,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11022,
											"end": 11112,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11022,
											"end": 11112,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11022,
											"end": 11112,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11118,
											"end": 11244,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 11118,
											"end": 11244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11155,
											"end": 11162,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11195,
											"end": 11237,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11188,
											"end": 11193,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11184,
											"end": 11238,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11173,
											"end": 11238,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11173,
											"end": 11238,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11118,
											"end": 11244,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11118,
											"end": 11244,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11118,
											"end": 11244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11118,
											"end": 11244,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11250,
											"end": 11327,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 11250,
											"end": 11327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11287,
											"end": 11294,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11316,
											"end": 11321,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11305,
											"end": 11321,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11250,
											"end": 11327,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11250,
											"end": 11327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11250,
											"end": 11327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11250,
											"end": 11327,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11333,
											"end": 11419,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 11333,
											"end": 11419,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11368,
											"end": 11375,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11408,
											"end": 11412,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 11401,
											"end": 11406,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11397,
											"end": 11413,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11386,
											"end": 11413,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11386,
											"end": 11413,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11333,
											"end": 11419,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11333,
											"end": 11419,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11333,
											"end": 11419,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11333,
											"end": 11419,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11425,
											"end": 11732,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 11425,
											"end": 11732,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11493,
											"end": 11494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11503,
											"end": 11616,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 11503,
											"end": 11616,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11517,
											"end": 11523,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11514,
											"end": 11515,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11511,
											"end": 11524,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11503,
											"end": 11616,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11503,
											"end": 11616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 11503,
											"end": 11616,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11602,
											"end": 11603,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11597,
											"end": 11600,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11593,
											"end": 11604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11587,
											"end": 11605,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11583,
											"end": 11584,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11578,
											"end": 11581,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11574,
											"end": 11585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11567,
											"end": 11606,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11539,
											"end": 11541,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11536,
											"end": 11537,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11532,
											"end": 11542,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11527,
											"end": 11542,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11527,
											"end": 11542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11503,
											"end": 11616,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 11503,
											"end": 11616,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11503,
											"end": 11616,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 11503,
											"end": 11616,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11634,
											"end": 11640,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11631,
											"end": 11632,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11628,
											"end": 11641,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 11625,
											"end": 11726,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11625,
											"end": 11726,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 11625,
											"end": 11726,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11714,
											"end": 11715,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11705,
											"end": 11711,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11700,
											"end": 11703,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11696,
											"end": 11712,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11689,
											"end": 11716,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11625,
											"end": 11726,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 11625,
											"end": 11726,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11474,
											"end": 11732,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11425,
											"end": 11732,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11425,
											"end": 11732,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11425,
											"end": 11732,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11425,
											"end": 11732,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11738,
											"end": 12058,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 11738,
											"end": 12058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11782,
											"end": 11788,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11819,
											"end": 11820,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 11813,
											"end": 11817,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11809,
											"end": 11821,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 11799,
											"end": 11821,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11799,
											"end": 11821,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11866,
											"end": 11867,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11860,
											"end": 11864,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11856,
											"end": 11868,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11887,
											"end": 11905,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11877,
											"end": 11958,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 11877,
											"end": 11958,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11943,
											"end": 11947,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 11935,
											"end": 11941,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11931,
											"end": 11948,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11921,
											"end": 11948,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11921,
											"end": 11948,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11877,
											"end": 11958,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 11877,
											"end": 11958,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12005,
											"end": 12007,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11997,
											"end": 12003,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11994,
											"end": 12008,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11974,
											"end": 11992,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11971,
											"end": 12009,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11968,
											"end": 12052,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11968,
											"end": 12052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 11968,
											"end": 12052,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12024,
											"end": 12042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 12024,
											"end": 12042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 12024,
											"end": 12042,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 12024,
											"end": 12042,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 12024,
											"end": 12042,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11968,
											"end": 12052,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 11968,
											"end": 12052,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11789,
											"end": 12058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11738,
											"end": 12058,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11738,
											"end": 12058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11738,
											"end": 12058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11738,
											"end": 12058,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 12064,
											"end": 12244,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 12064,
											"end": 12244,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12112,
											"end": 12189,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12109,
											"end": 12110,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12102,
											"end": 12190,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12209,
											"end": 12213,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 12206,
											"end": 12207,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12199,
											"end": 12214,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12233,
											"end": 12237,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 12230,
											"end": 12231,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12223,
											"end": 12238,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12250,
											"end": 12430,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 12250,
											"end": 12430,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12298,
											"end": 12375,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12295,
											"end": 12296,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12288,
											"end": 12376,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12395,
											"end": 12399,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 12392,
											"end": 12393,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12385,
											"end": 12400,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12419,
											"end": 12423,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 12416,
											"end": 12417,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12409,
											"end": 12424,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12436,
											"end": 12616,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 12436,
											"end": 12616,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12484,
											"end": 12561,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12481,
											"end": 12482,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12474,
											"end": 12562,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12581,
											"end": 12585,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 12578,
											"end": 12579,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12571,
											"end": 12586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12605,
											"end": 12609,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 12602,
											"end": 12603,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12595,
											"end": 12610,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12745,
											"end": 12862,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 12745,
											"end": 12862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12854,
											"end": 12855,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12851,
											"end": 12852,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 12844,
											"end": 12856,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12868,
											"end": 12970,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 12868,
											"end": 12970,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12909,
											"end": 12915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12960,
											"end": 12962,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 12956,
											"end": 12963,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 12951,
											"end": 12953,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 12944,
											"end": 12949,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 12940,
											"end": 12954,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12936,
											"end": 12964,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 12926,
											"end": 12964,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12926,
											"end": 12964,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12868,
											"end": 12970,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12868,
											"end": 12970,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12868,
											"end": 12970,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12868,
											"end": 12970,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 12976,
											"end": 13198,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 12976,
											"end": 13198,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13116,
											"end": 13150,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 13112,
											"end": 13113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13104,
											"end": 13110,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13100,
											"end": 13114,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13093,
											"end": 13151,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13185,
											"end": 13190,
											"name": "PUSH",
											"source": 4,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13180,
											"end": 13182,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13172,
											"end": 13178,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13168,
											"end": 13183,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13161,
											"end": 13191,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12976,
											"end": 13198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12976,
											"end": 13198,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13204,
											"end": 13425,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 13204,
											"end": 13425,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13344,
											"end": 13378,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 13340,
											"end": 13341,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13332,
											"end": 13338,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13328,
											"end": 13342,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13321,
											"end": 13379,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13413,
											"end": 13417,
											"name": "PUSH",
											"source": 4,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13408,
											"end": 13410,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13400,
											"end": 13406,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13396,
											"end": 13411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13389,
											"end": 13418,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13204,
											"end": 13425,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13204,
											"end": 13425,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13431,
											"end": 13610,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 13431,
											"end": 13610,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13571,
											"end": 13602,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 13567,
											"end": 13568,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13559,
											"end": 13565,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13555,
											"end": 13569,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13548,
											"end": 13603,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13431,
											"end": 13610,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13431,
											"end": 13610,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13616,
											"end": 13841,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 13616,
											"end": 13841,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13756,
											"end": 13790,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 13752,
											"end": 13753,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13744,
											"end": 13750,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13740,
											"end": 13754,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13733,
											"end": 13791,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13825,
											"end": 13833,
											"name": "PUSH",
											"source": 4,
											"value": "616C616E63650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13820,
											"end": 13822,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13812,
											"end": 13818,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13808,
											"end": 13823,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13801,
											"end": 13834,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13616,
											"end": 13841,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13616,
											"end": 13841,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 13847,
											"end": 14071,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 13847,
											"end": 14071,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13987,
											"end": 14021,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 13983,
											"end": 13984,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13975,
											"end": 13981,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13971,
											"end": 13985,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13964,
											"end": 14022,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14056,
											"end": 14063,
											"name": "PUSH",
											"source": 4,
											"value": "6472657373000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14051,
											"end": 14053,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14043,
											"end": 14049,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14039,
											"end": 14054,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14032,
											"end": 14064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13847,
											"end": 14071,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13847,
											"end": 14071,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14077,
											"end": 14300,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 14077,
											"end": 14300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14217,
											"end": 14251,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 14213,
											"end": 14214,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14205,
											"end": 14211,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14201,
											"end": 14215,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14194,
											"end": 14252,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14286,
											"end": 14292,
											"name": "PUSH",
											"source": 4,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14281,
											"end": 14283,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14273,
											"end": 14279,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14269,
											"end": 14284,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14262,
											"end": 14293,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14077,
											"end": 14300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14077,
											"end": 14300,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14306,
											"end": 14530,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 14306,
											"end": 14530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14446,
											"end": 14480,
											"name": "PUSH",
											"source": 4,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 14442,
											"end": 14443,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14434,
											"end": 14440,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14430,
											"end": 14444,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14423,
											"end": 14481,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14515,
											"end": 14522,
											"name": "PUSH",
											"source": 4,
											"value": "207A65726F000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14510,
											"end": 14512,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 14502,
											"end": 14508,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14498,
											"end": 14513,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 14491,
											"end": 14523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 14306,
											"end": 14530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14306,
											"end": 14530,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14536,
											"end": 14658,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 14536,
											"end": 14658,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14609,
											"end": 14633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 14627,
											"end": 14632,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14609,
											"end": 14633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 14609,
											"end": 14633,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14609,
											"end": 14633,
											"name": "tag",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 14609,
											"end": 14633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14602,
											"end": 14607,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14599,
											"end": 14634,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 14589,
											"end": 14652,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 14589,
											"end": 14652,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14648,
											"end": 14649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14645,
											"end": 14646,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14638,
											"end": 14650,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14589,
											"end": 14652,
											"name": "tag",
											"source": 4,
											"value": "320"
										},
										{
											"begin": 14589,
											"end": 14652,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14536,
											"end": 14658,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14536,
											"end": 14658,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 14664,
											"end": 14786,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 14664,
											"end": 14786,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14737,
											"end": 14761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 14755,
											"end": 14760,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14737,
											"end": 14761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 14737,
											"end": 14761,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 14737,
											"end": 14761,
											"name": "tag",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 14737,
											"end": 14761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14730,
											"end": 14735,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 14727,
											"end": 14762,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 14717,
											"end": 14780,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 14717,
											"end": 14780,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14776,
											"end": 14777,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14773,
											"end": 14774,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14766,
											"end": 14778,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 14717,
											"end": 14780,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 14717,
											"end": 14780,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14664,
											"end": 14786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14664,
											"end": 14786,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"ownerAddress_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"contractAddress_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe0a322a0097bf6f09ef4cfab472fd39a8b69bcfa99ab7868859aa16c7ee65d4b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e951c7e203a910e8e7271bdb5ae7578a55671448bb375169238c9fa3e17bad0\",\"dweb:/ipfs/QmZvG7MXbf942XW6WzjbHGvGZ4nnmw1WXuAm4zizvswB63\"]},\".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\".deps/npm/@openzeppelin/contracts@4.7.2/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": ".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": ".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": ".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": ".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": ".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 29,
								"contract": ".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol:ERC20",
								"label": "_ownerAddress",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 31,
								"contract": ".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol:ERC20",
								"label": "_contractAddress",
								"offset": 0,
								"slot": "6",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts@4.7.2/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts@4.7.2/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts@4.7.2/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							755
						],
						"ERC20": [
							630
						],
						"IERC20": [
							708
						],
						"IERC20Metadata": [
							733
						]
					},
					"id": 631,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:0"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 709,
							"src": "130:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 734,
							"src": "153:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts@4.7.2/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 756,
							"src": "195:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1421:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "1421:7:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 708,
										"src": "1430:6:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "1430:6:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "IERC20Metadata",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 733,
										"src": "1438:14:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1438:14:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "230:1172:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 630,
							"linearizedBaseContracts": [
								630,
								733,
								708,
								755
							],
							"name": "ERC20",
							"nameLocation": "1412:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1495:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1459:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1467:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1459:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1478:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1567:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1511:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 20,
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1519:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1511:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 19,
											"keyType": {
												"id": 17,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1538:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1530:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1549:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1601:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1585:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1585:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1635:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1620:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1620:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1661:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1646:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1646:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 29,
									"mutability": "mutable",
									"name": "_ownerAddress",
									"nameLocation": "1690:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1674:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 28,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1674:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "_contractAddress",
									"nameLocation": "1725:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1709:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 30,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1709:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2156:141:0",
										"statements": [
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 43,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2166:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 44,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "2174:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2166:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "2166:13:0"
											},
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "2189:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "2199:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2189:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2189:17:0"
											},
											{
												"expression": {
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 51,
														"name": "_ownerAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "2216:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 52,
														"name": "ownerAddress_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "2232:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2216:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "2216:29:0"
											},
											{
												"expression": {
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 55,
														"name": "_contractAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "2255:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 56,
														"name": "contractAddress_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "2274:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2255:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "2255:35:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1748:298:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 60,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2077:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2063:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 33,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2063:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2098:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2084:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 35,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2084:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "ownerAddress_",
												"nameLocation": "2115:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2107:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2107:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "contractAddress_",
												"nameLocation": "2138:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2130:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2130:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2062:93:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2156:0:0"
									},
									"scope": 630,
									"src": "2051:246:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										720
									],
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "2431:29:0",
										"statements": [
											{
												"expression": {
													"id": 67,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "2448:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 66,
												"id": 68,
												"nodeType": "Return",
												"src": "2441:12:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2303:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2371:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 63,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2398:8:0"
									},
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:2:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "2416:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 64,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2416:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2415:15:0"
									},
									"scope": 630,
									"src": "2362:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										726
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2644:31:0",
										"statements": [
											{
												"expression": {
													"id": 77,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 76,
												"id": 78,
												"nodeType": "Return",
												"src": "2654:14:0"
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "2466:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2582:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 73,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2611:8:0"
									},
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2588:2:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2629:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 74,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2629:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2628:15:0"
									},
									"scope": 630,
									"src": "2573:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										732
									],
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "3364:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3381:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 86,
												"id": 88,
												"nodeType": "Return",
												"src": "3374:9:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2681:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3308:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 83,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3339:8:0"
									},
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3316:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "3357:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 84,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3357:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3356:7:0"
									},
									"scope": 630,
									"src": "3299:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										657
									],
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "3520:36:0",
										"statements": [
											{
												"expression": {
													"id": 97,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "3537:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 96,
												"id": 98,
												"nodeType": "Return",
												"src": "3530:19:0"
											}
										]
									},
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "3396:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3459:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 93,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3493:8:0"
									},
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3470:2:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "3511:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3510:9:0"
									},
									"scope": 630,
									"src": "3450:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										665
									],
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3697:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 109,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "3714:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 111,
													"indexExpression": {
														"id": 110,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "3724:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3714:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 108,
												"id": 112,
												"nodeType": "Return",
												"src": "3707:25:0"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "3562:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3623:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3670:8:0"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3641:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3633:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3633:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3632:17:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3688:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3688:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3687:9:0"
									},
									"scope": 630,
									"src": "3614:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										675
									],
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "4020:104:0",
										"statements": [
											{
												"assignments": [
													126
												],
												"declarations": [
													{
														"constant": false,
														"id": 126,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4038:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 138,
														"src": "4030:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 125,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4030:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 129,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 127,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "4046:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4046:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4030:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 131,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "4078:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 132,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "4085:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 133,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "4089:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 130,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "4068:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4068:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 135,
												"nodeType": "ExpressionStatement",
												"src": "4068:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4113:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 124,
												"id": 137,
												"nodeType": "Return",
												"src": "4106:11:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3745:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3944:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 121,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3996:8:0"
									},
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3961:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "3953:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3953:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3973:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "3965:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3965:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3952:28:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "4014:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 122,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4014:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4013:6:0"
									},
									"scope": 630,
									"src": "3935:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										685
									],
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "4280:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 150,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "4297:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 152,
														"indexExpression": {
															"id": 151,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "4309:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4297:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 154,
													"indexExpression": {
														"id": 153,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "4316:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4297:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 149,
												"id": 155,
												"nodeType": "Return",
												"src": "4290:34:0"
											}
										]
									},
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "4130:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4191:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 146,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4253:8:0"
									},
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4209:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "4201:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4201:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4224:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "4216:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4216:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4200:32:0"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "4271:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4270:9:0"
									},
									"scope": 630,
									"src": "4182:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										695
									],
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "4728:108:0",
										"statements": [
											{
												"assignments": [
													169
												],
												"declarations": [
													{
														"constant": false,
														"id": 169,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4746:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 181,
														"src": "4738:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 168,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4738:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 172,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 170,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "4754:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4754:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4738:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 174,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "4785:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 175,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "4792:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 176,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "4801:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 173,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "4776:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4776:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "4776:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4825:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 167,
												"id": 180,
												"nodeType": "Return",
												"src": "4818:11:0"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "4337:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4648:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 164,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4704:8:0"
									},
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "4656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4656:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4681:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "4673:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4673:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4655:33:0"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "4722:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4722:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4721:6:0"
									},
									"scope": 630,
									"src": "4639:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										707
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "5531:153:0",
										"statements": [
											{
												"assignments": [
													196
												],
												"declarations": [
													{
														"constant": false,
														"id": 196,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5549:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 214,
														"src": "5541:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 195,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5541:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 199,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 197,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "5559:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5559:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5541:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 201,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "5597:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 202,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "5603:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 203,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "5612:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 200,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "5581:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5581:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "5581:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 207,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "5639:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 208,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "5645:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 209,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "5649:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 206,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 391,
														"src": "5629:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5629:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "5629:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5673:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 194,
												"id": 213,
												"nodeType": "Return",
												"src": "5666:11:0"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "4842:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5407:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 191,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5507:8:0"
									},
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5437:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5429:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5429:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5459:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5451:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5479:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5471:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5419:72:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "5525:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 192,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5525:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5524:6:0"
									},
									"scope": 630,
									"src": "5398:286:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 243,
										"nodeType": "Block",
										"src": "6173:140:0",
										"statements": [
											{
												"assignments": [
													226
												],
												"declarations": [
													{
														"constant": false,
														"id": 226,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6191:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 243,
														"src": "6183:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 225,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6183:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 229,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 227,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "6199:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6199:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6183:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 231,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "6230:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 232,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "6237:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 234,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 226,
																		"src": "6256:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 235,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 218,
																		"src": "6263:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 233,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "6246:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6246:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 237,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6274:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6246:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 230,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "6221:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6221:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 240,
												"nodeType": "ExpressionStatement",
												"src": "6221:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6302:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 224,
												"id": 242,
												"nodeType": "Return",
												"src": "6295:11:0"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "5690:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "6088:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6114:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "6106:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6106:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "6131:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "6123:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6123:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6105:37:0"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "6167:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 222,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6167:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6166:6:0"
									},
									"scope": 630,
									"src": "6079:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "6899:328:0",
										"statements": [
											{
												"assignments": [
													255
												],
												"declarations": [
													{
														"constant": false,
														"id": 255,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6917:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 284,
														"src": "6909:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 254,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6909:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 258,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 256,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 745,
														"src": "6925:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6925:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6909:28:0"
											},
											{
												"assignments": [
													260
												],
												"declarations": [
													{
														"constant": false,
														"id": 260,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6955:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 284,
														"src": "6947:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 259,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6947:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 265,
												"initialValue": {
													"arguments": [
														{
															"id": 262,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "6984:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 263,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "6991:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 261,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "6974:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6974:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6947:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 267,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "7017:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 268,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 249,
																"src": "7037:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7017:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7054:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 266,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7009:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7009:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 272,
												"nodeType": "ExpressionStatement",
												"src": "7009:85:0"
											},
											{
												"id": 281,
												"nodeType": "UncheckedBlock",
												"src": "7104:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 274,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 255,
																	"src": "7137:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 275,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 247,
																	"src": "7144:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 276,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "7153:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 277,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 249,
																		"src": "7172:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7153:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 273,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "7128:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7128:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 280,
														"nodeType": "ExpressionStatement",
														"src": "7128:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7216:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 253,
												"id": 283,
												"nodeType": "Return",
												"src": "7209:11:0"
											}
										]
									},
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "6319:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6809:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6835:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "6827:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6827:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6852:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "6844:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6844:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6826:42:0"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "6893:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 251,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6893:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6892:6:0"
									},
									"scope": 630,
									"src": "6800:427:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "7789:1068:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 296,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 288,
																"src": "7807:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7823:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7815:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 297,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7815:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7815:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7807:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7827:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7799:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7799:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "7799:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 306,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "7885:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7899:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7891:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 307,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7891:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7891:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7885:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7903:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 305,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7877:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7877:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 314,
												"nodeType": "ExpressionStatement",
												"src": "7877:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 316,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "7973:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 317,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "7979:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 318,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "7983:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 315,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "7952:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7952:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 320,
												"nodeType": "ExpressionStatement",
												"src": "7952:38:0"
											},
											{
												"assignments": [
													322
												],
												"declarations": [
													{
														"constant": false,
														"id": 322,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "8009:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 390,
														"src": "8001:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 321,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8001:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 326,
												"initialValue": {
													"baseExpression": {
														"id": 323,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "8023:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 325,
													"indexExpression": {
														"id": 324,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "8033:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8023:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8001:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 328,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 322,
																"src": "8056:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 329,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 292,
																"src": "8071:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8056:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8079:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 327,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8048:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8048:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 333,
												"nodeType": "ExpressionStatement",
												"src": "8048:72:0"
											},
											{
												"id": 342,
												"nodeType": "UncheckedBlock",
												"src": "8130:73:0",
												"statements": [
													{
														"expression": {
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 334,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "8154:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 336,
																"indexExpression": {
																	"id": 335,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 288,
																	"src": "8164:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8154:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 337,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "8172:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 338,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "8186:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8172:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8154:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 341,
														"nodeType": "ExpressionStatement",
														"src": "8154:38:0"
													}
												]
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 343,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "8533:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 344,
														"name": "_ownerAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "8539:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8533:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 376,
													"nodeType": "Block",
													"src": "8614:147:0",
													"statements": [
														{
															"assignments": [
																354
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 354,
																	"mutability": "mutable",
																	"name": "tax",
																	"nameLocation": "8636:3:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 376,
																	"src": "8628:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 353,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8628:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 361,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 355,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 292,
																				"src": "8643:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "35",
																				"id": 356,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8652:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_5_by_1",
																					"typeString": "int_const 5"
																				},
																				"value": "5"
																			},
																			"src": "8643:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 358,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8642:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8656:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "8642:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8628:31:0"
														},
														{
															"expression": {
																"id": 368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 362,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 15,
																		"src": "8673:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 364,
																	"indexExpression": {
																		"id": 363,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "8683:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8673:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 365,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 292,
																		"src": "8690:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 366,
																		"name": "tax",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 354,
																		"src": "8699:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8690:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8673:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 369,
															"nodeType": "ExpressionStatement",
															"src": "8673:29:0"
														},
														{
															"expression": {
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 370,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 15,
																		"src": "8716:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 372,
																	"indexExpression": {
																		"id": 371,
																		"name": "_contractAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 31,
																		"src": "8726:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8716:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 373,
																	"name": "tax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "8747:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8716:34:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 375,
															"nodeType": "ExpressionStatement",
															"src": "8716:34:0"
														}
													]
												},
												"id": 377,
												"nodeType": "IfStatement",
												"src": "8530:231:0",
												"trueBody": {
													"id": 352,
													"nodeType": "Block",
													"src": "8553:48:0",
													"statements": [
														{
															"expression": {
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 346,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 15,
																		"src": "8567:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 348,
																	"indexExpression": {
																		"id": 347,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 290,
																		"src": "8577:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8567:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 349,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "8584:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8567:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 351,
															"nodeType": "ExpressionStatement",
															"src": "8567:23:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 379,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "8785:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 380,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "8791:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 381,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "8795:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 378,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8776:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8776:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "EmitStatement",
												"src": "8771:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 385,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "8833:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "8839:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 387,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "8843:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 384,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "8813:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8813:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "8813:37:0"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "7233:443:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "7690:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7717:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "7709:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7709:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7739:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "7731:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7731:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7759:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "7751:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7699:72:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7789:0:0"
									},
									"scope": 630,
									"src": "7681:1176:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "9198:324:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 400,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "9216:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9235:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9227:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 401,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9227:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 404,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9227:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9216:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9239:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9208:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9208:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "9208:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9313:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9305:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 410,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9305:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9305:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 414,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "9317:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "9326:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 409,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "9284:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9284:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "9284:49:0"
											},
											{
												"expression": {
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 418,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "9344:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 419,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "9360:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9344:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 421,
												"nodeType": "ExpressionStatement",
												"src": "9344:22:0"
											},
											{
												"expression": {
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 422,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "9376:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 424,
														"indexExpression": {
															"id": 423,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "9386:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9376:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 425,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "9398:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9376:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "9376:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9436:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 430,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9428:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 429,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9428:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9428:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 433,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "9440:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 434,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "9449:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 428,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "9419:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9419:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 436,
												"nodeType": "EmitStatement",
												"src": "9414:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9495:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9487:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 438,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9487:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9487:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "9499:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "9508:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 437,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "9467:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9467:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "9467:48:0"
											}
										]
									},
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "8863:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9142:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9156:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "9148:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9148:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9173:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "9165:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9147:33:0"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9198:0:0"
									},
									"scope": 630,
									"src": "9133:389:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "9907:511:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 456,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "9925:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9944:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9936:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 457,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9936:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9925:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 462,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9948:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 455,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9917:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9917:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 464,
												"nodeType": "ExpressionStatement",
												"src": "9917:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "10016:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10033:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10025:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 467,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10025:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10025:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "10037:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 465,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "9995:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9995:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "9995:49:0"
											},
											{
												"assignments": [
													475
												],
												"declarations": [
													{
														"constant": false,
														"id": 475,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "10063:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 518,
														"src": "10055:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 474,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10055:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 479,
												"initialValue": {
													"baseExpression": {
														"id": 476,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "10080:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 478,
													"indexExpression": {
														"id": 477,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "10090:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10080:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10055:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 481,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 475,
																"src": "10116:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 482,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "10134:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10116:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10142:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 480,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10108:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10108:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "10108:71:0"
											},
											{
												"id": 495,
												"nodeType": "UncheckedBlock",
												"src": "10189:79:0",
												"statements": [
													{
														"expression": {
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 487,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "10213:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 489,
																"indexExpression": {
																	"id": 488,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 450,
																	"src": "10223:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10213:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 490,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "10234:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 491,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "10251:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10234:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10213:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 494,
														"nodeType": "ExpressionStatement",
														"src": "10213:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 496,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "10277:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 497,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "10293:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10277:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "10277:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 501,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "10324:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 504,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10341:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10333:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 502,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10333:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10333:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "10345:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 500,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "10315:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10315:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "EmitStatement",
												"src": "10310:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 510,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 450,
															"src": "10383:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10400:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10392:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 511,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10392:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10392:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 452,
															"src": "10404:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 509,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "10363:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10363:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "ExpressionStatement",
												"src": "10363:48:0"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "9528:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9851:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9865:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "9857:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9857:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9882:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "9874:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9856:33:0"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9907:0:0"
									},
									"scope": 630,
									"src": "9842:576:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "10954:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 530,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "10972:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10989:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10981:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 531,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10981:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10981:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10972:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10993:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 529,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10964:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10964:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "10964:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 540,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "11050:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 543,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11069:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11061:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 541,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11061:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11061:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11050:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11073:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 539,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11042:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11042:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 548,
												"nodeType": "ExpressionStatement",
												"src": "11042:68:0"
											},
											{
												"expression": {
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 549,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "11121:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 552,
															"indexExpression": {
																"id": 550,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 522,
																"src": "11133:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11121:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 553,
														"indexExpression": {
															"id": 551,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "11140:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11121:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 554,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "11151:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11121:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "11121:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 558,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "11181:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 559,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "11188:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 560,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "11197:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 557,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "11172:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11172:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "EmitStatement",
												"src": "11167:37:0"
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "10424:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10850:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10876:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "10868:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10868:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10899:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "10891:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10924:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "10916:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10916:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10858:78:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10954:0:0"
									},
									"scope": 630,
									"src": "10841:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "11612:321:0",
										"statements": [
											{
												"assignments": [
													575
												],
												"declarations": [
													{
														"constant": false,
														"id": 575,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11630:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 606,
														"src": "11622:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 574,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11622:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 580,
												"initialValue": {
													"arguments": [
														{
															"id": 577,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 567,
															"src": "11659:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 578,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "11666:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 576,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 157,
														"src": "11649:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11649:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11622:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 581,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "11688:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11713:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 583,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11713:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 582,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11708:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 585,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11708:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11708:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11688:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 605,
												"nodeType": "IfStatement",
												"src": "11684:243:0",
												"trueBody": {
													"id": 604,
													"nodeType": "Block",
													"src": "11727:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 589,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 575,
																			"src": "11749:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 590,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 571,
																			"src": "11769:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "11749:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 592,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11777:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 588,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11741:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11741:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 594,
															"nodeType": "ExpressionStatement",
															"src": "11741:68:0"
														},
														{
															"id": 603,
															"nodeType": "UncheckedBlock",
															"src": "11823:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 596,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 567,
																				"src": "11860:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 597,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 569,
																				"src": "11867:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 600,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 598,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 575,
																					"src": "11876:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 599,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 571,
																					"src": "11895:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11876:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 595,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 564,
																			"src": "11851:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11851:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 602,
																	"nodeType": "ExpressionStatement",
																	"src": "11851:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "11217:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11501:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11534:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "11526:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11526:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11557:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "11549:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11549:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11582:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "11574:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11516:78:0"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11612:0:0"
									},
									"scope": 630,
									"src": "11492:441:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "12636:2:0",
										"statements": []
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "11939:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "12526:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12564:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "12556:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12556:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12586:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "12578:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12578:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12606:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "12598:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12546:72:0"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12636:0:0"
									},
									"scope": 630,
									"src": "12517:121:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "13344:2:0",
										"statements": []
									},
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "12644:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "13235:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13272:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "13264:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13264:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13294:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "13286:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13286:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13314:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "13306:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13306:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13254:72:0"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13344:0:0"
									},
									"scope": 630,
									"src": "13226:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 631,
							"src": "1403:11945:0",
							"usedErrors": []
						}
					],
					"src": "105:13244:0"
				},
				"id": 0
			},
			".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							708
						]
					},
					"id": 709,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 632,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 633,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 708,
							"linearizedBaseContracts": [
								708
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 642,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 651,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 657,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 708,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 665,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 708,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 675,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 672,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 708,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 685,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 708,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 695,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 692,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 708,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 696,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 707,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 704,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 708,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 709,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							708
						],
						"IERC20Metadata": [
							733
						]
					},
					"id": 734,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 710,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:2"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts@4.7.2/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 711,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 734,
							"sourceUnit": 709,
							"src": "135:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 713,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 708,
										"src": "305:6:2"
									},
									"id": 714,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 712,
								"nodeType": "StructuredDocumentation",
								"src": "160:116:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 733,
							"linearizedBaseContracts": [
								733,
								708
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 720,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:2"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "416:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 717,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:2"
									},
									"scope": 733,
									"src": "377:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 726,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:2"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "539:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 723,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:2"
									},
									"scope": 733,
									"src": "498:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 732,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:2"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "673:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 729,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:2"
									},
									"scope": 733,
									"src": "630:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 734,
							"src": "277:405:2",
							"usedErrors": []
						}
					],
					"src": "110:573:2"
				},
				"id": 2
			},
			".deps/npm/@openzeppelin/contracts@4.7.2/utils/Context.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts@4.7.2/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 735,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 736,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 755,
							"linearizedBaseContracts": [
								755
							],
							"name": "Context",
							"nameLocation": "626:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 744,
										"nodeType": "Block",
										"src": "702:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 741,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 740,
												"id": 743,
												"nodeType": "Return",
												"src": "712:17:3"
											}
										]
									},
									"id": 745,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 737,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:3"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "693:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:3"
									},
									"scope": 755,
									"src": "640:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "809:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 750,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 749,
												"id": 752,
												"nodeType": "Return",
												"src": "819:15:3"
											}
										]
									},
									"id": 754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:3"
									},
									"returnParameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "793:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 747,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:3"
									},
									"scope": 755,
									"src": "742:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 756,
							"src": "608:235:3",
							"usedErrors": []
						}
					],
					"src": "86:758:3"
				},
				"id": 3
			}
		}
	}
}